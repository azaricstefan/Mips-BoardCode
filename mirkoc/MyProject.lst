;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/7/2017 9:04:50 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x2B6D0000  	11117
0x0008	0x2D950000  	11669
0x000C	0x2D950000  	11669
0x0010	0x2D950000  	11669
0x0014	0x2D950000  	11669
0x0018	0x2D950000  	11669
0x001C	0x2D950000  	11669
0x0020	0x2D950000  	11669
0x0024	0x2D950000  	11669
0x0028	0x2D950000  	11669
0x002C	0x2D950000  	11669
0x0030	0x2D950000  	11669
0x0034	0x2D950000  	11669
0x0038	0x2D950000  	11669
0x003C	0x2D950000  	11669
0x0040	0x2D950000  	11669
0x0044	0x2D950000  	11669
0x0048	0x2D950000  	11669
0x004C	0x2C0D0000  	11277
0x0050	0x2D950000  	11669
0x0054	0x2D950000  	11669
0x0058	0x2D950000  	11669
0x005C	0x2D950000  	11669
0x0060	0x2D950000  	11669
0x0064	0x2D950000  	11669
0x0068	0x2D950000  	11669
0x006C	0x2D950000  	11669
0x0070	0x2D950000  	11669
0x0074	0x2D950000  	11669
0x0078	0x2D950000  	11669
0x007C	0x2D950000  	11669
0x0080	0x2D950000  	11669
0x0084	0x2D950000  	11669
0x0088	0x2D950000  	11669
0x008C	0x2D950000  	11669
0x0090	0x2D950000  	11669
0x0094	0x2D950000  	11669
0x0098	0x2D950000  	11669
0x009C	0x2D950000  	11669
0x00A0	0x2D950000  	11669
0x00A4	0x2D950000  	11669
0x00A8	0x2D950000  	11669
0x00AC	0x2D950000  	11669
0x00B0	0x2BB50000  	11189
0x00B4	0x2BE10000  	11233
0x00B8	0x2D950000  	11669
0x00BC	0x2D950000  	11669
0x00C0	0x2D950000  	11669
0x00C4	0x2D950000  	11669
0x00C8	0x2D950000  	11669
0x00CC	0x2D950000  	11669
0x00D0	0x2D950000  	11669
0x00D4	0x2D950000  	11669
0x00D8	0x2AA10000  	10913
0x00DC	0x2D950000  	11669
0x00E0	0x2D950000  	11669
0x00E4	0x2D950000  	11669
0x00E8	0x2D950000  	11669
0x00EC	0x2D950000  	11669
0x00F0	0x2D950000  	11669
0x00F4	0x2D950000  	11669
0x00F8	0x2D950000  	11669
0x00FC	0x2D950000  	11669
0x0100	0x2D950000  	11669
0x0104	0x2D950000  	11669
0x0108	0x2D950000  	11669
0x010C	0x2D950000  	11669
0x0110	0x2D950000  	11669
0x0114	0x2D950000  	11669
0x0118	0x2D950000  	11669
0x011C	0x2D950000  	11669
0x0120	0x2D950000  	11669
0x0124	0x2D950000  	11669
0x0128	0x2D950000  	11669
0x012C	0x2D950000  	11669
0x0130	0x2D950000  	11669
0x0134	0x2D950000  	11669
0x0138	0x2D950000  	11669
0x013C	0x2D950000  	11669
0x0140	0x2D950000  	11669
0x0144	0x2D950000  	11669
0x0148	0x2D950000  	11669
0x014C	0x2D950000  	11669
0x0150	0x2D950000  	11669
0x0154	0x2D950000  	11669
0x0158	0x2D950000  	11669
0x015C	0x2D950000  	11669
0x0160	0x2D950000  	11669
0x0164	0x2D950000  	11669
0x0168	0x2D950000  	11669
0x016C	0x2D950000  	11669
0x0170	0x2D950000  	11669
0x0174	0x2D950000  	11669
0x0178	0x2D950000  	11669
0x017C	0x2D950000  	11669
0x0180	0x2D950000  	11669
0x0184	0x2D950000  	11669
; end of ____SysVT
_main:
;main.c, 69 :: 		void main() {
0x2B6C	0xF7FFFDE8  BL	10048
0x2B70	0xF000F914  BL	11676
0x2B74	0xF000FA80  BL	12408
0x2B78	0xF000F8FA  BL	11632
0x2B7C	0xF000FA3C  BL	12280
;main.c, 70 :: 		GPIO_Digital_Output(&GPIOE_BASE, _GPIO_PINMASK_15|_GPIO_PINMASK_12);
0x2B80	0xF2490100  MOVW	R1, #36864
0x2B84	0x4808    LDR	R0, [PC, #32]
0x2B86	0xF7FEF8B3  BL	_GPIO_Digital_Output+0
;main.c, 71 :: 		LD1=1;
0x2B8A	0x2101    MOVS	R1, #1
0x2B8C	0xB249    SXTB	R1, R1
0x2B8E	0x4807    LDR	R0, [PC, #28]
0x2B90	0x6001    STR	R1, [R0, #0]
;main.c, 72 :: 		initProg();
0x2B92	0xF7FFFBE7  BL	_initProg+0
;main.c, 74 :: 		LD1=1; LD2=1;
0x2B96	0x2101    MOVS	R1, #1
0x2B98	0xB249    SXTB	R1, R1
0x2B9A	0x4804    LDR	R0, [PC, #16]
0x2B9C	0x6001    STR	R1, [R0, #0]
0x2B9E	0x4804    LDR	R0, [PC, #16]
0x2BA0	0x6001    STR	R1, [R0, #0]
;main.c, 75 :: 		while(1)
L_main6:
;main.c, 86 :: 		asm {WFI};
0x2BA2	0xBF30    WFI
;main.c, 87 :: 		}
0x2BA4	0xE7FD    B	L_main6
;main.c, 88 :: 		}
L_end_main:
L__main_end_loop:
0x2BA6	0xE7FE    B	L__main_end_loop
0x2BA8	0x10004002  	GPIOE_BASE+0
0x2BAC	0x02B04242  	ODR12_GPIOE_ODR_bit+0
0x2BB0	0x02BC4242  	ODR15_GPIOE_ODR_bit+0
; end of _main
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x2328	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x232A	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x232E	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x2332	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x2336	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x2338	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x233C	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x233E	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x2340	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x2342	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x2346	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x234A	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x234C	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x2350	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x2352	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x2354	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x2358	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x235C	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x235E	0xB001    ADD	SP, SP, #4
0x2360	0x4770    BX	LR
; end of ___FillZeros
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0CF0	0xB081    SUB	SP, SP, #4
0x0CF2	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x0CF6	0x4A04    LDR	R2, [PC, #16]
0x0CF8	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0CFA	0xF7FFFE99  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x0CFE	0xF8DDE000  LDR	LR, [SP, #0]
0x0D02	0xB001    ADD	SP, SP, #4
0x0D04	0x4770    BX	LR
0x0D06	0xBF00    NOP
0x0D08	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0A30	0xB084    SUB	SP, SP, #16
0x0A32	0xF8CDE000  STR	LR, [SP, #0]
0x0A36	0xB28D    UXTH	R5, R1
0x0A38	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x0A3A	0x4B86    LDR	R3, [PC, #536]
0x0A3C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x0A40	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x0A42	0x4618    MOV	R0, R3
0x0A44	0xF7FFFE86  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x0A48	0xF1B50FFF  CMP	R5, #255
0x0A4C	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x0A4E	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x0A50	0x4B81    LDR	R3, [PC, #516]
0x0A52	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x0A56	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x0A58	0x4B80    LDR	R3, [PC, #512]
0x0A5A	0x429E    CMP	R6, R3
0x0A5C	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x0A5E	0xF2455355  MOVW	R3, #21845
0x0A62	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x0A66	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x0A68	0x1D3D    ADDS	R5, R7, #4
0x0A6A	0x682C    LDR	R4, [R5, #0]
0x0A6C	0xF06F03FF  MVN	R3, #255
0x0A70	0xEA040303  AND	R3, R4, R3, LSL #0
0x0A74	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x0A76	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x0A7A	0x682C    LDR	R4, [R5, #0]
0x0A7C	0xF64F73FF  MOVW	R3, #65535
0x0A80	0xEA440303  ORR	R3, R4, R3, LSL #0
0x0A84	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x0A86	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x0A88	0x2E42    CMP	R6, #66
0x0A8A	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x0A8C	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x0A8E	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x0A90	0xF64F73FF  MOVW	R3, #65535
0x0A94	0x429D    CMP	R5, R3
0x0A96	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x0A98	0x4B70    LDR	R3, [PC, #448]
0x0A9A	0x429E    CMP	R6, R3
0x0A9C	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x0A9E	0xF04F3355  MOV	R3, #1431655765
0x0AA2	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x0AA4	0x1D3C    ADDS	R4, R7, #4
0x0AA6	0x2300    MOVS	R3, #0
0x0AA8	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x0AAA	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x0AAE	0xF04F33FF  MOV	R3, #-1
0x0AB2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x0AB4	0xE0CA    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x0AB6	0x2E42    CMP	R6, #66
0x0AB8	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x0ABA	0x2300    MOVS	R3, #0
0x0ABC	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x0ABE	0xE0C5    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x0AC0	0xF0060301  AND	R3, R6, #1
0x0AC4	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x0AC6	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x0AC8	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x0ACA	0xF0060308  AND	R3, R6, #8
0x0ACE	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x0AD0	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x0AD2	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x0AD4	0xF0060304  AND	R3, R6, #4
0x0AD8	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x0ADA	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x0ADC	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x0ADE	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x0AE0	0xF4062301  AND	R3, R6, #528384
0x0AE4	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x0AE6	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x0AE8	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x0AEA	0xF4066300  AND	R3, R6, #2048
0x0AEE	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x0AF0	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x0AF2	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x0AF4	0xF4066380  AND	R3, R6, #1024
0x0AF8	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x0AFA	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x0AFC	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x0AFE	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x0B00	0xF0060320  AND	R3, R6, #32
0x0B04	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x0B06	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x0B08	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x0B0A	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x0B0C	0xF4067380  AND	R3, R6, #256
0x0B10	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x0B12	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x0B14	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x0B16	0xF0060380  AND	R3, R6, #128
0x0B1A	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x0B1C	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x0B1E	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x0B20	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x0B22	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x0B26	0x9201    STR	R2, [SP, #4]
0x0B28	0xFA1FF985  UXTH	R9, R5
0x0B2C	0x46B0    MOV	R8, R6
0x0B2E	0x4606    MOV	R6, R0
0x0B30	0x4618    MOV	R0, R3
0x0B32	0x460A    MOV	R2, R1
0x0B34	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x0B36	0xF1BA0F10  CMP	R10, #16
0x0B3A	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x0B3E	0xF04F0301  MOV	R3, #1
0x0B42	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x0B46	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x0B4A	0x42A3    CMP	R3, R4
0x0B4C	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x0B50	0xEA4F044A  LSL	R4, R10, #1
0x0B54	0xF04F0303  MOV	R3, #3
0x0B58	0x40A3    LSLS	R3, R4
0x0B5A	0x43DC    MVN	R4, R3
0x0B5C	0x683B    LDR	R3, [R7, #0]
0x0B5E	0x4023    ANDS	R3, R4
0x0B60	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x0B62	0xEA4F034A  LSL	R3, R10, #1
0x0B66	0xFA06F403  LSL	R4, R6, R3
0x0B6A	0x683B    LDR	R3, [R7, #0]
0x0B6C	0x4323    ORRS	R3, R4
0x0B6E	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x0B70	0xF008030C  AND	R3, R8, #12
0x0B74	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x0B76	0xF2070508  ADDW	R5, R7, #8
0x0B7A	0xEA4F044A  LSL	R4, R10, #1
0x0B7E	0xF04F0303  MOV	R3, #3
0x0B82	0x40A3    LSLS	R3, R4
0x0B84	0x43DC    MVN	R4, R3
0x0B86	0x682B    LDR	R3, [R5, #0]
0x0B88	0x4023    ANDS	R3, R4
0x0B8A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x0B8C	0xF2070508  ADDW	R5, R7, #8
0x0B90	0xEA4F034A  LSL	R3, R10, #1
0x0B94	0xFA02F403  LSL	R4, R2, R3
0x0B98	0x682B    LDR	R3, [R5, #0]
0x0B9A	0x4323    ORRS	R3, R4
0x0B9C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x0B9E	0x1D3D    ADDS	R5, R7, #4
0x0BA0	0xFA1FF48A  UXTH	R4, R10
0x0BA4	0xF04F0301  MOV	R3, #1
0x0BA8	0x40A3    LSLS	R3, R4
0x0BAA	0x43DC    MVN	R4, R3
0x0BAC	0x682B    LDR	R3, [R5, #0]
0x0BAE	0x4023    ANDS	R3, R4
0x0BB0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x0BB2	0x1D3D    ADDS	R5, R7, #4
0x0BB4	0xFA1FF48A  UXTH	R4, R10
0x0BB8	0xB28B    UXTH	R3, R1
0x0BBA	0xFA03F404  LSL	R4, R3, R4
0x0BBE	0xB2A4    UXTH	R4, R4
0x0BC0	0x682B    LDR	R3, [R5, #0]
0x0BC2	0x4323    ORRS	R3, R4
0x0BC4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x0BC6	0xF207050C  ADDW	R5, R7, #12
0x0BCA	0xFA1FF38A  UXTH	R3, R10
0x0BCE	0x005C    LSLS	R4, R3, #1
0x0BD0	0xB2A4    UXTH	R4, R4
0x0BD2	0xF04F0303  MOV	R3, #3
0x0BD6	0x40A3    LSLS	R3, R4
0x0BD8	0x43DC    MVN	R4, R3
0x0BDA	0x682B    LDR	R3, [R5, #0]
0x0BDC	0x4023    ANDS	R3, R4
0x0BDE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x0BE0	0xF207050C  ADDW	R5, R7, #12
0x0BE4	0xEA4F034A  LSL	R3, R10, #1
0x0BE8	0xFA00F403  LSL	R4, R0, R3
0x0BEC	0x682B    LDR	R3, [R5, #0]
0x0BEE	0x4323    ORRS	R3, R4
0x0BF0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x0BF2	0xF0080308  AND	R3, R8, #8
0x0BF6	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x0BF8	0xF4080370  AND	R3, R8, #15728640
0x0BFC	0x0D1B    LSRS	R3, R3, #20
0x0BFE	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x0C02	0xF1BA0F07  CMP	R10, #7
0x0C06	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x0C08	0xF2070324  ADDW	R3, R7, #36
0x0C0C	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x0C0E	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x0C12	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x0C14	0xF2070320  ADDW	R3, R7, #32
0x0C18	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x0C1A	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x0C1C	0x00AC    LSLS	R4, R5, #2
0x0C1E	0xF04F030F  MOV	R3, #15
0x0C22	0x40A3    LSLS	R3, R4
0x0C24	0x43DC    MVN	R4, R3
0x0C26	0x9B02    LDR	R3, [SP, #8]
0x0C28	0x681B    LDR	R3, [R3, #0]
0x0C2A	0xEA030404  AND	R4, R3, R4, LSL #0
0x0C2E	0x9B02    LDR	R3, [SP, #8]
0x0C30	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x0C32	0xF89D400C  LDRB	R4, [SP, #12]
0x0C36	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x0C38	0x409C    LSLS	R4, R3
0x0C3A	0x9B02    LDR	R3, [SP, #8]
0x0C3C	0x681B    LDR	R3, [R3, #0]
0x0C3E	0xEA430404  ORR	R4, R3, R4, LSL #0
0x0C42	0x9B02    LDR	R3, [SP, #8]
0x0C44	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x0C46	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x0C4A	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x0C4C	0xF8DDE000  LDR	LR, [SP, #0]
0x0C50	0xB004    ADD	SP, SP, #16
0x0C52	0x4770    BX	LR
0x0C54	0xFC00FFFF  	#-1024
0x0C58	0x0000FFFF  	#-65536
0x0C5C	0x00140008  	#524308
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x0754	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x0756	0x491E    LDR	R1, [PC, #120]
0x0758	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x075C	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x075E	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x0760	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0762	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x0764	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0766	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x0768	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x076A	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x076C	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x076E	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0770	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0772	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0774	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0776	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0778	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x077A	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x077C	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x077E	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0780	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x0782	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x0786	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0788	0x4912    LDR	R1, [PC, #72]
0x078A	0x4288    CMP	R0, R1
0x078C	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x078E	0x4912    LDR	R1, [PC, #72]
0x0790	0x4288    CMP	R0, R1
0x0792	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x0794	0x4911    LDR	R1, [PC, #68]
0x0796	0x4288    CMP	R0, R1
0x0798	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x079A	0x4911    LDR	R1, [PC, #68]
0x079C	0x4288    CMP	R0, R1
0x079E	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x07A0	0x4910    LDR	R1, [PC, #64]
0x07A2	0x4288    CMP	R0, R1
0x07A4	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x07A6	0x4910    LDR	R1, [PC, #64]
0x07A8	0x4288    CMP	R0, R1
0x07AA	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x07AC	0x490F    LDR	R1, [PC, #60]
0x07AE	0x4288    CMP	R0, R1
0x07B0	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x07B2	0x490F    LDR	R1, [PC, #60]
0x07B4	0x4288    CMP	R0, R1
0x07B6	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x07B8	0x490E    LDR	R1, [PC, #56]
0x07BA	0x4288    CMP	R0, R1
0x07BC	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x07BE	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x07C0	0x490D    LDR	R1, [PC, #52]
0x07C2	0x6809    LDR	R1, [R1, #0]
0x07C4	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x07C8	0x490B    LDR	R1, [PC, #44]
0x07CA	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x07CC	0xB001    ADD	SP, SP, #4
0x07CE	0x4770    BX	LR
0x07D0	0xFC00FFFF  	#-1024
0x07D4	0x00004002  	#1073872896
0x07D8	0x04004002  	#1073873920
0x07DC	0x08004002  	#1073874944
0x07E0	0x0C004002  	#1073875968
0x07E4	0x10004002  	#1073876992
0x07E8	0x14004002  	#1073878016
0x07EC	0x18004002  	#1073879040
0x07F0	0x1C004002  	#1073880064
0x07F4	0x20004002  	#1073881088
0x07F8	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_initProg:
;main.c, 16 :: 		void initProg()
0x2364	0xB082    SUB	SP, SP, #8
0x2366	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 18 :: 		GPIO_Digital_Output(&GPIOE_BASE, _GPIO_PINMASK_15|_GPIO_PINMASK_12);
0x236A	0xF2490100  MOVW	R1, #36864
0x236E	0x4818    LDR	R0, [PC, #96]
0x2370	0xF7FEFCBE  BL	_GPIO_Digital_Output+0
;main.c, 19 :: 		InitTimerUs();
0x2374	0xF7FFF9EC  BL	_InitTimerUs+0
;main.c, 20 :: 		InitTimerMs();
0x2378	0xF7FFFB38  BL	_InitTimerMs+0
;main.c, 22 :: 		TIM2_CR1.CEN = 1;
0x237C	0x2101    MOVS	R1, #1
0x237E	0xB249    SXTB	R1, R1
0x2380	0x4814    LDR	R0, [PC, #80]
0x2382	0x6001    STR	R1, [R0, #0]
;main.c, 23 :: 		TIM3_CR1.CEN = 1;
0x2384	0x4814    LDR	R0, [PC, #80]
0x2386	0x6001    STR	R1, [R0, #0]
;main.c, 24 :: 		initLCD();
0x2388	0xF7FFFB5C  BL	_initLCD+0
;main.c, 25 :: 		initUltrasonic();
0x238C	0xF7FFFAA0  BL	_initUltrasonic+0
;main.c, 26 :: 		LD1=0; LD2=1;
0x2390	0x2100    MOVS	R1, #0
0x2392	0xB249    SXTB	R1, R1
0x2394	0x4811    LDR	R0, [PC, #68]
0x2396	0x6001    STR	R1, [R0, #0]
0x2398	0x2101    MOVS	R1, #1
0x239A	0xB249    SXTB	R1, R1
0x239C	0x4810    LDR	R0, [PC, #64]
0x239E	0x9001    STR	R0, [SP, #4]
0x23A0	0x6001    STR	R1, [R0, #0]
;main.c, 27 :: 		BME280_Init();
0x23A2	0xF7FFFAA9  BL	_BME280_Init+0
;main.c, 28 :: 		LD1=0; LD2=0;
0x23A6	0x2100    MOVS	R1, #0
0x23A8	0xB249    SXTB	R1, R1
0x23AA	0x480C    LDR	R0, [PC, #48]
0x23AC	0x6001    STR	R1, [R0, #0]
0x23AE	0x9801    LDR	R0, [SP, #4]
0x23B0	0x6001    STR	R1, [R0, #0]
;main.c, 29 :: 		USART2_Init();
0x23B2	0xF7FFF9FD  BL	_USART2_Init+0
;main.c, 30 :: 		RTCInit();
0x23B6	0xF7FFFCEF  BL	_RTCInit+0
;main.c, 31 :: 		TIM2_CR1.CEN = 0;
0x23BA	0x2100    MOVS	R1, #0
0x23BC	0xB249    SXTB	R1, R1
0x23BE	0x4805    LDR	R0, [PC, #20]
0x23C0	0x6001    STR	R1, [R0, #0]
;main.c, 32 :: 		TIM3_CR1.CEN = 0;
0x23C2	0x4805    LDR	R0, [PC, #20]
0x23C4	0x6001    STR	R1, [R0, #0]
;main.c, 34 :: 		}
L_end_initProg:
0x23C6	0xF8DDE000  LDR	LR, [SP, #0]
0x23CA	0xB002    ADD	SP, SP, #8
0x23CC	0x4770    BX	LR
0x23CE	0xBF00    NOP
0x23D0	0x10004002  	GPIOE_BASE+0
0x23D4	0x00004200  	TIM2_CR1+0
0x23D8	0x80004200  	TIM3_CR1+0
0x23DC	0x02B04242  	ODR12_GPIOE_ODR_bit+0
0x23E0	0x02BC4242  	ODR15_GPIOE_ODR_bit+0
; end of _initProg
_InitTimerUs:
;timer.c, 8 :: 		void InitTimerUs(){
0x1750	0xB081    SUB	SP, SP, #4
0x1752	0xF8CDE000  STR	LR, [SP, #0]
;timer.c, 9 :: 		RCC_APB1ENR.TIM2EN = 1;
0x1756	0x2101    MOVS	R1, #1
0x1758	0xB249    SXTB	R1, R1
0x175A	0x480F    LDR	R0, [PC, #60]
0x175C	0x6001    STR	R1, [R0, #0]
;timer.c, 10 :: 		TIM2_CR1.CEN = 0;
0x175E	0x2100    MOVS	R1, #0
0x1760	0xB249    SXTB	R1, R1
0x1762	0x480E    LDR	R0, [PC, #56]
0x1764	0x6001    STR	R1, [R0, #0]
;timer.c, 11 :: 		TIM2_PSC = 0;
0x1766	0x2100    MOVS	R1, #0
0x1768	0x480D    LDR	R0, [PC, #52]
0x176A	0x6001    STR	R1, [R0, #0]
;timer.c, 12 :: 		TIM2_ARR = 59;
0x176C	0x213B    MOVS	R1, #59
0x176E	0x480D    LDR	R0, [PC, #52]
0x1770	0x6001    STR	R1, [R0, #0]
;timer.c, 13 :: 		NVIC_IntEnable(IVT_INT_TIM2);
0x1772	0xF240002C  MOVW	R0, #44
0x1776	0xF7FFFCAB  BL	_NVIC_IntEnable+0
;timer.c, 14 :: 		NVIC_SetIntPriority(IVT_INT_TIM2, _NVIC_INT_PRIORITY_LVL1);
0x177A	0x2101    MOVS	R1, #1
0x177C	0x202C    MOVS	R0, #44
0x177E	0xF7FFFC2B  BL	_NVIC_SetIntPriority+0
;timer.c, 15 :: 		TIM2_DIER.UIE = 1;
0x1782	0x2101    MOVS	R1, #1
0x1784	0xB249    SXTB	R1, R1
0x1786	0x4808    LDR	R0, [PC, #32]
0x1788	0x6001    STR	R1, [R0, #0]
;timer.c, 16 :: 		tick_us=0;
0x178A	0x2100    MOVS	R1, #0
0x178C	0x4807    LDR	R0, [PC, #28]
0x178E	0x6001    STR	R1, [R0, #0]
;timer.c, 17 :: 		}
L_end_InitTimerUs:
0x1790	0xF8DDE000  LDR	LR, [SP, #0]
0x1794	0xB001    ADD	SP, SP, #4
0x1796	0x4770    BX	LR
0x1798	0x08004247  	RCC_APB1ENR+0
0x179C	0x00004200  	TIM2_CR1+0
0x17A0	0x00284000  	TIM2_PSC+0
0x17A4	0x002C4000  	TIM2_ARR+0
0x17A8	0x01804200  	TIM2_DIER+0
0x17AC	0x01542000  	_tick_us+0
; end of _InitTimerUs
_NVIC_IntEnable:
;__Lib_System_4XX.c, 171 :: 		
; ivt start address is: 0 (R0)
0x10D0	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 183 :: 		
0x10D2	0x2804    CMP	R0, #4
0x10D4	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 188 :: 		
0x10D6	0x4919    LDR	R1, [PC, #100]
0x10D8	0x6809    LDR	R1, [R1, #0]
0x10DA	0xF4413280  ORR	R2, R1, #65536
0x10DE	0x4917    LDR	R1, [PC, #92]
0x10E0	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 189 :: 		
0x10E2	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 190 :: 		
; ivt start address is: 0 (R0)
0x10E4	0x2805    CMP	R0, #5
0x10E6	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 195 :: 		
0x10E8	0x4914    LDR	R1, [PC, #80]
0x10EA	0x6809    LDR	R1, [R1, #0]
0x10EC	0xF4413200  ORR	R2, R1, #131072
0x10F0	0x4912    LDR	R1, [PC, #72]
0x10F2	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 196 :: 		
0x10F4	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 197 :: 		
; ivt start address is: 0 (R0)
0x10F6	0x2806    CMP	R0, #6
0x10F8	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 202 :: 		
0x10FA	0x4910    LDR	R1, [PC, #64]
0x10FC	0x6809    LDR	R1, [R1, #0]
0x10FE	0xF4412280  ORR	R2, R1, #262144
0x1102	0x490E    LDR	R1, [PC, #56]
0x1104	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 203 :: 		
0x1106	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 204 :: 		
; ivt start address is: 0 (R0)
0x1108	0x280F    CMP	R0, #15
0x110A	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 209 :: 		
0x110C	0x490C    LDR	R1, [PC, #48]
0x110E	0x6809    LDR	R1, [R1, #0]
0x1110	0xF0410202  ORR	R2, R1, #2
0x1114	0x490A    LDR	R1, [PC, #40]
0x1116	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 210 :: 		
0x1118	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 211 :: 		
; ivt start address is: 0 (R0)
0x111A	0x2810    CMP	R0, #16
0x111C	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 216 :: 		
0x111E	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x1122	0x0961    LSRS	R1, R4, #5
0x1124	0x008A    LSLS	R2, R1, #2
0x1126	0x4907    LDR	R1, [PC, #28]
0x1128	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 217 :: 		
0x112A	0xF004021F  AND	R2, R4, #31
0x112E	0xF04F0101  MOV	R1, #1
0x1132	0x4091    LSLS	R1, R2
0x1134	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 218 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 219 :: 		
L_end_NVIC_IntEnable:
0x1136	0xB001    ADD	SP, SP, #4
0x1138	0x4770    BX	LR
0x113A	0xBF00    NOP
0x113C	0xED24E000  	SCB_SHCRS+0
0x1140	0xE010E000  	STK_CTRL+0
0x1144	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_NVIC_SetIntPriority:
;__Lib_System_4XX.c, 233 :: 		
; priority start address is: 4 (R1)
; ivt start address is: 0 (R0)
0x0FD8	0xB081    SUB	SP, SP, #4
; priority end address is: 4 (R1)
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
; priority start address is: 4 (R1)
;__Lib_System_4XX.c, 237 :: 		
0x0FDA	0x280F    CMP	R0, #15
0x0FDC	0xD937    BLS	L_NVIC_SetIntPriority15
;__Lib_System_4XX.c, 238 :: 		
0x0FDE	0xF2A00410  SUBW	R4, R0, #16
0x0FE2	0xB224    SXTH	R4, R4
; ivt end address is: 0 (R0)
0x0FE4	0x10A2    ASRS	R2, R4, #2
0x0FE6	0xB212    SXTH	R2, R2
0x0FE8	0x0093    LSLS	R3, R2, #2
0x0FEA	0x4A1A    LDR	R2, [PC, #104]
0x0FEC	0x18D2    ADDS	R2, R2, R3
; p start address is: 0 (R0)
0x0FEE	0x4610    MOV	R0, R2
;__Lib_System_4XX.c, 239 :: 		
0x0FF0	0x2304    MOVS	R3, #4
0x0FF2	0xB21B    SXTH	R3, R3
0x0FF4	0xFB94F2F3  SDIV	R2, R4, R3
0x0FF8	0xFB034212  MLS	R2, R3, R2, R4
0x0FFC	0xB212    SXTH	R2, R2
0x0FFE	0x00D2    LSLS	R2, R2, #3
0x1000	0xB212    SXTH	R2, R2
0x1002	0x1D12    ADDS	R2, R2, #4
; shift start address is: 16 (R4)
0x1004	0xB2D4    UXTB	R4, R2
;__Lib_System_4XX.c, 240 :: 		
0x1006	0xF001020F  AND	R2, R1, #15
0x100A	0xB2D2    UXTB	R2, R2
0x100C	0xB17A    CBZ	R2, L_NVIC_SetIntPriority16
;__Lib_System_4XX.c, 241 :: 		
0x100E	0x220F    MOVS	R2, #15
0x1010	0xB212    SXTH	R2, R2
0x1012	0x40A2    LSLS	R2, R4
0x1014	0xB212    SXTH	R2, R2
0x1016	0x43D3    MVN	R3, R2
0x1018	0xB21B    SXTH	R3, R3
0x101A	0x6802    LDR	R2, [R0, #0]
0x101C	0x401A    ANDS	R2, R3
0x101E	0x6002    STR	R2, [R0, #0]
;__Lib_System_4XX.c, 242 :: 		
0x1020	0xB2CA    UXTB	R2, R1
; priority end address is: 4 (R1)
0x1022	0xFA02F304  LSL	R3, R2, R4
; shift end address is: 16 (R4)
0x1026	0x6802    LDR	R2, [R0, #0]
0x1028	0x431A    ORRS	R2, R3
0x102A	0x6002    STR	R2, [R0, #0]
; p end address is: 0 (R0)
;__Lib_System_4XX.c, 243 :: 		
0x102C	0xE00F    B	L_NVIC_SetIntPriority17
L_NVIC_SetIntPriority16:
;__Lib_System_4XX.c, 245 :: 		
; shift start address is: 16 (R4)
; p start address is: 0 (R0)
; priority start address is: 4 (R1)
0x102E	0x220F    MOVS	R2, #15
0x1030	0xB212    SXTH	R2, R2
0x1032	0x40A2    LSLS	R2, R4
0x1034	0xB212    SXTH	R2, R2
0x1036	0x43D3    MVN	R3, R2
0x1038	0xB21B    SXTH	R3, R3
0x103A	0x6802    LDR	R2, [R0, #0]
0x103C	0x401A    ANDS	R2, R3
0x103E	0x6002    STR	R2, [R0, #0]
;__Lib_System_4XX.c, 246 :: 		
0x1040	0xB2CB    UXTB	R3, R1
; priority end address is: 4 (R1)
0x1042	0x1F22    SUBS	R2, R4, #4
0x1044	0xB212    SXTH	R2, R2
; shift end address is: 16 (R4)
0x1046	0x4093    LSLS	R3, R2
0x1048	0x6802    LDR	R2, [R0, #0]
0x104A	0x431A    ORRS	R2, R3
0x104C	0x6002    STR	R2, [R0, #0]
; p end address is: 0 (R0)
;__Lib_System_4XX.c, 247 :: 		
L_NVIC_SetIntPriority17:
;__Lib_System_4XX.c, 248 :: 		
L_NVIC_SetIntPriority15:
;__Lib_System_4XX.c, 249 :: 		
L_end_NVIC_SetIntPriority:
0x104E	0xB001    ADD	SP, SP, #4
0x1050	0x4770    BX	LR
0x1052	0xBF00    NOP
0x1054	0xE400E000  	NVIC_IPR0+0
; end of _NVIC_SetIntPriority
_InitTimerMs:
;timer.c, 33 :: 		void InitTimerMs(){
0x19EC	0xB081    SUB	SP, SP, #4
0x19EE	0xF8CDE000  STR	LR, [SP, #0]
;timer.c, 34 :: 		RCC_APB1ENR.TIM3EN = 1;
0x19F2	0x2101    MOVS	R1, #1
0x19F4	0xB249    SXTB	R1, R1
0x19F6	0x480E    LDR	R0, [PC, #56]
0x19F8	0x6001    STR	R1, [R0, #0]
;timer.c, 35 :: 		TIM3_CR1.CEN = 0;
0x19FA	0x2100    MOVS	R1, #0
0x19FC	0xB249    SXTB	R1, R1
0x19FE	0x480D    LDR	R0, [PC, #52]
0x1A00	0x6001    STR	R1, [R0, #0]
;timer.c, 36 :: 		TIM3_PSC = 0;
0x1A02	0x2100    MOVS	R1, #0
0x1A04	0x480C    LDR	R0, [PC, #48]
0x1A06	0x6001    STR	R1, [R0, #0]
;timer.c, 37 :: 		TIM3_ARR = 59999;
0x1A08	0xF64E215F  MOVW	R1, #59999
0x1A0C	0x480B    LDR	R0, [PC, #44]
0x1A0E	0x6001    STR	R1, [R0, #0]
;timer.c, 38 :: 		NVIC_IntEnable(IVT_INT_TIM3);
0x1A10	0xF240002D  MOVW	R0, #45
0x1A14	0xF7FFFB5C  BL	_NVIC_IntEnable+0
;timer.c, 39 :: 		NVIC_SetIntPriority(IVT_INT_TIM3, _NVIC_INT_PRIORITY_LVL1);
0x1A18	0x2101    MOVS	R1, #1
0x1A1A	0x202D    MOVS	R0, #45
0x1A1C	0xF7FFFADC  BL	_NVIC_SetIntPriority+0
;timer.c, 40 :: 		TIM3_DIER.UIE = 1;
0x1A20	0x2101    MOVS	R1, #1
0x1A22	0xB249    SXTB	R1, R1
0x1A24	0x4806    LDR	R0, [PC, #24]
0x1A26	0x6001    STR	R1, [R0, #0]
;timer.c, 41 :: 		}
L_end_InitTimerMs:
0x1A28	0xF8DDE000  LDR	LR, [SP, #0]
0x1A2C	0xB001    ADD	SP, SP, #4
0x1A2E	0x4770    BX	LR
0x1A30	0x08044247  	RCC_APB1ENR+0
0x1A34	0x80004200  	TIM3_CR1+0
0x1A38	0x04284000  	TIM3_PSC+0
0x1A3C	0x042C4000  	TIM3_ARR+0
0x1A40	0x81804200  	TIM3_DIER+0
; end of _InitTimerMs
_initLCD:
;lcd.c, 29 :: 		void initLCD()
0x1A44	0xB081    SUB	SP, SP, #4
0x1A46	0xF8CDE000  STR	LR, [SP, #0]
;lcd.c, 31 :: 		GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0  | _GPIO_PINMASK_1);
0x1A4A	0x2103    MOVS	R1, #3
0x1A4C	0x480A    LDR	R0, [PC, #40]
0x1A4E	0xF7FFF94F  BL	_GPIO_Digital_Output+0
;lcd.c, 32 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_10 | _GPIO_PINMASK_11);
0x1A52	0xF6404100  MOVW	R1, #3072
0x1A56	0x4809    LDR	R0, [PC, #36]
0x1A58	0xF7FFF94A  BL	_GPIO_Digital_Output+0
;lcd.c, 33 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_13);
0x1A5C	0xF2420100  MOVW	R1, #8192
0x1A60	0x4807    LDR	R0, [PC, #28]
0x1A62	0xF7FFF945  BL	_GPIO_Digital_Output+0
;lcd.c, 34 :: 		GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_7);
0x1A66	0xF2400180  MOVW	R1, #128
0x1A6A	0x4806    LDR	R0, [PC, #24]
0x1A6C	0xF7FFF940  BL	_GPIO_Digital_Output+0
;lcd.c, 35 :: 		}
L_end_initLCD:
0x1A70	0xF8DDE000  LDR	LR, [SP, #0]
0x1A74	0xB001    ADD	SP, SP, #4
0x1A76	0x4770    BX	LR
0x1A78	0x00004002  	GPIOA_BASE+0
0x1A7C	0x04004002  	GPIOB_BASE+0
0x1A80	0x08004002  	GPIOC_BASE+0
0x1A84	0x0C004002  	GPIOD_BASE+0
; end of _initLCD
_initUltrasonic:
;ultrasonic.c, 7 :: 		void initUltrasonic() {
0x18D0	0xB081    SUB	SP, SP, #4
0x18D2	0xF8CDE000  STR	LR, [SP, #0]
;ultrasonic.c, 8 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_14);
0x18D6	0xF2440100  MOVW	R1, #16384
0x18DA	0x4806    LDR	R0, [PC, #24]
0x18DC	0xF7FFFA08  BL	_GPIO_Digital_Output+0
;ultrasonic.c, 9 :: 		GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_15);
0x18E0	0xF2480100  MOVW	R1, #32768
0x18E4	0x4803    LDR	R0, [PC, #12]
0x18E6	0xF7FFFB01  BL	_GPIO_Digital_Input+0
;ultrasonic.c, 10 :: 		}
L_end_initUltrasonic:
0x18EA	0xF8DDE000  LDR	LR, [SP, #0]
0x18EE	0xB001    ADD	SP, SP, #4
0x18F0	0x4770    BX	LR
0x18F2	0xBF00    NOP
0x18F4	0x04004002  	GPIOB_BASE+0
; end of _initUltrasonic
_GPIO_Digital_Input:
;__Lib_GPIO_32F4xx.c, 237 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0EEC	0xB081    SUB	SP, SP, #4
0x0EEE	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 238 :: 		
0x0EF2	0xF04F0242  MOV	R2, #66
0x0EF6	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0EF8	0xF7FFFD9A  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 239 :: 		
L_end_GPIO_Digital_Input:
0x0EFC	0xF8DDE000  LDR	LR, [SP, #0]
0x0F00	0xB001    ADD	SP, SP, #4
0x0F02	0x4770    BX	LR
; end of _GPIO_Digital_Input
_BME280_Init:
;bme280.c, 65 :: 		void BME280_Init() {
0x18F8	0xB081    SUB	SP, SP, #4
0x18FA	0xF8CDE000  STR	LR, [SP, #0]
;bme280.c, 67 :: 		I2C3_Init_Advanced(100000, &_GPIO_MODULE_I2C3_PA8_PC9);
0x18FE	0x492B    LDR	R1, [PC, #172]
0x1900	0x482B    LDR	R0, [PC, #172]
0x1902	0xF7FFFBA9  BL	_I2C3_Init_Advanced+0
;bme280.c, 68 :: 		NVIC_SetIntPriority(IVT_INT_I2C3_EV, _NVIC_INT_PRIORITY_LVL0);
0x1906	0x2100    MOVS	R1, #0
0x1908	0x2058    MOVS	R0, #88
0x190A	0xF7FFFB65  BL	_NVIC_SetIntPriority+0
;bme280.c, 69 :: 		NVIC_SetIntPriority(IVT_INT_I2C3_ER, _NVIC_INT_PRIORITY_LVL0);
0x190E	0x2100    MOVS	R1, #0
0x1910	0x2059    MOVS	R0, #89
0x1912	0xF7FFFB61  BL	_NVIC_SetIntPriority+0
;bme280.c, 73 :: 		dig_T1 = BME_Read_DigU(BME280_REG_DIG_T1);
0x1916	0x2088    MOVS	R0, #136
0x1918	0xF7FFFB36  BL	_BME_Read_DigU+0
0x191C	0x4925    LDR	R1, [PC, #148]
0x191E	0x8008    STRH	R0, [R1, #0]
;bme280.c, 74 :: 		dig_T2 = BME_Read_DigS(BME280_REG_DIG_T2);
0x1920	0x208A    MOVS	R0, #138
0x1922	0xF7FFF9BD  BL	_BME_Read_DigS+0
0x1926	0x4924    LDR	R1, [PC, #144]
0x1928	0x8008    STRH	R0, [R1, #0]
;bme280.c, 75 :: 		dig_T3 = BME_Read_DigS(BME280_REG_DIG_T3);
0x192A	0x208C    MOVS	R0, #140
0x192C	0xF7FFF9B8  BL	_BME_Read_DigS+0
0x1930	0x4922    LDR	R1, [PC, #136]
0x1932	0x8008    STRH	R0, [R1, #0]
;bme280.c, 77 :: 		dig_P1 = BME_Read_DigU(BME280_REG_DIG_P1);
0x1934	0x208E    MOVS	R0, #142
0x1936	0xF7FFFB27  BL	_BME_Read_DigU+0
0x193A	0x4921    LDR	R1, [PC, #132]
0x193C	0x8008    STRH	R0, [R1, #0]
;bme280.c, 78 :: 		dig_P2 = BME_Read_DigS(BME280_REG_DIG_P2);
0x193E	0x2090    MOVS	R0, #144
0x1940	0xF7FFF9AE  BL	_BME_Read_DigS+0
0x1944	0x491F    LDR	R1, [PC, #124]
0x1946	0x8008    STRH	R0, [R1, #0]
;bme280.c, 79 :: 		dig_P3 = BME_Read_DigS(BME280_REG_DIG_P3);
0x1948	0x2092    MOVS	R0, #146
0x194A	0xF7FFF9A9  BL	_BME_Read_DigS+0
0x194E	0x491E    LDR	R1, [PC, #120]
0x1950	0x8008    STRH	R0, [R1, #0]
;bme280.c, 80 :: 		dig_P4 = BME_Read_DigS(BME280_REG_DIG_P4);
0x1952	0x2094    MOVS	R0, #148
0x1954	0xF7FFF9A4  BL	_BME_Read_DigS+0
0x1958	0x491C    LDR	R1, [PC, #112]
0x195A	0x8008    STRH	R0, [R1, #0]
;bme280.c, 81 :: 		dig_P5 = BME_Read_DigS(BME280_REG_DIG_P5);
0x195C	0x2096    MOVS	R0, #150
0x195E	0xF7FFF99F  BL	_BME_Read_DigS+0
0x1962	0x491B    LDR	R1, [PC, #108]
0x1964	0x8008    STRH	R0, [R1, #0]
;bme280.c, 82 :: 		dig_P6 = BME_Read_DigS(BME280_REG_DIG_P6);
0x1966	0x2098    MOVS	R0, #152
0x1968	0xF7FFF99A  BL	_BME_Read_DigS+0
0x196C	0x4919    LDR	R1, [PC, #100]
0x196E	0x8008    STRH	R0, [R1, #0]
;bme280.c, 83 :: 		dig_P7 = BME_Read_DigS(BME280_REG_DIG_P7);
0x1970	0x209A    MOVS	R0, #154
0x1972	0xF7FFF995  BL	_BME_Read_DigS+0
0x1976	0x4918    LDR	R1, [PC, #96]
0x1978	0x8008    STRH	R0, [R1, #0]
;bme280.c, 84 :: 		dig_P8 = BME_Read_DigS(BME280_REG_DIG_P8);
0x197A	0x209C    MOVS	R0, #156
0x197C	0xF7FFF990  BL	_BME_Read_DigS+0
0x1980	0x4916    LDR	R1, [PC, #88]
0x1982	0x8008    STRH	R0, [R1, #0]
;bme280.c, 85 :: 		dig_P9 = BME_Read_DigS(BME280_REG_DIG_P9);
0x1984	0x209E    MOVS	R0, #158
0x1986	0xF7FFF98B  BL	_BME_Read_DigS+0
0x198A	0x4915    LDR	R1, [PC, #84]
0x198C	0x8008    STRH	R0, [R1, #0]
;bme280.c, 87 :: 		data_[0] = BME280_REG_CONTROL;
0x198E	0x21F4    MOVS	R1, #244
0x1990	0x4814    LDR	R0, [PC, #80]
0x1992	0x7001    STRB	R1, [R0, #0]
;bme280.c, 88 :: 		data_[1] = BME280_REG_PRESSIRE_CONFIG_DATA;
0x1994	0x21B7    MOVS	R1, #183
0x1996	0x4814    LDR	R0, [PC, #80]
0x1998	0x7001    STRB	R1, [R0, #0]
;bme280.c, 89 :: 		BME_Write(2);
0x199A	0x2002    MOVS	R0, #2
0x199C	0xB200    SXTH	R0, R0
0x199E	0xF7FFF95F  BL	_BME_Write+0
;bme280.c, 90 :: 		}
L_end_BME280_Init:
0x19A2	0xF8DDE000  LDR	LR, [SP, #0]
0x19A6	0xB001    ADD	SP, SP, #4
0x19A8	0x4770    BX	LR
0x19AA	0xBF00    NOP
0x19AC	0x2F800000  	__GPIO_MODULE_I2C3_PA8_PC9+0
0x19B0	0x86A00001  	#100000
0x19B4	0x01382000  	_dig_T1+0
0x19B8	0x013A2000  	_dig_T2+0
0x19BC	0x013C2000  	_dig_T3+0
0x19C0	0x013E2000  	_dig_P1+0
0x19C4	0x01402000  	_dig_P2+0
0x19C8	0x01422000  	_dig_P3+0
0x19CC	0x01442000  	_dig_P4+0
0x19D0	0x01462000  	_dig_P5+0
0x19D4	0x01482000  	_dig_P6+0
0x19D8	0x014A2000  	_dig_P7+0
0x19DC	0x014C2000  	_dig_P8+0
0x19E0	0x014E2000  	_dig_P9+0
0x19E4	0x01232000  	_data_+0
0x19E8	0x01242000  	_data_+1
; end of _BME280_Init
_I2C3_Init_Advanced:
;__Lib_I2C_123.c, 362 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x1058	0xB081    SUB	SP, SP, #4
0x105A	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_123.c, 363 :: 		
0x105E	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x1060	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x1062	0x4803    LDR	R0, [PC, #12]
0x1064	0xF7FFFBFA  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_123.c, 364 :: 		
L_end_I2C3_Init_Advanced:
0x1068	0xF8DDE000  LDR	LR, [SP, #0]
0x106C	0xB001    ADD	SP, SP, #4
0x106E	0x4770    BX	LR
0x1070	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_123.c, 380 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x085C	0xB088    SUB	SP, SP, #32
0x085E	0xF8CDE000  STR	LR, [SP, #0]
0x0862	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_123.c, 382 :: 		
;__Lib_I2C_123.c, 388 :: 		
0x0864	0x4B5E    LDR	R3, [PC, #376]
0x0866	0x4298    CMP	R0, R3
0x0868	0xD10D    BNE	L_I2Cx_Init_Advanced61
;__Lib_I2C_123.c, 389 :: 		
0x086A	0x2401    MOVS	R4, #1
0x086C	0xB264    SXTB	R4, R4
0x086E	0x4B5D    LDR	R3, [PC, #372]
0x0870	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 390 :: 		
0x0872	0x4C5D    LDR	R4, [PC, #372]
0x0874	0x4B5D    LDR	R3, [PC, #372]
0x0876	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 391 :: 		
0x0878	0x4C5D    LDR	R4, [PC, #372]
0x087A	0x4B5E    LDR	R3, [PC, #376]
0x087C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 392 :: 		
0x087E	0x4C5E    LDR	R4, [PC, #376]
0x0880	0x4B5E    LDR	R3, [PC, #376]
0x0882	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 393 :: 		
0x0884	0xE020    B	L_I2Cx_Init_Advanced62
L_I2Cx_Init_Advanced61:
;__Lib_I2C_123.c, 394 :: 		
0x0886	0x4B5E    LDR	R3, [PC, #376]
0x0888	0x4298    CMP	R0, R3
0x088A	0xD10D    BNE	L_I2Cx_Init_Advanced63
;__Lib_I2C_123.c, 395 :: 		
0x088C	0x2401    MOVS	R4, #1
0x088E	0xB264    SXTB	R4, R4
0x0890	0x4B5C    LDR	R3, [PC, #368]
0x0892	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 396 :: 		
0x0894	0x4C5C    LDR	R4, [PC, #368]
0x0896	0x4B55    LDR	R3, [PC, #340]
0x0898	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 397 :: 		
0x089A	0x4C5C    LDR	R4, [PC, #368]
0x089C	0x4B55    LDR	R3, [PC, #340]
0x089E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 398 :: 		
0x08A0	0x4C5B    LDR	R4, [PC, #364]
0x08A2	0x4B56    LDR	R3, [PC, #344]
0x08A4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 399 :: 		
0x08A6	0xE00F    B	L_I2Cx_Init_Advanced64
L_I2Cx_Init_Advanced63:
0x08A8	0x4B5A    LDR	R3, [PC, #360]
0x08AA	0x4298    CMP	R0, R3
0x08AC	0xD10C    BNE	L_I2Cx_Init_Advanced65
;__Lib_I2C_123.c, 400 :: 		
0x08AE	0x2401    MOVS	R4, #1
0x08B0	0xB264    SXTB	R4, R4
0x08B2	0x4B59    LDR	R3, [PC, #356]
0x08B4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 401 :: 		
0x08B6	0x4C59    LDR	R4, [PC, #356]
0x08B8	0x4B4C    LDR	R3, [PC, #304]
0x08BA	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 402 :: 		
0x08BC	0x4C58    LDR	R4, [PC, #352]
0x08BE	0x4B4D    LDR	R3, [PC, #308]
0x08C0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 403 :: 		
0x08C2	0x4C58    LDR	R4, [PC, #352]
0x08C4	0x4B4D    LDR	R3, [PC, #308]
0x08C6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 404 :: 		
L_I2Cx_Init_Advanced65:
L_I2Cx_Init_Advanced64:
L_I2Cx_Init_Advanced62:
;__Lib_I2C_123.c, 405 :: 		
0x08C8	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x08CA	0x9002    STR	R0, [SP, #8]
0x08CC	0x4610    MOV	R0, R2
0x08CE	0xF7FFFD95  BL	_GPIO_Alternate_Function_Enable+0
0x08D2	0x9802    LDR	R0, [SP, #8]
0x08D4	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_123.c, 410 :: 		
0x08D6	0x1D03    ADDS	R3, R0, #4
0x08D8	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_123.c, 412 :: 		
0x08DA	0xB29C    UXTH	R4, R3
0x08DC	0xF06F033F  MVN	R3, #63
0x08E0	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x08E4	0xB29D    UXTH	R5, R3
;__Lib_I2C_123.c, 414 :: 		
0x08E6	0xAB03    ADD	R3, SP, #12
0x08E8	0x9001    STR	R0, [SP, #4]
0x08EA	0x4618    MOV	R0, R3
0x08EC	0xF7FFFDAA  BL	_RCC_GetClocksFrequency+0
0x08F0	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_123.c, 415 :: 		
; pclk1 start address is: 28 (R7)
0x08F2	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_123.c, 417 :: 		
0x08F4	0x9C05    LDR	R4, [SP, #20]
0x08F6	0x4B4C    LDR	R3, [PC, #304]
0x08F8	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x08FC	0xB299    UXTH	R1, R3
;__Lib_I2C_123.c, 418 :: 		
0x08FE	0xB29B    UXTH	R3, R3
0x0900	0xEA450403  ORR	R4, R5, R3, LSL #0
0x0904	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_123.c, 420 :: 		
0x0906	0x1D03    ADDS	R3, R0, #4
0x0908	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 424 :: 		
0x090A	0x2400    MOVS	R4, #0
0x090C	0x6803    LDR	R3, [R0, #0]
0x090E	0xF3640300  BFI	R3, R4, #0, #1
0x0912	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 427 :: 		
; tmpreg start address is: 8 (R2)
0x0914	0x2200    MOVS	R2, #0
;__Lib_I2C_123.c, 430 :: 		
0x0916	0x4B45    LDR	R3, [PC, #276]
0x0918	0x429E    CMP	R6, R3
0x091A	0xD812    BHI	L_I2Cx_Init_Advanced66
;__Lib_I2C_123.c, 433 :: 		
0x091C	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x091E	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0922	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 435 :: 		
0x0924	0x2C04    CMP	R4, #4
0x0926	0xD202    BCS	L__I2Cx_Init_Advanced72
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 438 :: 		
; result start address is: 12 (R3)
0x0928	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x092A	0x461C    MOV	R4, R3
;__Lib_I2C_123.c, 439 :: 		
0x092C	0xE7FF    B	L_I2Cx_Init_Advanced67
L__I2Cx_Init_Advanced72:
;__Lib_I2C_123.c, 435 :: 		
;__Lib_I2C_123.c, 439 :: 		
L_I2Cx_Init_Advanced67:
;__Lib_I2C_123.c, 441 :: 		
; result start address is: 16 (R4)
0x092E	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x0932	0xB29A    UXTH	R2, R3
;__Lib_I2C_123.c, 443 :: 		
0x0934	0xF2000420  ADDW	R4, R0, #32
0x0938	0x1C4B    ADDS	R3, R1, #1
0x093A	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x093C	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_123.c, 444 :: 		
0x093E	0xB291    UXTH	R1, R2
0x0940	0xE03F    B	L_I2Cx_Init_Advanced68
L_I2Cx_Init_Advanced66:
;__Lib_I2C_123.c, 449 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x0942	0x2303    MOVS	R3, #3
0x0944	0xFB06F403  MUL	R4, R6, R3
0x0948	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x094C	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_123.c, 452 :: 		
0x0950	0x2319    MOVS	R3, #25
0x0952	0xFB06F503  MUL	R5, R6, R3
0x0956	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x095A	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_123.c, 454 :: 		
0x095E	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_123.c, 456 :: 		
0x0962	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_123.c, 458 :: 		
0x0966	0x1B3C    SUB	R4, R7, R4
0x0968	0x1AFB    SUB	R3, R7, R3
0x096A	0x429C    CMP	R4, R3
0x096C	0xD205    BCS	L_I2Cx_Init_Advanced69
;__Lib_I2C_123.c, 459 :: 		
0x096E	0x2303    MOVS	R3, #3
0x0970	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x0972	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0976	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 460 :: 		
; result end address is: 16 (R4)
0x0978	0xE006    B	L_I2Cx_Init_Advanced70
L_I2Cx_Init_Advanced69:
;__Lib_I2C_123.c, 462 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x097A	0x2319    MOVS	R3, #25
0x097C	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x097E	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0982	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 463 :: 		
0x0984	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 464 :: 		
L_I2Cx_Init_Advanced70:
;__Lib_I2C_123.c, 467 :: 		
; result start address is: 16 (R4)
0x0988	0xF64073FF  MOVW	R3, #4095
0x098C	0xEA040303  AND	R3, R4, R3, LSL #0
0x0990	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced73
;__Lib_I2C_123.c, 470 :: 		
0x0992	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 471 :: 		
0x0996	0xE7FF    B	L_I2Cx_Init_Advanced71
L__I2Cx_Init_Advanced73:
;__Lib_I2C_123.c, 467 :: 		
;__Lib_I2C_123.c, 471 :: 		
L_I2Cx_Init_Advanced71:
;__Lib_I2C_123.c, 473 :: 		
; result start address is: 16 (R4)
0x0998	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x099C	0xB29B    UXTH	R3, R3
0x099E	0x431A    ORRS	R2, R3
0x09A0	0xB292    UXTH	R2, R2
;__Lib_I2C_123.c, 475 :: 		
0x09A2	0xF2000520  ADDW	R5, R0, #32
0x09A6	0xF240132C  MOVW	R3, #300
0x09AA	0xFB01F403  MUL	R4, R1, R3
0x09AE	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x09B0	0xF24033E8  MOVW	R3, #1000
0x09B4	0xFBB4F3F3  UDIV	R3, R4, R3
0x09B8	0xB29B    UXTH	R3, R3
0x09BA	0x1C5B    ADDS	R3, R3, #1
0x09BC	0xB29B    UXTH	R3, R3
0x09BE	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x09C0	0xB291    UXTH	R1, R2
;__Lib_I2C_123.c, 476 :: 		
L_I2Cx_Init_Advanced68:
;__Lib_I2C_123.c, 478 :: 		
; tmpreg start address is: 4 (R1)
0x09C2	0xF200031C  ADDW	R3, R0, #28
0x09C6	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_123.c, 480 :: 		
0x09C8	0x2300    MOVS	R3, #0
0x09CA	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 481 :: 		
0x09CC	0x2401    MOVS	R4, #1
0x09CE	0x6803    LDR	R3, [R0, #0]
0x09D0	0xF3640300  BFI	R3, R4, #0, #1
0x09D4	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 482 :: 		
L_end_I2Cx_Init_Advanced:
0x09D6	0xF8DDE000  LDR	LR, [SP, #0]
0x09DA	0xB008    ADD	SP, SP, #32
0x09DC	0x4770    BX	LR
0x09DE	0xBF00    NOP
0x09E0	0x54004000  	I2C1_CR1+0
0x09E4	0x08544247  	RCC_APB1ENR+0
0x09E8	0xFFFFFFFF  	_I2C1_Start+0
0x09EC	0x093C2000  	_I2C_Start_Ptr+0
0x09F0	0xFFFFFFFF  	_I2C1_Read+0
0x09F4	0x09402000  	_I2C_Read_Ptr+0
0x09F8	0xFFFFFFFF  	_I2C1_Write+0
0x09FC	0x09442000  	_I2C_Write_Ptr+0
0x0A00	0x58004000  	I2C2_CR1+0
0x0A04	0x08584247  	RCC_APB1ENR+0
0x0A08	0xFFFFFFFF  	_I2C2_Start+0
0x0A0C	0xFFFFFFFF  	_I2C2_Read+0
0x0A10	0xFFFFFFFF  	_I2C2_Write+0
0x0A14	0x5C004000  	I2C3_CR1+0
0x0A18	0x085C4247  	RCC_APB1ENR+0
0x0A1C	0x08210000  	_I2C3_Start+0
0x0A20	0x07FD0000  	_I2C3_Read+0
0x0A24	0x08390000  	_I2C3_Write+0
0x0A28	0x4240000F  	#1000000
0x0A2C	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 389 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0444	0xB082    SUB	SP, SP, #8
0x0446	0xF8CDE000  STR	LR, [SP, #0]
0x044A	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 391 :: 		
;__Lib_System_4XX.c, 393 :: 		
0x044C	0x4619    MOV	R1, R3
0x044E	0x9101    STR	R1, [SP, #4]
0x0450	0xF7FFFED4  BL	_Get_Fosc_kHz+0
0x0454	0xF24031E8  MOVW	R1, #1000
0x0458	0xFB00F201  MUL	R2, R0, R1
0x045C	0x9901    LDR	R1, [SP, #4]
0x045E	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 396 :: 		
0x0460	0x4917    LDR	R1, [PC, #92]
0x0462	0x6809    LDR	R1, [R1, #0]
0x0464	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 397 :: 		
0x0468	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 398 :: 		
0x046A	0x4916    LDR	R1, [PC, #88]
0x046C	0x1889    ADDS	R1, R1, R2
0x046E	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0470	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 400 :: 		
0x0472	0x1D1A    ADDS	R2, R3, #4
0x0474	0x6819    LDR	R1, [R3, #0]
0x0476	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0478	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 403 :: 		
0x047A	0x4911    LDR	R1, [PC, #68]
0x047C	0x6809    LDR	R1, [R1, #0]
0x047E	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 404 :: 		
0x0482	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 405 :: 		
0x0484	0x490F    LDR	R1, [PC, #60]
0x0486	0x1889    ADDS	R1, R1, R2
0x0488	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x048A	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 407 :: 		
0x048C	0xF2030208  ADDW	R2, R3, #8
0x0490	0x1D19    ADDS	R1, R3, #4
0x0492	0x6809    LDR	R1, [R1, #0]
0x0494	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0496	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 410 :: 		
0x0498	0x4909    LDR	R1, [PC, #36]
0x049A	0x6809    LDR	R1, [R1, #0]
0x049C	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 411 :: 		
0x04A0	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 412 :: 		
0x04A2	0x4908    LDR	R1, [PC, #32]
0x04A4	0x1889    ADDS	R1, R1, R2
0x04A6	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x04A8	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 414 :: 		
0x04AA	0xF203020C  ADDW	R2, R3, #12
0x04AE	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x04B0	0x6809    LDR	R1, [R1, #0]
0x04B2	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x04B4	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 415 :: 		
L_end_RCC_GetClocksFrequency:
0x04B6	0xF8DDE000  LDR	LR, [SP, #0]
0x04BA	0xB002    ADD	SP, SP, #8
0x04BC	0x4770    BX	LR
0x04BE	0xBF00    NOP
0x04C0	0x38084002  	RCC_CFGR+0
0x04C4	0x00002000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x01FC	0x4801    LDR	R0, [PC, #4]
0x01FE	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0200	0x4770    BX	LR
0x0202	0xBF00    NOP
0x0204	0x09382000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x03FC	0xB083    SUB	SP, SP, #12
0x03FE	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x0402	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x0404	0x00A1    LSLS	R1, R4, #2
0x0406	0x1841    ADDS	R1, R0, R1
0x0408	0x6809    LDR	R1, [R1, #0]
0x040A	0xF1B13FFF  CMP	R1, #-1
0x040E	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x0410	0xF2000134  ADDW	R1, R0, #52
0x0414	0x00A3    LSLS	R3, R4, #2
0x0416	0x18C9    ADDS	R1, R1, R3
0x0418	0x6809    LDR	R1, [R1, #0]
0x041A	0x460A    MOV	R2, R1
0x041C	0x18C1    ADDS	R1, R0, R3
0x041E	0x6809    LDR	R1, [R1, #0]
0x0420	0x9001    STR	R0, [SP, #4]
0x0422	0xF8AD4008  STRH	R4, [SP, #8]
0x0426	0x4608    MOV	R0, R1
0x0428	0x4611    MOV	R1, R2
0x042A	0xF7FFFEED  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x042E	0xF8BD4008  LDRH	R4, [SP, #8]
0x0432	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x0434	0x1C64    ADDS	R4, R4, #1
0x0436	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x0438	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x043A	0xF8DDE000  LDR	LR, [SP, #0]
0x043E	0xB003    ADD	SP, SP, #12
0x0440	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0208	0xB083    SUB	SP, SP, #12
0x020A	0xF8CDE000  STR	LR, [SP, #0]
0x020E	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x0210	0xF00403FF  AND	R3, R4, #255
0x0214	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0216	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x0218	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x021C	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x021E	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x0220	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x0224	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x0226	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x0228	0x4A2D    LDR	R2, [PC, #180]
0x022A	0x9202    STR	R2, [SP, #8]
0x022C	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x022E	0x4A2D    LDR	R2, [PC, #180]
0x0230	0x9202    STR	R2, [SP, #8]
0x0232	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x0234	0x4A2C    LDR	R2, [PC, #176]
0x0236	0x9202    STR	R2, [SP, #8]
0x0238	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x023A	0x4A2C    LDR	R2, [PC, #176]
0x023C	0x9202    STR	R2, [SP, #8]
0x023E	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x0240	0x4A2B    LDR	R2, [PC, #172]
0x0242	0x9202    STR	R2, [SP, #8]
0x0244	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x0246	0x4A2B    LDR	R2, [PC, #172]
0x0248	0x9202    STR	R2, [SP, #8]
0x024A	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x024C	0x4A2A    LDR	R2, [PC, #168]
0x024E	0x9202    STR	R2, [SP, #8]
0x0250	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x0252	0x4A2A    LDR	R2, [PC, #168]
0x0254	0x9202    STR	R2, [SP, #8]
0x0256	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x0258	0x4A29    LDR	R2, [PC, #164]
0x025A	0x9202    STR	R2, [SP, #8]
0x025C	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x025E	0x2800    CMP	R0, #0
0x0260	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x0262	0x2801    CMP	R0, #1
0x0264	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x0266	0x2802    CMP	R0, #2
0x0268	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x026A	0x2803    CMP	R0, #3
0x026C	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x026E	0x2804    CMP	R0, #4
0x0270	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x0272	0x2805    CMP	R0, #5
0x0274	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x0276	0x2806    CMP	R0, #6
0x0278	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x027A	0x2807    CMP	R0, #7
0x027C	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x027E	0x2808    CMP	R0, #8
0x0280	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x0282	0x2201    MOVS	R2, #1
0x0284	0xB212    SXTH	R2, R2
0x0286	0xFA02F20C  LSL	R2, R2, R12
0x028A	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x028E	0x9802    LDR	R0, [SP, #8]
0x0290	0x460A    MOV	R2, R1
0x0292	0xF8BD1004  LDRH	R1, [SP, #4]
0x0296	0xF000FBCB  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x029A	0x9A02    LDR	R2, [SP, #8]
0x029C	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x02A0	0xF1BC0F07  CMP	R12, #7
0x02A4	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x02A6	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x02A8	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x02AA	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x02AE	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x02B0	0x9101    STR	R1, [SP, #4]
0x02B2	0x4601    MOV	R1, R0
0x02B4	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x02B6	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x02B8	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x02BA	0x0083    LSLS	R3, R0, #2
0x02BC	0xF04F020F  MOV	R2, #15
0x02C0	0x409A    LSLS	R2, R3
0x02C2	0x43D3    MVN	R3, R2
0x02C4	0x680A    LDR	R2, [R1, #0]
0x02C6	0x401A    ANDS	R2, R3
0x02C8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x02CA	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x02CC	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x02D0	0x680A    LDR	R2, [R1, #0]
0x02D2	0x431A    ORRS	R2, R3
0x02D4	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x02D6	0xF8DDE000  LDR	LR, [SP, #0]
0x02DA	0xB003    ADD	SP, SP, #12
0x02DC	0x4770    BX	LR
0x02DE	0xBF00    NOP
0x02E0	0x00004002  	#1073872896
0x02E4	0x04004002  	#1073873920
0x02E8	0x08004002  	#1073874944
0x02EC	0x0C004002  	#1073875968
0x02F0	0x10004002  	#1073876992
0x02F4	0x14004002  	#1073878016
0x02F8	0x18004002  	#1073879040
0x02FC	0x1C004002  	#1073880064
0x0300	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_BME_Read_DigU:
;bme280.c, 51 :: 		uint16_t BME_Read_DigU(uint8_t reg) {
; reg start address is: 0 (R0)
0x0F88	0xB081    SUB	SP, SP, #4
0x0F8A	0xF8CDE000  STR	LR, [SP, #0]
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
;bme280.c, 53 :: 		data_[0] = reg;
0x0F8E	0x490F    LDR	R1, [PC, #60]
0x0F90	0x7008    STRB	R0, [R1, #0]
; reg end address is: 0 (R0)
;bme280.c, 54 :: 		I2C3_Start();
0x0F92	0xF7FFFC45  BL	_I2C3_Start+0
;bme280.c, 55 :: 		I2C3_Write(BME280_ADDRESS, data_, 1, END_MODE_RESTART);
0x0F96	0xF2400300  MOVW	R3, #0
0x0F9A	0x2201    MOVS	R2, #1
0x0F9C	0x490B    LDR	R1, [PC, #44]
0x0F9E	0x2076    MOVS	R0, #118
0x0FA0	0xF7FFFC4A  BL	_I2C3_Write+0
;bme280.c, 56 :: 		I2C3_Read(BME280_ADDRESS, output, 2, END_MODE_STOP);
0x0FA4	0xF2400301  MOVW	R3, #1
0x0FA8	0x2202    MOVS	R2, #2
0x0FAA	0x4909    LDR	R1, [PC, #36]
0x0FAC	0x2076    MOVS	R0, #118
0x0FAE	0xF7FFFC25  BL	_I2C3_Read+0
;bme280.c, 57 :: 		result = output[1];
0x0FB2	0x4908    LDR	R1, [PC, #32]
; result start address is: 0 (R0)
0x0FB4	0x7808    LDRB	R0, [R1, #0]
;bme280.c, 58 :: 		result <<= 8;
0x0FB6	0x0202    LSLS	R2, R0, #8
0x0FB8	0xB292    UXTH	R2, R2
; result end address is: 0 (R0)
;bme280.c, 59 :: 		result |= output[0];
0x0FBA	0x4905    LDR	R1, [PC, #20]
0x0FBC	0x7809    LDRB	R1, [R1, #0]
0x0FBE	0xEA420101  ORR	R1, R2, R1, LSL #0
;bme280.c, 60 :: 		return result;
0x0FC2	0xB288    UXTH	R0, R1
;bme280.c, 61 :: 		}
L_end_BME_Read_DigU:
0x0FC4	0xF8DDE000  LDR	LR, [SP, #0]
0x0FC8	0xB001    ADD	SP, SP, #4
0x0FCA	0x4770    BX	LR
0x0FCC	0x01232000  	_data_+0
0x0FD0	0x012D2000  	_output+0
0x0FD4	0x012E2000  	_output+1
; end of _BME_Read_DigU
_I2C3_Start:
;__Lib_I2C_123.c, 354 :: 		
0x0820	0xB081    SUB	SP, SP, #4
0x0822	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_123.c, 355 :: 		
0x0826	0x4803    LDR	R0, [PC, #12]
0x0828	0xF7FFFD6C  BL	_I2Cx_Start+0
;__Lib_I2C_123.c, 356 :: 		
L_end_I2C3_Start:
0x082C	0xF8DDE000  LDR	LR, [SP, #0]
0x0830	0xB001    ADD	SP, SP, #4
0x0832	0x4770    BX	LR
0x0834	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Start
_I2Cx_Start:
;__Lib_I2C_123.c, 157 :: 		
; I2C_BASE start address is: 0 (R0)
0x0304	0xB081    SUB	SP, SP, #4
0x0306	0xF8CDE000  STR	LR, [SP, #0]
0x030A	0x4604    MOV	R4, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 16 (R4)
;__Lib_I2C_123.c, 158 :: 		
0x030C	0x4620    MOV	R0, R4
0x030E	0xF7FFFF55  BL	__Lib_I2C_123_I2Cx_Wait_For_Idle+0
;__Lib_I2C_123.c, 161 :: 		
0x0312	0x2201    MOVS	R2, #1
0x0314	0x6821    LDR	R1, [R4, #0]
0x0316	0xF3622108  BFI	R1, R2, #8, #1
0x031A	0x6021    STR	R1, [R4, #0]
;__Lib_I2C_123.c, 163 :: 		
0x031C	0xF2040114  ADDW	R1, R4, #20
0x0320	0x680A    LDR	R2, [R1, #0]
0x0322	0xF3C22140  UBFX	R1, R2, #9, #1
0x0326	0xB111    CBZ	R1, L_I2Cx_Start2
; I2C_BASE end address is: 16 (R4)
;__Lib_I2C_123.c, 164 :: 		
0x0328	0xF64F70FF  MOVW	R0, #65535
0x032C	0xE006    B	L_end_I2Cx_Start
;__Lib_I2C_123.c, 165 :: 		
L_I2Cx_Start2:
;__Lib_I2C_123.c, 166 :: 		
; I2C_BASE start address is: 16 (R4)
L_I2Cx_Start3:
; I2C_BASE end address is: 16 (R4)
; I2C_BASE start address is: 16 (R4)
0x032E	0x4905    LDR	R1, [PC, #20]
0x0330	0x4620    MOV	R0, R4
0x0332	0xF7FFFF51  BL	_ChekXForEvent+0
0x0336	0xB900    CBNZ	R0, L_I2Cx_Start4
;__Lib_I2C_123.c, 167 :: 		
; I2C_BASE end address is: 16 (R4)
0x0338	0xE7F9    B	L_I2Cx_Start3
L_I2Cx_Start4:
;__Lib_I2C_123.c, 168 :: 		
0x033A	0x2000    MOVS	R0, #0
;__Lib_I2C_123.c, 169 :: 		
L_end_I2Cx_Start:
0x033C	0xF8DDE000  LDR	LR, [SP, #0]
0x0340	0xB001    ADD	SP, SP, #4
0x0342	0x4770    BX	LR
0x0344	0x00010003  	#196609
; end of _I2Cx_Start
__Lib_I2C_123_I2Cx_Wait_For_Idle:
;__Lib_I2C_123.c, 147 :: 		
; I2C_BASE start address is: 0 (R0)
0x01BC	0xB081    SUB	SP, SP, #4
0x01BE	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
0x01C2	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 148 :: 		
L___Lib_I2C_123_I2Cx_Wait_For_Idle0:
; I2C_BASE start address is: 12 (R3)
0x01C4	0x4618    MOV	R0, R3
0x01C6	0xF7FFFFED  BL	_I2Cx_Is_Idle+0
0x01CA	0xB900    CBNZ	R0, L___Lib_I2C_123_I2Cx_Wait_For_Idle1
;__Lib_I2C_123.c, 149 :: 		
; I2C_BASE end address is: 12 (R3)
0x01CC	0xE7FA    B	L___Lib_I2C_123_I2Cx_Wait_For_Idle0
L___Lib_I2C_123_I2Cx_Wait_For_Idle1:
;__Lib_I2C_123.c, 150 :: 		
L_end_I2Cx_Wait_For_Idle:
0x01CE	0xF8DDE000  LDR	LR, [SP, #0]
0x01D2	0xB001    ADD	SP, SP, #4
0x01D4	0x4770    BX	LR
; end of __Lib_I2C_123_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_123.c, 142 :: 		
; I2C_BASE start address is: 0 (R0)
0x01A4	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_123.c, 143 :: 		
0x01A6	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x01AA	0x680A    LDR	R2, [R1, #0]
0x01AC	0xF3C20140  UBFX	R1, R2, #1, #1
0x01B0	0xF0810101  EOR	R1, R1, #1
0x01B4	0xB2C9    UXTB	R1, R1
0x01B6	0xB2C8    UXTB	R0, R1
;__Lib_I2C_123.c, 144 :: 		
L_end_I2Cx_Is_Idle:
0x01B8	0xB001    ADD	SP, SP, #4
0x01BA	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_123.c, 152 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x01D8	0xB081    SUB	SP, SP, #4
0x01DA	0xF8CDE000  STR	LR, [SP, #0]
0x01DE	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_123.c, 153 :: 		
; I2C_BASE end address is: 0 (R0)
0x01E0	0xF7FFFFD2  BL	_I2Cx_Get_Status+0
0x01E4	0xEA000203  AND	R2, R0, R3, LSL #0
0x01E8	0x429A    CMP	R2, R3
0x01EA	0xF2400200  MOVW	R2, #0
0x01EE	0xD100    BNE	L__ChekXForEvent82
0x01F0	0x2201    MOVS	R2, #1
L__ChekXForEvent82:
; Event end address is: 12 (R3)
0x01F2	0xB2D0    UXTB	R0, R2
;__Lib_I2C_123.c, 154 :: 		
L_end_ChekXForEvent:
0x01F4	0xF8DDE000  LDR	LR, [SP, #0]
0x01F8	0xB001    ADD	SP, SP, #4
0x01FA	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_123.c, 129 :: 		
; I2C_BASE start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_123.c, 132 :: 		
0x018A	0xF2000114  ADDW	R1, R0, #20
0x018E	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_123.c, 133 :: 		
0x0190	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0194	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_123.c, 135 :: 		
0x0196	0x0409    LSLS	R1, R1, #16
0x0198	0xEA420101  ORR	R1, R2, R1, LSL #0
0x019C	0x4608    MOV	R0, R1
;__Lib_I2C_123.c, 136 :: 		
L_end_I2Cx_Get_Status:
0x019E	0xB001    ADD	SP, SP, #4
0x01A0	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C3_Write:
;__Lib_I2C_123.c, 374 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0838	0xB081    SUB	SP, SP, #4
0x083A	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 375 :: 		
0x083E	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0840	0x4613    MOV	R3, R2
0x0842	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0844	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0846	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0848	0xF7FFFD7E  BL	_I2Cx_Write+0
0x084C	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 376 :: 		
L_end_I2C3_Write:
0x084E	0xF8DDE000  LDR	LR, [SP, #0]
0x0852	0xB001    ADD	SP, SP, #4
0x0854	0x4770    BX	LR
0x0856	0xBF00    NOP
0x0858	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Write
_I2Cx_Write:
;__Lib_I2C_123.c, 175 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0348	0xB081    SUB	SP, SP, #4
0x034A	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x034E	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_123.c, 177 :: 		
0x0350	0xF2000510  ADDW	R5, R0, #16
0x0354	0x004C    LSLS	R4, R1, #1
0x0356	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x0358	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
0x035A	0x4634    MOV	R4, R6
0x035C	0x4606    MOV	R6, R0
0x035E	0x4690    MOV	R8, R2
0x0360	0x461F    MOV	R7, R3
;__Lib_I2C_123.c, 178 :: 		
L_I2Cx_Write5:
; END_mode start address is: 16 (R4)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
0x0362	0x4922    LDR	R1, [PC, #136]
0x0364	0x4630    MOV	R0, R6
0x0366	0xF7FFFF37  BL	_ChekXForEvent+0
0x036A	0xB900    CBNZ	R0, L_I2Cx_Write6
;__Lib_I2C_123.c, 179 :: 		
0x036C	0xE7F9    B	L_I2Cx_Write5
L_I2Cx_Write6:
;__Lib_I2C_123.c, 180 :: 		
; i start address is: 0 (R0)
0x036E	0x2000    MOVS	R0, #0
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 16 (R4)
; I2C_BASE end address is: 24 (R6)
0x0370	0x4621    MOV	R1, R4
L_I2Cx_Write7:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x0372	0x1E7C    SUBS	R4, R7, #1
0x0374	0x42A0    CMP	R0, R4
0x0376	0xD212    BCS	L_I2Cx_Write8
;__Lib_I2C_123.c, 181 :: 		
0x0378	0xF2060510  ADDW	R5, R6, #16
0x037C	0xEB080400  ADD	R4, R8, R0, LSL #0
0x0380	0x7824    LDRB	R4, [R4, #0]
0x0382	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x0384	0x4681    MOV	R9, R0
0x0386	0x460D    MOV	R5, R1
;__Lib_I2C_123.c, 182 :: 		
L_I2Cx_Write10:
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 36 (R9)
0x0388	0x4919    LDR	R1, [PC, #100]
0x038A	0x4630    MOV	R0, R6
0x038C	0xF7FFFF24  BL	_ChekXForEvent+0
0x0390	0xB900    CBNZ	R0, L_I2Cx_Write11
;__Lib_I2C_123.c, 183 :: 		
0x0392	0xE7F9    B	L_I2Cx_Write10
L_I2Cx_Write11:
;__Lib_I2C_123.c, 180 :: 		
0x0394	0xF1090401  ADD	R4, R9, #1
; i end address is: 36 (R9)
; i start address is: 0 (R0)
0x0398	0x4620    MOV	R0, R4
;__Lib_I2C_123.c, 184 :: 		
0x039A	0x4629    MOV	R1, R5
; END_mode end address is: 20 (R5)
; count end address is: 28 (R7)
0x039C	0xE7E9    B	L_I2Cx_Write7
L_I2Cx_Write8:
;__Lib_I2C_123.c, 186 :: 		
; END_mode start address is: 4 (R1)
0x039E	0xF2060510  ADDW	R5, R6, #16
0x03A2	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x03A6	0x7824    LDRB	R4, [R4, #0]
0x03A8	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x03AA	0x460C    MOV	R4, R1
;__Lib_I2C_123.c, 187 :: 		
L_I2Cx_Write12:
; END_mode start address is: 16 (R4)
; I2C_BASE start address is: 24 (R6)
0x03AC	0x4911    LDR	R1, [PC, #68]
0x03AE	0x4630    MOV	R0, R6
0x03B0	0xF7FFFF12  BL	_ChekXForEvent+0
0x03B4	0xB900    CBNZ	R0, L_I2Cx_Write13
;__Lib_I2C_123.c, 188 :: 		
0x03B6	0xE7F9    B	L_I2Cx_Write12
L_I2Cx_Write13:
;__Lib_I2C_123.c, 189 :: 		
0x03B8	0x2C01    CMP	R4, #1
0x03BA	0xD105    BNE	L_I2Cx_Write14
; END_mode end address is: 16 (R4)
;__Lib_I2C_123.c, 190 :: 		
0x03BC	0x2501    MOVS	R5, #1
0x03BE	0x6834    LDR	R4, [R6, #0]
0x03C0	0xF3652449  BFI	R4, R5, #9, #1
0x03C4	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x03C6	0xE00B    B	L_I2Cx_Write15
L_I2Cx_Write14:
;__Lib_I2C_123.c, 192 :: 		
; I2C_BASE start address is: 24 (R6)
0x03C8	0x2501    MOVS	R5, #1
0x03CA	0x6834    LDR	R4, [R6, #0]
0x03CC	0xF3652408  BFI	R4, R5, #8, #1
0x03D0	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x03D2	0x4634    MOV	R4, R6
;__Lib_I2C_123.c, 193 :: 		
L_I2Cx_Write16:
; I2C_BASE start address is: 16 (R4)
0x03D4	0x4908    LDR	R1, [PC, #32]
0x03D6	0x4620    MOV	R0, R4
0x03D8	0xF7FFFEFE  BL	_ChekXForEvent+0
0x03DC	0xB900    CBNZ	R0, L_I2Cx_Write17
;__Lib_I2C_123.c, 194 :: 		
; I2C_BASE end address is: 16 (R4)
0x03DE	0xE7F9    B	L_I2Cx_Write16
L_I2Cx_Write17:
;__Lib_I2C_123.c, 195 :: 		
L_I2Cx_Write15:
;__Lib_I2C_123.c, 196 :: 		
0x03E0	0x2000    MOVS	R0, #0
;__Lib_I2C_123.c, 197 :: 		
L_end_I2Cx_Write:
0x03E2	0xF8DDE000  LDR	LR, [SP, #0]
0x03E6	0xB001    ADD	SP, SP, #4
0x03E8	0x4770    BX	LR
0x03EA	0xBF00    NOP
0x03EC	0x00820007  	#458882
0x03F0	0x00800007  	#458880
0x03F4	0x00840007  	#458884
0x03F8	0x00010003  	#196609
; end of _I2Cx_Write
_I2C3_Read:
;__Lib_I2C_123.c, 370 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x07FC	0xB081    SUB	SP, SP, #4
0x07FE	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 371 :: 		
0x0802	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0804	0x4613    MOV	R3, R2
0x0806	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0808	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x080A	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x080C	0xF7FFFE5C  BL	_I2Cx_Read+0
0x0810	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 372 :: 		
L_end_I2C3_Read:
0x0812	0xF8DDE000  LDR	LR, [SP, #0]
0x0816	0xB001    ADD	SP, SP, #4
0x0818	0x4770    BX	LR
0x081A	0xBF00    NOP
0x081C	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Read
_I2Cx_Read:
;__Lib_I2C_123.c, 201 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x04C8	0xB082    SUB	SP, SP, #8
0x04CA	0xF8CDE000  STR	LR, [SP, #0]
0x04CE	0x461F    MOV	R7, R3
0x04D0	0xB2CB    UXTB	R3, R1
0x04D2	0x4601    MOV	R1, R0
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 12 (R3)
; buf start address is: 8 (R2)
; count start address is: 28 (R7)
; END_mode start address is: 24 (R6)
0x04D4	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_123.c, 203 :: 		
; i start address is: 32 (R8)
0x04D6	0xF04F0800  MOV	R8, #0
;__Lib_I2C_123.c, 204 :: 		
0x04DA	0xE129    B	L_I2Cx_Read18
; count end address is: 28 (R7)
;__Lib_I2C_123.c, 205 :: 		
L_I2Cx_Read20:
;__Lib_I2C_123.c, 206 :: 		
0x04DC	0xF2010510  ADDW	R5, R1, #16
0x04E0	0x005C    LSLS	R4, R3, #1
0x04E2	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x04E4	0xF0440401  ORR	R4, R4, #1
0x04E8	0xB2A4    UXTH	R4, R4
0x04EA	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
; i end address is: 32 (R8)
0x04EC	0x4633    MOV	R3, R6
0x04EE	0x4616    MOV	R6, R2
0x04F0	0x4642    MOV	R2, R8
;__Lib_I2C_123.c, 207 :: 		
L_I2Cx_Read21:
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x04F2	0xF2010414  ADDW	R4, R1, #20
0x04F6	0x6825    LDR	R5, [R4, #0]
0x04F8	0xF3C50440  UBFX	R4, R5, #1, #1
0x04FC	0xB904    CBNZ	R4, L_I2Cx_Read22
;__Lib_I2C_123.c, 208 :: 		
0x04FE	0xE7F8    B	L_I2Cx_Read21
L_I2Cx_Read22:
;__Lib_I2C_123.c, 209 :: 		
0x0500	0x2500    MOVS	R5, #0
0x0502	0x680C    LDR	R4, [R1, #0]
0x0504	0xF365248A  BFI	R4, R5, #10, #1
0x0508	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 210 :: 		
0x050A	0xF2010414  ADDW	R4, R1, #20
0x050E	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_123.c, 211 :: 		
0x0510	0xBF00    NOP
;__Lib_I2C_123.c, 212 :: 		
0x0512	0xF2010418  ADDW	R4, R1, #24
0x0516	0x6824    LDR	R4, [R4, #0]
0x0518	0x0424    LSLS	R4, R4, #16
0x051A	0xEA400404  ORR	R4, R0, R4, LSL #0
0x051E	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_123.c, 213 :: 		
0x0520	0x2B01    CMP	R3, #1
0x0522	0xD105    BNE	L_I2Cx_Read23
;__Lib_I2C_123.c, 214 :: 		
0x0524	0x2501    MOVS	R5, #1
0x0526	0x680C    LDR	R4, [R1, #0]
0x0528	0xF3652449  BFI	R4, R5, #9, #1
0x052C	0x600C    STR	R4, [R1, #0]
0x052E	0xE004    B	L_I2Cx_Read24
L_I2Cx_Read23:
;__Lib_I2C_123.c, 216 :: 		
0x0530	0x2501    MOVS	R5, #1
0x0532	0x680C    LDR	R4, [R1, #0]
0x0534	0xF3652408  BFI	R4, R5, #8, #1
0x0538	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 217 :: 		
L_I2Cx_Read24:
;__Lib_I2C_123.c, 218 :: 		
0x053A	0x4690    MOV	R8, R2
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
0x053C	0x461F    MOV	R7, R3
0x053E	0x4634    MOV	R4, R6
0x0540	0x460E    MOV	R6, R1
L_I2Cx_Read25:
; i end address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 16 (R4)
; END_mode start address is: 28 (R7)
; i start address is: 32 (R8)
0x0542	0x4981    LDR	R1, [PC, #516]
0x0544	0x4630    MOV	R0, R6
0x0546	0xF7FFFE47  BL	_ChekXForEvent+0
0x054A	0xB900    CBNZ	R0, L_I2Cx_Read26
;__Lib_I2C_123.c, 219 :: 		
0x054C	0xE7F9    B	L_I2Cx_Read25
L_I2Cx_Read26:
;__Lib_I2C_123.c, 220 :: 		
0x054E	0xEB040508  ADD	R5, R4, R8, LSL #0
; buf end address is: 16 (R4)
; i end address is: 32 (R8)
0x0552	0xF2060410  ADDW	R4, R6, #16
0x0556	0x6824    LDR	R4, [R4, #0]
0x0558	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 221 :: 		
0x055A	0x2F01    CMP	R7, #1
0x055C	0xD107    BNE	L_I2Cx_Read27
; I2C_BASE end address is: 24 (R6)
; END_mode end address is: 28 (R7)
0x055E	0x4630    MOV	R0, R6
;__Lib_I2C_123.c, 222 :: 		
L_I2Cx_Read28:
; I2C_BASE start address is: 0 (R0)
0x0560	0x6805    LDR	R5, [R0, #0]
0x0562	0xF3C52440  UBFX	R4, R5, #9, #1
0x0566	0x2C00    CMP	R4, #0
0x0568	0xD100    BNE	L_I2Cx_Read29
;__Lib_I2C_123.c, 223 :: 		
; I2C_BASE end address is: 0 (R0)
0x056A	0xE7F9    B	L_I2Cx_Read28
L_I2Cx_Read29:
;__Lib_I2C_123.c, 224 :: 		
0x056C	0xE006    B	L_I2Cx_Read30
L_I2Cx_Read27:
;__Lib_I2C_123.c, 226 :: 		
; I2C_BASE start address is: 24 (R6)
0x056E	0x4630    MOV	R0, R6
L_I2Cx_Read31:
; I2C_BASE end address is: 24 (R6)
; I2C_BASE start address is: 0 (R0)
0x0570	0x6805    LDR	R5, [R0, #0]
0x0572	0xF3C52400  UBFX	R4, R5, #8, #1
0x0576	0x2C00    CMP	R4, #0
0x0578	0xD100    BNE	L_I2Cx_Read32
;__Lib_I2C_123.c, 227 :: 		
; I2C_BASE end address is: 0 (R0)
0x057A	0xE7F9    B	L_I2Cx_Read31
L_I2Cx_Read32:
;__Lib_I2C_123.c, 228 :: 		
L_I2Cx_Read30:
;__Lib_I2C_123.c, 229 :: 		
0x057C	0xE0DF    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 231 :: 		
L_I2Cx_Read33:
;__Lib_I2C_123.c, 232 :: 		
; i start address is: 32 (R8)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; slave_address start address is: 12 (R3)
0x057E	0x2501    MOVS	R5, #1
0x0580	0x680C    LDR	R4, [R1, #0]
0x0582	0xF365248A  BFI	R4, R5, #10, #1
0x0586	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 233 :: 		
0x0588	0x2501    MOVS	R5, #1
0x058A	0x680C    LDR	R4, [R1, #0]
0x058C	0xF36524CB  BFI	R4, R5, #11, #1
0x0590	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 234 :: 		
0x0592	0xF2010510  ADDW	R5, R1, #16
0x0596	0x005C    LSLS	R4, R3, #1
0x0598	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x059A	0xF0440401  ORR	R4, R4, #1
0x059E	0xB2A4    UXTH	R4, R4
0x05A0	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
; i end address is: 32 (R8)
0x05A2	0x4643    MOV	R3, R8
;__Lib_I2C_123.c, 235 :: 		
L_I2Cx_Read34:
; i start address is: 12 (R3)
; END_mode start address is: 24 (R6)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x05A4	0xF2010414  ADDW	R4, R1, #20
0x05A8	0x6825    LDR	R5, [R4, #0]
0x05AA	0xF3C50440  UBFX	R4, R5, #1, #1
0x05AE	0xB904    CBNZ	R4, L_I2Cx_Read35
;__Lib_I2C_123.c, 236 :: 		
0x05B0	0xE7F8    B	L_I2Cx_Read34
L_I2Cx_Read35:
;__Lib_I2C_123.c, 237 :: 		
0x05B2	0xF2010414  ADDW	R4, R1, #20
0x05B6	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_123.c, 238 :: 		
0x05B8	0xBF00    NOP
;__Lib_I2C_123.c, 239 :: 		
0x05BA	0xF2010418  ADDW	R4, R1, #24
0x05BE	0x6824    LDR	R4, [R4, #0]
0x05C0	0x0424    LSLS	R4, R4, #16
0x05C2	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_123.c, 240 :: 		
0x05C4	0x2500    MOVS	R5, #0
0x05C6	0x680C    LDR	R4, [R1, #0]
0x05C8	0xF365248A  BFI	R4, R5, #10, #1
0x05CC	0x600C    STR	R4, [R1, #0]
; i end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x05CE	0x9601    STR	R6, [SP, #4]
0x05D0	0x461E    MOV	R6, R3
0x05D2	0x9B01    LDR	R3, [SP, #4]
;__Lib_I2C_123.c, 241 :: 		
L_I2Cx_Read36:
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x05D4	0xF2010414  ADDW	R4, R1, #20
0x05D8	0x6825    LDR	R5, [R4, #0]
0x05DA	0xF3C50480  UBFX	R4, R5, #2, #1
0x05DE	0xB904    CBNZ	R4, L_I2Cx_Read37
;__Lib_I2C_123.c, 242 :: 		
0x05E0	0xE7F8    B	L_I2Cx_Read36
L_I2Cx_Read37:
;__Lib_I2C_123.c, 243 :: 		
0x05E2	0x2B01    CMP	R3, #1
0x05E4	0xD105    BNE	L_I2Cx_Read38
;__Lib_I2C_123.c, 244 :: 		
0x05E6	0x2501    MOVS	R5, #1
0x05E8	0x680C    LDR	R4, [R1, #0]
0x05EA	0xF3652449  BFI	R4, R5, #9, #1
0x05EE	0x600C    STR	R4, [R1, #0]
0x05F0	0xE004    B	L_I2Cx_Read39
L_I2Cx_Read38:
;__Lib_I2C_123.c, 246 :: 		
0x05F2	0x2501    MOVS	R5, #1
0x05F4	0x680C    LDR	R4, [R1, #0]
0x05F6	0xF3652408  BFI	R4, R5, #8, #1
0x05FA	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 247 :: 		
L_I2Cx_Read39:
;__Lib_I2C_123.c, 248 :: 		
0x05FC	0x1995    ADDS	R5, R2, R6
0x05FE	0xF2010410  ADDW	R4, R1, #16
0x0602	0x6824    LDR	R4, [R4, #0]
0x0604	0x702C    STRB	R4, [R5, #0]
0x0606	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_123.c, 249 :: 		
0x0608	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x060A	0xF2010410  ADDW	R4, R1, #16
0x060E	0x6824    LDR	R4, [R4, #0]
0x0610	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 250 :: 		
0x0612	0x2B01    CMP	R3, #1
0x0614	0xD106    BNE	L_I2Cx_Read40
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_123.c, 251 :: 		
L_I2Cx_Read41:
; I2C_BASE start address is: 4 (R1)
0x0616	0x680D    LDR	R5, [R1, #0]
0x0618	0xF3C52440  UBFX	R4, R5, #9, #1
0x061C	0xB904    CBNZ	R4, L_I2Cx_Read42
;__Lib_I2C_123.c, 252 :: 		
0x061E	0xE7FA    B	L_I2Cx_Read41
L_I2Cx_Read42:
;__Lib_I2C_123.c, 253 :: 		
0x0620	0x4608    MOV	R0, R1
0x0622	0xE005    B	L_I2Cx_Read43
L_I2Cx_Read40:
;__Lib_I2C_123.c, 255 :: 		
L_I2Cx_Read44:
; I2C_BASE end address is: 4 (R1)
; I2C_BASE start address is: 4 (R1)
0x0624	0x680D    LDR	R5, [R1, #0]
0x0626	0xF3C52400  UBFX	R4, R5, #8, #1
0x062A	0xB904    CBNZ	R4, L_I2Cx_Read45
;__Lib_I2C_123.c, 256 :: 		
0x062C	0xE7FA    B	L_I2Cx_Read44
L_I2Cx_Read45:
;__Lib_I2C_123.c, 257 :: 		
0x062E	0x4608    MOV	R0, R1
L_I2Cx_Read43:
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_123.c, 259 :: 		
; I2C_BASE start address is: 0 (R0)
0x0630	0x2500    MOVS	R5, #0
0x0632	0x6804    LDR	R4, [R0, #0]
0x0634	0xF36524CB  BFI	R4, R5, #11, #1
0x0638	0x6004    STR	R4, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 261 :: 		
0x063A	0xE080    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 263 :: 		
L_I2Cx_Read46:
;__Lib_I2C_123.c, 264 :: 		
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; count start address is: 28 (R7)
; slave_address start address is: 12 (R3)
0x063C	0x2501    MOVS	R5, #1
0x063E	0x680C    LDR	R4, [R1, #0]
0x0640	0xF365248A  BFI	R4, R5, #10, #1
0x0644	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 265 :: 		
0x0646	0xF2010510  ADDW	R5, R1, #16
0x064A	0x005C    LSLS	R4, R3, #1
0x064C	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x064E	0xF0440401  ORR	R4, R4, #1
0x0652	0xB2A4    UXTH	R4, R4
0x0654	0x602C    STR	R4, [R5, #0]
; count end address is: 28 (R7)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x0656	0x460D    MOV	R5, R1
0x0658	0x4614    MOV	R4, R2
0x065A	0x46B9    MOV	R9, R7
0x065C	0x46B0    MOV	R8, R6
;__Lib_I2C_123.c, 266 :: 		
L_I2Cx_Read47:
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 16 (R4)
; I2C_BASE start address is: 20 (R5)
0x065E	0x493B    LDR	R1, [PC, #236]
0x0660	0x4628    MOV	R0, R5
0x0662	0xF7FFFDB9  BL	_ChekXForEvent+0
0x0666	0xB900    CBNZ	R0, L_I2Cx_Read48
;__Lib_I2C_123.c, 267 :: 		
0x0668	0xE7F9    B	L_I2Cx_Read47
L_I2Cx_Read48:
;__Lib_I2C_123.c, 268 :: 		
; i start address is: 4 (R1)
0x066A	0x2100    MOVS	R1, #0
; END_mode end address is: 32 (R8)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 20 (R5)
; buf end address is: 16 (R4)
0x066C	0x4623    MOV	R3, R4
0x066E	0x462A    MOV	R2, R5
;__Lib_I2C_123.c, 269 :: 		
L_I2Cx_Read49:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x0670	0xF1A90403  SUB	R4, R9, #3
0x0674	0x42A1    CMP	R1, R4
0x0676	0xD214    BCS	L_I2Cx_Read50
; buf end address is: 12 (R3)
; END_mode end address is: 32 (R8)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
0x0678	0x468A    MOV	R10, R1
0x067A	0x4617    MOV	R7, R2
0x067C	0x461E    MOV	R6, R3
;__Lib_I2C_123.c, 270 :: 		
L_I2Cx_Read51:
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x067E	0x4932    LDR	R1, [PC, #200]
0x0680	0x4638    MOV	R0, R7
0x0682	0xF7FFFDA9  BL	_ChekXForEvent+0
0x0686	0xB900    CBNZ	R0, L_I2Cx_Read52
;__Lib_I2C_123.c, 271 :: 		
0x0688	0xE7F9    B	L_I2Cx_Read51
L_I2Cx_Read52:
;__Lib_I2C_123.c, 272 :: 		
0x068A	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x068E	0xF2070410  ADDW	R4, R7, #16
0x0692	0x6824    LDR	R4, [R4, #0]
0x0694	0x702C    STRB	R4, [R5, #0]
0x0696	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x069A	0x4621    MOV	R1, R4
;__Lib_I2C_123.c, 273 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x069C	0x4633    MOV	R3, R6
0x069E	0x463A    MOV	R2, R7
0x06A0	0xE7E6    B	L_I2Cx_Read49
L_I2Cx_Read50:
;__Lib_I2C_123.c, 274 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x06A2	0x9301    STR	R3, [SP, #4]
; END_mode end address is: 32 (R8)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
0x06A4	0x460B    MOV	R3, R1
0x06A6	0x4616    MOV	R6, R2
0x06A8	0x4642    MOV	R2, R8
0x06AA	0x9901    LDR	R1, [SP, #4]
L_I2Cx_Read53:
; buf end address is: 12 (R3)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x06AC	0xF2060414  ADDW	R4, R6, #20
0x06B0	0x6825    LDR	R5, [R4, #0]
0x06B2	0xF3C50480  UBFX	R4, R5, #2, #1
0x06B6	0xB904    CBNZ	R4, L_I2Cx_Read54
;__Lib_I2C_123.c, 275 :: 		
0x06B8	0xE7F8    B	L_I2Cx_Read53
L_I2Cx_Read54:
;__Lib_I2C_123.c, 276 :: 		
0x06BA	0x2500    MOVS	R5, #0
0x06BC	0x6834    LDR	R4, [R6, #0]
0x06BE	0xF365248A  BFI	R4, R5, #10, #1
0x06C2	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_123.c, 277 :: 		
0x06C4	0x18CD    ADDS	R5, R1, R3
0x06C6	0xF2060410  ADDW	R4, R6, #16
0x06CA	0x6824    LDR	R4, [R4, #0]
0x06CC	0x702C    STRB	R4, [R5, #0]
0x06CE	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
; END_mode end address is: 8 (R2)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x06D0	0x4613    MOV	R3, R2
0x06D2	0x4602    MOV	R2, R0
;__Lib_I2C_123.c, 278 :: 		
L_I2Cx_Read55:
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 12 (R3)
0x06D4	0xF2060414  ADDW	R4, R6, #20
0x06D8	0x6825    LDR	R5, [R4, #0]
0x06DA	0xF3C50480  UBFX	R4, R5, #2, #1
0x06DE	0xB904    CBNZ	R4, L_I2Cx_Read56
;__Lib_I2C_123.c, 279 :: 		
0x06E0	0xE7F8    B	L_I2Cx_Read55
L_I2Cx_Read56:
;__Lib_I2C_123.c, 280 :: 		
0x06E2	0x2B01    CMP	R3, #1
0x06E4	0xD107    BNE	L_I2Cx_Read57
; END_mode end address is: 12 (R3)
;__Lib_I2C_123.c, 281 :: 		
0x06E6	0x2501    MOVS	R5, #1
0x06E8	0x6834    LDR	R4, [R6, #0]
0x06EA	0xF3652449  BFI	R4, R5, #9, #1
0x06EE	0x6034    STR	R4, [R6, #0]
0x06F0	0x4610    MOV	R0, R2
0x06F2	0x4632    MOV	R2, R6
0x06F4	0xE010    B	L_I2Cx_Read58
L_I2Cx_Read57:
;__Lib_I2C_123.c, 283 :: 		
0x06F6	0x2501    MOVS	R5, #1
0x06F8	0x6834    LDR	R4, [R6, #0]
0x06FA	0xF3652408  BFI	R4, R5, #8, #1
0x06FE	0x6034    STR	R4, [R6, #0]
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x0700	0x4635    MOV	R5, R6
0x0702	0x4616    MOV	R6, R2
0x0704	0x460C    MOV	R4, R1
;__Lib_I2C_123.c, 284 :: 		
L_I2Cx_Read59:
; buf start address is: 16 (R4)
; I2C_BASE start address is: 20 (R5)
; i start address is: 24 (R6)
0x0706	0x4912    LDR	R1, [PC, #72]
0x0708	0x4628    MOV	R0, R5
0x070A	0xF7FFFD65  BL	_ChekXForEvent+0
0x070E	0xB900    CBNZ	R0, L_I2Cx_Read60
;__Lib_I2C_123.c, 285 :: 		
0x0710	0xE7F9    B	L_I2Cx_Read59
L_I2Cx_Read60:
;__Lib_I2C_123.c, 286 :: 		
0x0712	0x4621    MOV	R1, R4
; i end address is: 24 (R6)
; buf end address is: 16 (R4)
0x0714	0x462A    MOV	R2, R5
0x0716	0x4630    MOV	R0, R6
L_I2Cx_Read58:
; I2C_BASE end address is: 20 (R5)
;__Lib_I2C_123.c, 287 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x0718	0x180D    ADDS	R5, R1, R0
0x071A	0xF2020410  ADDW	R4, R2, #16
0x071E	0x6824    LDR	R4, [R4, #0]
0x0720	0x702C    STRB	R4, [R5, #0]
0x0722	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_123.c, 288 :: 		
0x0724	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x0726	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x072A	0x6824    LDR	R4, [R4, #0]
0x072C	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 289 :: 		
0x072E	0xE006    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 291 :: 		
L_I2Cx_Read18:
; i start address is: 32 (R8)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; count start address is: 28 (R7)
; slave_address start address is: 12 (R3)
0x0730	0x2F01    CMP	R7, #1
0x0732	0xF43FAED3  BEQ	L_I2Cx_Read20
0x0736	0x2F02    CMP	R7, #2
0x0738	0xF43FAF21  BEQ	L_I2Cx_Read33
; i end address is: 32 (R8)
0x073C	0xE77E    B	L_I2Cx_Read46
; slave_address end address is: 12 (R3)
; count end address is: 28 (R7)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read19:
;__Lib_I2C_123.c, 292 :: 		
L_end_I2Cx_Read:
0x073E	0xF8DDE000  LDR	LR, [SP, #0]
0x0742	0xB002    ADD	SP, SP, #8
0x0744	0x4770    BX	LR
0x0746	0xBF00    NOP
0x0748	0x00400003  	#196672
0x074C	0x00020003  	#196610
0x0750	0x00010003  	#196609
; end of _I2Cx_Read
_BME_Read_DigS:
;bme280.c, 39 :: 		int16_t BME_Read_DigS(uint8_t reg) {
; reg start address is: 0 (R0)
0x0CA0	0xB081    SUB	SP, SP, #4
0x0CA2	0xF8CDE000  STR	LR, [SP, #0]
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
;bme280.c, 41 :: 		data_[0] = reg;
0x0CA6	0x490F    LDR	R1, [PC, #60]
0x0CA8	0x7008    STRB	R0, [R1, #0]
; reg end address is: 0 (R0)
;bme280.c, 42 :: 		I2C3_Start();
0x0CAA	0xF7FFFDB9  BL	_I2C3_Start+0
;bme280.c, 43 :: 		I2C3_Write(BME280_ADDRESS, data_, 1, END_MODE_RESTART);
0x0CAE	0xF2400300  MOVW	R3, #0
0x0CB2	0x2201    MOVS	R2, #1
0x0CB4	0x490B    LDR	R1, [PC, #44]
0x0CB6	0x2076    MOVS	R0, #118
0x0CB8	0xF7FFFDBE  BL	_I2C3_Write+0
;bme280.c, 44 :: 		I2C3_Read(BME280_ADDRESS, output, 2, END_MODE_STOP);
0x0CBC	0xF2400301  MOVW	R3, #1
0x0CC0	0x2202    MOVS	R2, #2
0x0CC2	0x4909    LDR	R1, [PC, #36]
0x0CC4	0x2076    MOVS	R0, #118
0x0CC6	0xF7FFFD99  BL	_I2C3_Read+0
;bme280.c, 45 :: 		result = output[1];
0x0CCA	0x4908    LDR	R1, [PC, #32]
; result start address is: 0 (R0)
0x0CCC	0x7808    LDRB	R0, [R1, #0]
;bme280.c, 46 :: 		result <<= 8;
0x0CCE	0x0202    LSLS	R2, R0, #8
0x0CD0	0xB212    SXTH	R2, R2
; result end address is: 0 (R0)
;bme280.c, 47 :: 		result |= output[0];
0x0CD2	0x4905    LDR	R1, [PC, #20]
0x0CD4	0x7809    LDRB	R1, [R1, #0]
0x0CD6	0xEA420101  ORR	R1, R2, R1, LSL #0
;bme280.c, 48 :: 		return result;
0x0CDA	0xB208    SXTH	R0, R1
;bme280.c, 49 :: 		}
L_end_BME_Read_DigS:
0x0CDC	0xF8DDE000  LDR	LR, [SP, #0]
0x0CE0	0xB001    ADD	SP, SP, #4
0x0CE2	0x4770    BX	LR
0x0CE4	0x01232000  	_data_+0
0x0CE8	0x012D2000  	_output+0
0x0CEC	0x012E2000  	_output+1
; end of _BME_Read_DigS
_BME_Write:
;bme280.c, 25 :: 		void BME_Write( int len) {
; len start address is: 0 (R0)
0x0C60	0xB081    SUB	SP, SP, #4
0x0C62	0xF8CDE000  STR	LR, [SP, #0]
0x0C66	0xB205    SXTH	R5, R0
; len end address is: 0 (R0)
; len start address is: 20 (R5)
;bme280.c, 26 :: 		I2C3_Start();
0x0C68	0xF7FFFDDA  BL	_I2C3_Start+0
;bme280.c, 27 :: 		I2C3_Write(BME280_ADDRESS, data_, len, END_MODE_STOP);
0x0C6C	0xF2400301  MOVW	R3, #1
0x0C70	0xB22A    SXTH	R2, R5
; len end address is: 20 (R5)
0x0C72	0x4904    LDR	R1, [PC, #16]
0x0C74	0x2076    MOVS	R0, #118
0x0C76	0xF7FFFDDF  BL	_I2C3_Write+0
;bme280.c, 28 :: 		}
L_end_BME_Write:
0x0C7A	0xF8DDE000  LDR	LR, [SP, #0]
0x0C7E	0xB001    ADD	SP, SP, #4
0x0C80	0x4770    BX	LR
0x0C82	0xBF00    NOP
0x0C84	0x01232000  	_data_+0
; end of _BME_Write
_USART2_Init:
;uart.c, 9 :: 		void USART2_Init()
0x17B0	0xB081    SUB	SP, SP, #4
0x17B2	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 12 :: 		RCC_AHB1ENR |= _GPIOD_CLOCK_ENABLE; //Enable PORTD Clock
0x17B6	0x482C    LDR	R0, [PC, #176]
0x17B8	0x6800    LDR	R0, [R0, #0]
0x17BA	0xF0400108  ORR	R1, R0, #8
0x17BE	0x482A    LDR	R0, [PC, #168]
0x17C0	0x6001    STR	R1, [R0, #0]
;uart.c, 13 :: 		RCC_APB1ENR |= _USART_CLOCK_ENABLE; //Enable USART Clock
0x17C2	0x482A    LDR	R0, [PC, #168]
0x17C4	0x6800    LDR	R0, [R0, #0]
0x17C6	0xF4403100  ORR	R1, R0, #131072
0x17CA	0x4828    LDR	R0, [PC, #160]
0x17CC	0x6001    STR	R1, [R0, #0]
;uart.c, 14 :: 		my_Delay_ms(_UART_INIT_DELAY);
0x17CE	0x200A    MOVS	R0, #10
0x17D0	0xF000FB64  BL	_my_Delay_ms+0
;uart.c, 17 :: 		GPIOD_MODER |= _GPIOD_PIN6_MODE_AF | _GPIOD_PIN5_MODE_AF; //GPIOD Mode: Alternate Function
0x17D4	0x4826    LDR	R0, [PC, #152]
0x17D6	0x6800    LDR	R0, [R0, #0]
0x17D8	0xF4405120  ORR	R1, R0, #10240
0x17DC	0x4824    LDR	R0, [PC, #144]
0x17DE	0x6001    STR	R1, [R0, #0]
;uart.c, 18 :: 		GPIOD_OSPEEDR |= _GPIOD_PIN6_OSPEED_VERYHIGH | _GPIOD_PIN5_OSPEED_VERYHIGH; //GPIOD OSpeed: Very High Speed
0x17E0	0x4824    LDR	R0, [PC, #144]
0x17E2	0x6800    LDR	R0, [R0, #0]
0x17E4	0xF4405170  ORR	R1, R0, #15360
0x17E8	0x4822    LDR	R0, [PC, #136]
0x17EA	0x6001    STR	R1, [R0, #0]
;uart.c, 19 :: 		GPIOD_AFRL |= _GPIOD_PIN6_AF_USART2 | _GPIOD_PIN5_AF_USART2; //GPIOD AlternateFunction: USART2
0x17EC	0x4822    LDR	R0, [PC, #136]
0x17EE	0x6800    LDR	R0, [R0, #0]
0x17F0	0xF04061EE  ORR	R1, R0, #124780544
0x17F4	0x4820    LDR	R0, [PC, #128]
0x17F6	0x6001    STR	R1, [R0, #0]
;uart.c, 20 :: 		NVIC_IPR9 |= _NVIC_INT_USART2_PRIORITY_0;
0x17F8	0x4820    LDR	R0, [PC, #128]
0x17FA	0x6801    LDR	R1, [R0, #0]
0x17FC	0x481F    LDR	R0, [PC, #124]
0x17FE	0x6001    STR	R1, [R0, #0]
;uart.c, 21 :: 		NVIC_ISER1 |= _NVIC_INT_USART2;
0x1800	0x481F    LDR	R0, [PC, #124]
0x1802	0x6800    LDR	R0, [R0, #0]
0x1804	0xF0400140  ORR	R1, R0, #64
0x1808	0x481D    LDR	R0, [PC, #116]
0x180A	0x6001    STR	R1, [R0, #0]
;uart.c, 22 :: 		USART2_BRR |= _USART_BAUD_RATE;
0x180C	0x481D    LDR	R0, [PC, #116]
0x180E	0x6801    LDR	R1, [R0, #0]
0x1810	0x481D    LDR	R0, [PC, #116]
0x1812	0x4301    ORRS	R1, R0
0x1814	0x481B    LDR	R0, [PC, #108]
0x1816	0x6001    STR	R1, [R0, #0]
;uart.c, 23 :: 		USART2_CR1 |= _USART_ENABLE | _USART_RXNEIE | _USART_TE | _USART_RE;
0x1818	0x481C    LDR	R0, [PC, #112]
0x181A	0x6801    LDR	R1, [R0, #0]
0x181C	0xF242002C  MOVW	R0, #8236
0x1820	0x4301    ORRS	R1, R0
0x1822	0x481A    LDR	R0, [PC, #104]
0x1824	0x6001    STR	R1, [R0, #0]
;uart.c, 24 :: 		my_Delay_ms(_UART_INIT_DELAY);
0x1826	0x200A    MOVS	R0, #10
0x1828	0xF000FB38  BL	_my_Delay_ms+0
;uart.c, 25 :: 		NVIC_SetIntPriority(IVT_INT_USART2, _NVIC_INT_PRIORITY_LVL0);
0x182C	0x2100    MOVS	R1, #0
0x182E	0x2036    MOVS	R0, #54
0x1830	0xF7FFFBD2  BL	_NVIC_SetIntPriority+0
;uart.c, 28 :: 		receiveUART.flag = 0;
0x1834	0x2100    MOVS	R1, #0
0x1836	0x4816    LDR	R0, [PC, #88]
0x1838	0x7001    STRB	R1, [R0, #0]
;uart.c, 29 :: 		receiveUART.bufferPointerWrite = 0;
0x183A	0x2100    MOVS	R1, #0
0x183C	0x4815    LDR	R0, [PC, #84]
0x183E	0x8001    STRH	R1, [R0, #0]
;uart.c, 30 :: 		receiveUART.bufferPointerRead = 0;
0x1840	0x2100    MOVS	R1, #0
0x1842	0x4815    LDR	R0, [PC, #84]
0x1844	0x8001    STRH	R1, [R0, #0]
;uart.c, 31 :: 		receiveUART.msgCount=0;
0x1846	0x2100    MOVS	R1, #0
0x1848	0x4814    LDR	R0, [PC, #80]
0x184A	0x8001    STRH	R1, [R0, #0]
;uart.c, 32 :: 		transmitUART.flag = 0;
0x184C	0x2100    MOVS	R1, #0
0x184E	0x4814    LDR	R0, [PC, #80]
0x1850	0x7001    STRB	R1, [R0, #0]
;uart.c, 33 :: 		transmitUART.byteCount = 0;
0x1852	0x2100    MOVS	R1, #0
0x1854	0x4813    LDR	R0, [PC, #76]
0x1856	0x8001    STRH	R1, [R0, #0]
;uart.c, 34 :: 		transmitUART.bufferPointer = 0;
0x1858	0x2100    MOVS	R1, #0
0x185A	0x4813    LDR	R0, [PC, #76]
0x185C	0x8001    STRH	R1, [R0, #0]
;uart.c, 35 :: 		}
L_end_USART2_Init:
0x185E	0xF8DDE000  LDR	LR, [SP, #0]
0x1862	0xB001    ADD	SP, SP, #4
0x1864	0x4770    BX	LR
0x1866	0xBF00    NOP
0x1868	0x38304002  	RCC_AHB1ENR+0
0x186C	0x38404002  	RCC_APB1ENR+0
0x1870	0x0C004002  	GPIOD_MODER+0
0x1874	0x0C084002  	GPIOD_OSPEEDR+0
0x1878	0x0C204002  	GPIOD_AFRL+0
0x187C	0xE424E000  	NVIC_IPR9+0
0x1880	0xE104E000  	NVIC_ISER1+0
0x1884	0x44084000  	USART2_BRR+0
0x1888	0x0C350000  	#3125
0x188C	0x440C4000  	USART2_CR1+0
0x1890	0x01582000  	_receiveUART+0
0x1894	0x015C2000  	_receiveUART+4
0x1898	0x015E2000  	_receiveUART+6
0x189C	0x015A2000  	_receiveUART+2
0x18A0	0x05482000  	_transmitUART+0
0x18A4	0x054A2000  	_transmitUART+2
0x18A8	0x054C2000  	_transmitUART+4
; end of _USART2_Init
_my_Delay_ms:
;timer.c, 49 :: 		void my_Delay_ms(uint32_t num)
; num start address is: 0 (R0)
; num end address is: 0 (R0)
; num start address is: 0 (R0)
;timer.c, 51 :: 		tick_ms=0;
0x1E9C	0x2200    MOVS	R2, #0
0x1E9E	0x4904    LDR	R1, [PC, #16]
0x1EA0	0x600A    STR	R2, [R1, #0]
; num end address is: 0 (R0)
;timer.c, 52 :: 		while(tick_ms<num);
L_my_Delay_ms4:
; num start address is: 0 (R0)
0x1EA2	0x4903    LDR	R1, [PC, #12]
0x1EA4	0x6809    LDR	R1, [R1, #0]
0x1EA6	0x4281    CMP	R1, R0
0x1EA8	0xD200    BCS	L_my_Delay_ms5
; num end address is: 0 (R0)
0x1EAA	0xE7FA    B	L_my_Delay_ms4
L_my_Delay_ms5:
;timer.c, 53 :: 		}
L_end_my_Delay_ms:
0x1EAC	0x4770    BX	LR
0x1EAE	0xBF00    NOP
0x1EB0	0x01502000  	_tick_ms+0
; end of _my_Delay_ms
_RTCInit:
;timer.c, 55 :: 		void RTCInit(void) {
0x1D98	0xB081    SUB	SP, SP, #4
0x1D9A	0xF8CDE000  STR	LR, [SP, #0]
;timer.c, 56 :: 		RCC_APB1ENR.PWREN = 1; // Enable RTC clock
0x1D9E	0x2101    MOVS	R1, #1
0x1DA0	0xB249    SXTB	R1, R1
0x1DA2	0x482E    LDR	R0, [PC, #184]
0x1DA4	0x6001    STR	R1, [R0, #0]
;timer.c, 57 :: 		PWR_CR.DBP = 1; // Allow access to RTC
0x1DA6	0x482E    LDR	R0, [PC, #184]
0x1DA8	0x6001    STR	R1, [R0, #0]
;timer.c, 58 :: 		RTC_WPR = 0xCA; // Unlock write protection
0x1DAA	0x21CA    MOVS	R1, #202
0x1DAC	0x482D    LDR	R0, [PC, #180]
0x1DAE	0x6001    STR	R1, [R0, #0]
;timer.c, 59 :: 		RTC_WPR = 0x53;
0x1DB0	0x2153    MOVS	R1, #83
0x1DB2	0x482C    LDR	R0, [PC, #176]
0x1DB4	0x6001    STR	R1, [R0, #0]
;timer.c, 60 :: 		if (RCC_BDCR.RTCEN==0) { // if RTC is disabled,
0x1DB6	0x492C    LDR	R1, [PC, #176]
0x1DB8	0x6808    LDR	R0, [R1, #0]
0x1DBA	0xB938    CBNZ	R0, L_RTCInit6
;timer.c, 61 :: 		RCC_BDCR = 0x00010000; // Reset the backup domain
0x1DBC	0xF44F3180  MOV	R1, #65536
0x1DC0	0x482A    LDR	R0, [PC, #168]
0x1DC2	0x6001    STR	R1, [R0, #0]
;timer.c, 62 :: 		RCC_BDCR = 0x00008101; // Set RTCEN, select LSE, set LSEON
0x1DC4	0xF2481101  MOVW	R1, #33025
0x1DC8	0x4828    LDR	R0, [PC, #160]
0x1DCA	0x6001    STR	R1, [R0, #0]
;timer.c, 63 :: 		}
L_RTCInit6:
;timer.c, 64 :: 		while (RTC_ISR.RSF!=1) // Wait for RTC APB registers synchronization
L_RTCInit7:
0x1DCC	0x4928    LDR	R1, [PC, #160]
0x1DCE	0x6808    LDR	R0, [R1, #0]
0x1DD0	0xB900    CBNZ	R0, L_RTCInit8
;timer.c, 65 :: 		;
0x1DD2	0xE7FB    B	L_RTCInit7
L_RTCInit8:
;timer.c, 66 :: 		while (RCC_BDCR.LSERDY!=1) // Wait till LSE is ready
L_RTCInit9:
0x1DD4	0x4927    LDR	R1, [PC, #156]
0x1DD6	0x6808    LDR	R0, [R1, #0]
0x1DD8	0xB900    CBNZ	R0, L_RTCInit10
;timer.c, 67 :: 		;
0x1DDA	0xE7FB    B	L_RTCInit9
L_RTCInit10:
;timer.c, 69 :: 		EXTI_IMR.MR22 = 1; // Set EXTI22 for wake-up timer
0x1DDC	0x2101    MOVS	R1, #1
0x1DDE	0xB249    SXTB	R1, R1
0x1DE0	0x4825    LDR	R0, [PC, #148]
0x1DE2	0x6001    STR	R1, [R0, #0]
;timer.c, 70 :: 		EXTI_RTSR.TR22 = 1;
0x1DE4	0x4825    LDR	R0, [PC, #148]
0x1DE6	0x6001    STR	R1, [R0, #0]
;timer.c, 71 :: 		RTC_CR.WUTE = 0; // Stop wake-up timer, to access it
0x1DE8	0x2100    MOVS	R1, #0
0x1DEA	0xB249    SXTB	R1, R1
0x1DEC	0x4824    LDR	R0, [PC, #144]
0x1DEE	0x6001    STR	R1, [R0, #0]
;timer.c, 72 :: 		while (RTC_ISR.WUTWF!=1) // Wait for wake-up timer access
L_RTCInit11:
0x1DF0	0x4924    LDR	R1, [PC, #144]
0x1DF2	0x6808    LDR	R0, [R1, #0]
0x1DF4	0xB900    CBNZ	R0, L_RTCInit12
;timer.c, 73 :: 		;
0x1DF6	0xE7FB    B	L_RTCInit11
L_RTCInit12:
;timer.c, 74 :: 		RTC_CR.WUTIE = 1; // Enable wake-up timer interrupt
0x1DF8	0x2201    MOVS	R2, #1
0x1DFA	0xB252    SXTB	R2, R2
0x1DFC	0x4822    LDR	R0, [PC, #136]
0x1DFE	0x6002    STR	R2, [R0, #0]
;timer.c, 75 :: 		RTC_WUTR = _RTC_TIME; // Set timer period in seconds
0x1E00	0x215A    MOVS	R1, #90
0x1E02	0x4822    LDR	R0, [PC, #136]
0x1E04	0x6001    STR	R1, [R0, #0]
;timer.c, 76 :: 		RTC_CR |= (0x00000004); // Clear WUCKSEL, to select LSE as clock
0x1E06	0x4822    LDR	R0, [PC, #136]
0x1E08	0x6800    LDR	R0, [R0, #0]
0x1E0A	0xF0400104  ORR	R1, R0, #4
0x1E0E	0x4820    LDR	R0, [PC, #128]
0x1E10	0x6001    STR	R1, [R0, #0]
;timer.c, 77 :: 		RTC_CR.WUTE = 1; // Enable wake-up timer
0x1E12	0x481B    LDR	R0, [PC, #108]
0x1E14	0x6002    STR	R2, [R0, #0]
;timer.c, 79 :: 		RTC_ISR |= 0x00000080; // Enter initialization mode, bit 7
0x1E16	0x481F    LDR	R0, [PC, #124]
0x1E18	0x6800    LDR	R0, [R0, #0]
0x1E1A	0xF0400180  ORR	R1, R0, #128
0x1E1E	0x481D    LDR	R0, [PC, #116]
0x1E20	0x6001    STR	R1, [R0, #0]
;timer.c, 80 :: 		while (RTC_ISR.INITF!=1) // Confirm status, bit 6
L_RTCInit13:
0x1E22	0x491D    LDR	R1, [PC, #116]
0x1E24	0x6808    LDR	R0, [R1, #0]
0x1E26	0xB900    CBNZ	R0, L_RTCInit14
;timer.c, 81 :: 		;
0x1E28	0xE7FB    B	L_RTCInit13
L_RTCInit14:
;timer.c, 86 :: 		RTC_ISR &= ~0x00000080; // Exit initialization mode
0x1E2A	0x481A    LDR	R0, [PC, #104]
0x1E2C	0x6800    LDR	R0, [R0, #0]
0x1E2E	0xF000017F  AND	R1, R0, #127
0x1E32	0x4818    LDR	R0, [PC, #96]
0x1E34	0x6001    STR	R1, [R0, #0]
;timer.c, 88 :: 		RTC_WPR = 0xFF; // Lock write protect
0x1E36	0x21FF    MOVS	R1, #255
0x1E38	0x480A    LDR	R0, [PC, #40]
0x1E3A	0x6001    STR	R1, [R0, #0]
;timer.c, 89 :: 		PWR_CR.DBP = 0; // Inhibit RTC access
0x1E3C	0x2100    MOVS	R1, #0
0x1E3E	0xB249    SXTB	R1, R1
0x1E40	0x4807    LDR	R0, [PC, #28]
0x1E42	0x6001    STR	R1, [R0, #0]
;timer.c, 90 :: 		NVIC_IntEnable(IVT_INT_RTC_WKUP); // Enable RTC wake up interrupt
0x1E44	0xF2400013  MOVW	R0, #19
0x1E48	0xF7FFF942  BL	_NVIC_IntEnable+0
;timer.c, 91 :: 		NVIC_SetIntPriority(IVT_INT_RTC_WKUP, _NVIC_INT_PRIORITY_LVL2);
0x1E4C	0x2102    MOVS	R1, #2
0x1E4E	0x2013    MOVS	R0, #19
0x1E50	0xF7FFF8C2  BL	_NVIC_SetIntPriority+0
;timer.c, 92 :: 		}
L_end_RTCInit:
0x1E54	0xF8DDE000  LDR	LR, [SP, #0]
0x1E58	0xB001    ADD	SP, SP, #4
0x1E5A	0x4770    BX	LR
0x1E5C	0x08704247  	RCC_APB1ENR+0
0x1E60	0x0020420E  	PWR_CR+0
0x1E64	0x28244000  	RTC_WPR+0
0x1E68	0x0E3C4247  	RCC_BDCR+0
0x1E6C	0x38704002  	RCC_BDCR+0
0x1E70	0x01944205  	RTC_ISR+0
0x1E74	0x0E044247  	RCC_BDCR+0
0x1E78	0x80584227  	EXTI_IMR+0
0x1E7C	0x81584227  	EXTI_RTSR+0
0x1E80	0x01284205  	RTC_CR+0
0x1E84	0x01884205  	RTC_ISR+0
0x1E88	0x01384205  	RTC_CR+0
0x1E8C	0x28144000  	RTC_WUTR+0
0x1E90	0x28084000  	RTC_CR+0
0x1E94	0x280C4000  	RTC_ISR+0
0x1E98	0x01984205  	RTC_ISR+0
; end of _RTCInit
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x1EB4	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x1EB6	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x1EBA	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x1EBE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x1EC2	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x1EC4	0xB001    ADD	SP, SP, #4
0x1EC6	0x4770    BX	LR
; end of ___CC2DW
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x2740	0xB082    SUB	SP, SP, #8
0x2742	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x2746	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x2748	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x274A	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x274C	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x274E	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x2750	0x2803    CMP	R0, #3
0x2752	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x2756	0x4893    LDR	R0, [PC, #588]
0x2758	0x4281    CMP	R1, R0
0x275A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x275C	0x4892    LDR	R0, [PC, #584]
0x275E	0x6800    LDR	R0, [R0, #0]
0x2760	0xF0400105  ORR	R1, R0, #5
0x2764	0x4890    LDR	R0, [PC, #576]
0x2766	0x6001    STR	R1, [R0, #0]
0x2768	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x276A	0x4890    LDR	R0, [PC, #576]
0x276C	0x4281    CMP	R1, R0
0x276E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x2770	0x488D    LDR	R0, [PC, #564]
0x2772	0x6800    LDR	R0, [R0, #0]
0x2774	0xF0400104  ORR	R1, R0, #4
0x2778	0x488B    LDR	R0, [PC, #556]
0x277A	0x6001    STR	R1, [R0, #0]
0x277C	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x277E	0x488C    LDR	R0, [PC, #560]
0x2780	0x4281    CMP	R1, R0
0x2782	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x2784	0x4888    LDR	R0, [PC, #544]
0x2786	0x6800    LDR	R0, [R0, #0]
0x2788	0xF0400103  ORR	R1, R0, #3
0x278C	0x4886    LDR	R0, [PC, #536]
0x278E	0x6001    STR	R1, [R0, #0]
0x2790	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2792	0xF64E2060  MOVW	R0, #60000
0x2796	0x4281    CMP	R1, R0
0x2798	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x279A	0x4883    LDR	R0, [PC, #524]
0x279C	0x6800    LDR	R0, [R0, #0]
0x279E	0xF0400102  ORR	R1, R0, #2
0x27A2	0x4881    LDR	R0, [PC, #516]
0x27A4	0x6001    STR	R1, [R0, #0]
0x27A6	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x27A8	0xF2475030  MOVW	R0, #30000
0x27AC	0x4281    CMP	R1, R0
0x27AE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x27B0	0x487D    LDR	R0, [PC, #500]
0x27B2	0x6800    LDR	R0, [R0, #0]
0x27B4	0xF0400101  ORR	R1, R0, #1
0x27B8	0x487B    LDR	R0, [PC, #492]
0x27BA	0x6001    STR	R1, [R0, #0]
0x27BC	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x27BE	0x487A    LDR	R0, [PC, #488]
0x27C0	0x6801    LDR	R1, [R0, #0]
0x27C2	0xF06F0007  MVN	R0, #7
0x27C6	0x4001    ANDS	R1, R0
0x27C8	0x4877    LDR	R0, [PC, #476]
0x27CA	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x27CC	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x27CE	0x2802    CMP	R0, #2
0x27D0	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x27D4	0x4877    LDR	R0, [PC, #476]
0x27D6	0x4281    CMP	R1, R0
0x27D8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x27DA	0x4873    LDR	R0, [PC, #460]
0x27DC	0x6800    LDR	R0, [R0, #0]
0x27DE	0xF0400106  ORR	R1, R0, #6
0x27E2	0x4871    LDR	R0, [PC, #452]
0x27E4	0x6001    STR	R1, [R0, #0]
0x27E6	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x27E8	0x4870    LDR	R0, [PC, #448]
0x27EA	0x4281    CMP	R1, R0
0x27EC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x27EE	0x486E    LDR	R0, [PC, #440]
0x27F0	0x6800    LDR	R0, [R0, #0]
0x27F2	0xF0400105  ORR	R1, R0, #5
0x27F6	0x486C    LDR	R0, [PC, #432]
0x27F8	0x6001    STR	R1, [R0, #0]
0x27FA	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x27FC	0x486E    LDR	R0, [PC, #440]
0x27FE	0x4281    CMP	R1, R0
0x2800	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x2802	0x4869    LDR	R0, [PC, #420]
0x2804	0x6800    LDR	R0, [R0, #0]
0x2806	0xF0400104  ORR	R1, R0, #4
0x280A	0x4867    LDR	R0, [PC, #412]
0x280C	0x6001    STR	R1, [R0, #0]
0x280E	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2810	0x486A    LDR	R0, [PC, #424]
0x2812	0x4281    CMP	R1, R0
0x2814	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x2816	0x4864    LDR	R0, [PC, #400]
0x2818	0x6800    LDR	R0, [R0, #0]
0x281A	0xF0400103  ORR	R1, R0, #3
0x281E	0x4862    LDR	R0, [PC, #392]
0x2820	0x6001    STR	R1, [R0, #0]
0x2822	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2824	0xF64B3080  MOVW	R0, #48000
0x2828	0x4281    CMP	R1, R0
0x282A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x282C	0x485E    LDR	R0, [PC, #376]
0x282E	0x6800    LDR	R0, [R0, #0]
0x2830	0xF0400102  ORR	R1, R0, #2
0x2834	0x485C    LDR	R0, [PC, #368]
0x2836	0x6001    STR	R1, [R0, #0]
0x2838	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x283A	0xF64550C0  MOVW	R0, #24000
0x283E	0x4281    CMP	R1, R0
0x2840	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x2842	0x4859    LDR	R0, [PC, #356]
0x2844	0x6800    LDR	R0, [R0, #0]
0x2846	0xF0400101  ORR	R1, R0, #1
0x284A	0x4857    LDR	R0, [PC, #348]
0x284C	0x6001    STR	R1, [R0, #0]
0x284E	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x2850	0x4855    LDR	R0, [PC, #340]
0x2852	0x6801    LDR	R1, [R0, #0]
0x2854	0xF06F0007  MVN	R0, #7
0x2858	0x4001    ANDS	R1, R0
0x285A	0x4853    LDR	R0, [PC, #332]
0x285C	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x285E	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2860	0x2801    CMP	R0, #1
0x2862	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x2866	0x4851    LDR	R0, [PC, #324]
0x2868	0x4281    CMP	R1, R0
0x286A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x286C	0x484E    LDR	R0, [PC, #312]
0x286E	0x6800    LDR	R0, [R0, #0]
0x2870	0xF0400107  ORR	R1, R0, #7
0x2874	0x484C    LDR	R0, [PC, #304]
0x2876	0x6001    STR	R1, [R0, #0]
0x2878	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x287A	0x4851    LDR	R0, [PC, #324]
0x287C	0x4281    CMP	R1, R0
0x287E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x2880	0x4849    LDR	R0, [PC, #292]
0x2882	0x6800    LDR	R0, [R0, #0]
0x2884	0xF0400106  ORR	R1, R0, #6
0x2888	0x4847    LDR	R0, [PC, #284]
0x288A	0x6001    STR	R1, [R0, #0]
0x288C	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x288E	0x4848    LDR	R0, [PC, #288]
0x2890	0x4281    CMP	R1, R0
0x2892	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x2894	0x4844    LDR	R0, [PC, #272]
0x2896	0x6800    LDR	R0, [R0, #0]
0x2898	0xF0400105  ORR	R1, R0, #5
0x289C	0x4842    LDR	R0, [PC, #264]
0x289E	0x6001    STR	R1, [R0, #0]
0x28A0	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x28A2	0x4846    LDR	R0, [PC, #280]
0x28A4	0x4281    CMP	R1, R0
0x28A6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x28A8	0x483F    LDR	R0, [PC, #252]
0x28AA	0x6800    LDR	R0, [R0, #0]
0x28AC	0xF0400104  ORR	R1, R0, #4
0x28B0	0x483D    LDR	R0, [PC, #244]
0x28B2	0x6001    STR	R1, [R0, #0]
0x28B4	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x28B6	0xF24D20F0  MOVW	R0, #54000
0x28BA	0x4281    CMP	R1, R0
0x28BC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x28BE	0x483A    LDR	R0, [PC, #232]
0x28C0	0x6800    LDR	R0, [R0, #0]
0x28C2	0xF0400103  ORR	R1, R0, #3
0x28C6	0x4838    LDR	R0, [PC, #224]
0x28C8	0x6001    STR	R1, [R0, #0]
0x28CA	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x28CC	0xF64840A0  MOVW	R0, #36000
0x28D0	0x4281    CMP	R1, R0
0x28D2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x28D4	0x4834    LDR	R0, [PC, #208]
0x28D6	0x6800    LDR	R0, [R0, #0]
0x28D8	0xF0400102  ORR	R1, R0, #2
0x28DC	0x4832    LDR	R0, [PC, #200]
0x28DE	0x6001    STR	R1, [R0, #0]
0x28E0	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x28E2	0xF2446050  MOVW	R0, #18000
0x28E6	0x4281    CMP	R1, R0
0x28E8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x28EA	0x482F    LDR	R0, [PC, #188]
0x28EC	0x6800    LDR	R0, [R0, #0]
0x28EE	0xF0400101  ORR	R1, R0, #1
0x28F2	0x482D    LDR	R0, [PC, #180]
0x28F4	0x6001    STR	R1, [R0, #0]
0x28F6	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x28F8	0x482B    LDR	R0, [PC, #172]
0x28FA	0x6801    LDR	R1, [R0, #0]
0x28FC	0xF06F0007  MVN	R0, #7
0x2900	0x4001    ANDS	R1, R0
0x2902	0x4829    LDR	R0, [PC, #164]
0x2904	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x2906	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2908	0x2800    CMP	R0, #0
0x290A	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x290E	0x482D    LDR	R0, [PC, #180]
0x2910	0x4281    CMP	R1, R0
0x2912	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x2914	0x4824    LDR	R0, [PC, #144]
0x2916	0x6800    LDR	R0, [R0, #0]
0x2918	0xF0400107  ORR	R1, R0, #7
0x291C	0x4822    LDR	R0, [PC, #136]
0x291E	0x6001    STR	R1, [R0, #0]
0x2920	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2922	0x4825    LDR	R0, [PC, #148]
0x2924	0x4281    CMP	R1, R0
0x2926	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x2928	0x481F    LDR	R0, [PC, #124]
0x292A	0x6800    LDR	R0, [R0, #0]
0x292C	0xF0400106  ORR	R1, R0, #6
0x2930	0x481D    LDR	R0, [PC, #116]
0x2932	0x6001    STR	R1, [R0, #0]
0x2934	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2936	0x4824    LDR	R0, [PC, #144]
0x2938	0x4281    CMP	R1, R0
0x293A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x293C	0x481A    LDR	R0, [PC, #104]
0x293E	0x6800    LDR	R0, [R0, #0]
0x2940	0xF0400105  ORR	R1, R0, #5
0x2944	0x4818    LDR	R0, [PC, #96]
0x2946	0x6001    STR	R1, [R0, #0]
0x2948	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x294A	0xF5B14F7A  CMP	R1, #64000
0x294E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x2950	0x4815    LDR	R0, [PC, #84]
0x2952	0x6800    LDR	R0, [R0, #0]
0x2954	0xF0400104  ORR	R1, R0, #4
0x2958	0x4813    LDR	R0, [PC, #76]
0x295A	0x6001    STR	R1, [R0, #0]
0x295C	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x295E	0xF64B3080  MOVW	R0, #48000
0x2962	0x4281    CMP	R1, R0
0x2964	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x2966	0x4810    LDR	R0, [PC, #64]
0x2968	0x6800    LDR	R0, [R0, #0]
0x296A	0xF0400103  ORR	R1, R0, #3
0x296E	0x480E    LDR	R0, [PC, #56]
0x2970	0x6001    STR	R1, [R0, #0]
0x2972	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2974	0xF5B14FFA  CMP	R1, #32000
0x2978	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x297A	0x480B    LDR	R0, [PC, #44]
0x297C	0x6800    LDR	R0, [R0, #0]
0x297E	0xF0400102  ORR	R1, R0, #2
0x2982	0x4809    LDR	R0, [PC, #36]
0x2984	0x6001    STR	R1, [R0, #0]
0x2986	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2988	0xF5B15F7A  CMP	R1, #16000
0x298C	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x298E	0xE01D    B	#58
0x2990	0x00810100  	#16777345
0x2994	0x1E080500  	#83893768
0x2998	0x94020000  	#37890
0x299C	0x00030000  	#3
0x29A0	0xD4C00001  	#120000
0x29A4	0x49F00002  	#150000
0x29A8	0x3C004002  	FLASH_ACR+0
0x29AC	0xD4C00001  	#120000
0x29B0	0x5F900001  	#90000
0x29B4	0x32800002  	#144000
0x29B8	0x77000001  	#96000
0x29BC	0x19400001  	#72000
0x29C0	0xA5E00001  	#108000
0x29C4	0xB5800001  	#112000
0x29C8	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x29CC	0x482D    LDR	R0, [PC, #180]
0x29CE	0x6800    LDR	R0, [R0, #0]
0x29D0	0xF0400101  ORR	R1, R0, #1
0x29D4	0x482B    LDR	R0, [PC, #172]
0x29D6	0x6001    STR	R1, [R0, #0]
0x29D8	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x29DA	0x482A    LDR	R0, [PC, #168]
0x29DC	0x6801    LDR	R1, [R0, #0]
0x29DE	0xF06F0007  MVN	R0, #7
0x29E2	0x4001    ANDS	R1, R0
0x29E4	0x4827    LDR	R0, [PC, #156]
0x29E6	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x29E8	0x2101    MOVS	R1, #1
0x29EA	0xB249    SXTB	R1, R1
0x29EC	0x4826    LDR	R0, [PC, #152]
0x29EE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x29F0	0x4826    LDR	R0, [PC, #152]
0x29F2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x29F4	0xF7FFFC72  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x29F8	0x4825    LDR	R0, [PC, #148]
0x29FA	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x29FC	0x4825    LDR	R0, [PC, #148]
0x29FE	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x2A00	0x4825    LDR	R0, [PC, #148]
0x2A02	0xEA020100  AND	R1, R2, R0, LSL #0
0x2A06	0x4825    LDR	R0, [PC, #148]
0x2A08	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x2A0A	0xF0020001  AND	R0, R2, #1
0x2A0E	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x2A10	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2A12	0x4822    LDR	R0, [PC, #136]
0x2A14	0x6800    LDR	R0, [R0, #0]
0x2A16	0xF0000002  AND	R0, R0, #2
0x2A1A	0x2800    CMP	R0, #0
0x2A1C	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x2A1E	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x2A20	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x2A22	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2A24	0xF4023080  AND	R0, R2, #65536
0x2A28	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x2A2A	0x481C    LDR	R0, [PC, #112]
0x2A2C	0x6800    LDR	R0, [R0, #0]
0x2A2E	0xF4003000  AND	R0, R0, #131072
0x2A32	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x2A34	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x2A36	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x2A38	0x460A    MOV	R2, R1
0x2A3A	0x9901    LDR	R1, [SP, #4]
0x2A3C	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x2A3E	0x9101    STR	R1, [SP, #4]
0x2A40	0x4611    MOV	R1, R2
0x2A42	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x2A44	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x2A48	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x2A4A	0x4814    LDR	R0, [PC, #80]
0x2A4C	0x6800    LDR	R0, [R0, #0]
0x2A4E	0xF0407180  ORR	R1, R0, #16777216
0x2A52	0x4812    LDR	R0, [PC, #72]
0x2A54	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x2A56	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x2A58	0x4810    LDR	R0, [PC, #64]
0x2A5A	0x6800    LDR	R0, [R0, #0]
0x2A5C	0xF0007000  AND	R0, R0, #33554432
0x2A60	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x2A62	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x2A64	0x460A    MOV	R2, R1
0x2A66	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x2A68	0x480A    LDR	R0, [PC, #40]
0x2A6A	0x6800    LDR	R0, [R0, #0]
0x2A6C	0xF000010C  AND	R1, R0, #12
0x2A70	0x0090    LSLS	R0, R2, #2
0x2A72	0xF000000C  AND	R0, R0, #12
0x2A76	0x4281    CMP	R1, R0
0x2A78	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x2A7A	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x2A7C	0xF8DDE000  LDR	LR, [SP, #0]
0x2A80	0xB002    ADD	SP, SP, #8
0x2A82	0x4770    BX	LR
0x2A84	0x3C004002  	FLASH_ACR+0
0x2A88	0x80204247  	FLASH_ACR+0
0x2A8C	0x80244247  	FLASH_ACR+0
0x2A90	0x38044002  	RCC_PLLCFGR+0
0x2A94	0x38084002  	RCC_CFGR+0
0x2A98	0xFFFF000F  	#1048575
0x2A9C	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x22DC	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x22DE	0x480D    LDR	R0, [PC, #52]
0x22E0	0x6800    LDR	R0, [R0, #0]
0x22E2	0xF0400101  ORR	R1, R0, #1
0x22E6	0x480B    LDR	R0, [PC, #44]
0x22E8	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x22EA	0x2100    MOVS	R1, #0
0x22EC	0x480A    LDR	R0, [PC, #40]
0x22EE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x22F0	0x4808    LDR	R0, [PC, #32]
0x22F2	0x6801    LDR	R1, [R0, #0]
0x22F4	0x4809    LDR	R0, [PC, #36]
0x22F6	0x4001    ANDS	R1, R0
0x22F8	0x4806    LDR	R0, [PC, #24]
0x22FA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x22FC	0x4908    LDR	R1, [PC, #32]
0x22FE	0x4809    LDR	R0, [PC, #36]
0x2300	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x2302	0x4804    LDR	R0, [PC, #16]
0x2304	0x6801    LDR	R1, [R0, #0]
0x2306	0xF46F2080  MVN	R0, #262144
0x230A	0x4001    ANDS	R1, R0
0x230C	0x4801    LDR	R0, [PC, #4]
0x230E	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x2310	0xB001    ADD	SP, SP, #4
0x2312	0x4770    BX	LR
0x2314	0x38004002  	RCC_CR+0
0x2318	0x38084002  	RCC_CFGR+0
0x231C	0xFFFFFEF6  	#-17367041
0x2320	0x30102400  	#603992080
0x2324	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x2D70	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x2D72	0x4904    LDR	R1, [PC, #16]
0x2D74	0x4804    LDR	R0, [PC, #16]
0x2D76	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x2D78	0x4904    LDR	R1, [PC, #16]
0x2D7A	0x4805    LDR	R0, [PC, #20]
0x2D7C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x2D7E	0xB001    ADD	SP, SP, #4
0x2D80	0x4770    BX	LR
0x2D82	0xBF00    NOP
0x2D84	0xD4C00001  	#120000
0x2D88	0x09382000  	___System_CLOCK_IN_KHZ+0
0x2D8C	0x00030000  	#3
0x2D90	0x09482000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x2D94	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x2D96	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x2D98	0xB001    ADD	SP, SP, #4
0x2D9A	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x2D9C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x2D9E	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x2DA2	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x2DA6	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x2DA8	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x2DAC	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x2DAE	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x2DB0	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x2DB2	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x2DB4	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x2DB6	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x2DBA	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x2DBE	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x2DC2	0xB001    ADD	SP, SP, #4
0x2DC4	0x4770    BX	LR
; end of ___EnableFPU
0x2FF8	0xB500    PUSH	(R14)
0x2FFA	0xF8DFB014  LDR	R11, [PC, #20]
0x2FFE	0xF8DFA014  LDR	R10, [PC, #20]
0x3002	0xF8DFC014  LDR	R12, [PC, #20]
0x3006	0xF7FEFF55  BL	7860
0x300A	0xBD00    POP	(R15)
0x300C	0x4770    BX	LR
0x300E	0xBF00    NOP
0x3010	0x00002000  	#536870912
0x3014	0x01232000  	#536871203
0x3018	0x2DC60000  	#11718
0x3078	0xB500    PUSH	(R14)
0x307A	0xF8DFB010  LDR	R11, [PC, #16]
0x307E	0xF8DFA010  LDR	R10, [PC, #16]
0x3082	0xF7FFF951  BL	9000
0x3086	0xBD00    POP	(R15)
0x3088	0x4770    BX	LR
0x308A	0xBF00    NOP
0x308C	0x00002000  	#536870912
0x3090	0x0A982000  	#536873624
_Timer2_interrupt:
;timer.c, 19 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 {
;timer.c, 20 :: 		TIM2_SR.UIF = 0;
0x2BB4	0x2100    MOVS	R1, #0
0x2BB6	0xB249    SXTB	R1, R1
0x2BB8	0x4806    LDR	R0, [PC, #24]
0x2BBA	0x6001    STR	R1, [R0, #0]
;timer.c, 21 :: 		if(tick_us<_MAX_TIME_CALC)
0x2BBC	0x4806    LDR	R0, [PC, #24]
0x2BBE	0x6801    LDR	R1, [R0, #0]
0x2BC0	0x4806    LDR	R0, [PC, #24]
0x2BC2	0x4281    CMP	R1, R0
0x2BC4	0xD204    BCS	L_Timer2_interrupt0
;timer.c, 22 :: 		tick_us++;
0x2BC6	0x4804    LDR	R0, [PC, #16]
0x2BC8	0x6800    LDR	R0, [R0, #0]
0x2BCA	0x1C41    ADDS	R1, R0, #1
0x2BCC	0x4802    LDR	R0, [PC, #8]
0x2BCE	0x6001    STR	R1, [R0, #0]
L_Timer2_interrupt0:
;timer.c, 23 :: 		}
L_end_Timer2_interrupt:
0x2BD0	0x4770    BX	LR
0x2BD2	0xBF00    NOP
0x2BD4	0x02004200  	TIM2_SR+0
0x2BD8	0x01542000  	_tick_us+0
0x2BDC	0xCA003B9A  	#1000000000
; end of _Timer2_interrupt
_Timer3_interrupt:
;timer.c, 43 :: 		void Timer3_interrupt() iv IVT_INT_TIM3 {
;timer.c, 44 :: 		TIM3_SR.UIF = 0;
0x2BE0	0x2100    MOVS	R1, #0
0x2BE2	0xB249    SXTB	R1, R1
0x2BE4	0x4806    LDR	R0, [PC, #24]
0x2BE6	0x6001    STR	R1, [R0, #0]
;timer.c, 45 :: 		if(tick_ms<_MAX_TIME_CALC)
0x2BE8	0x4806    LDR	R0, [PC, #24]
0x2BEA	0x6801    LDR	R1, [R0, #0]
0x2BEC	0x4806    LDR	R0, [PC, #24]
0x2BEE	0x4281    CMP	R1, R0
0x2BF0	0xD204    BCS	L_Timer3_interrupt3
;timer.c, 46 :: 		tick_ms++;
0x2BF2	0x4804    LDR	R0, [PC, #16]
0x2BF4	0x6800    LDR	R0, [R0, #0]
0x2BF6	0x1C41    ADDS	R1, R0, #1
0x2BF8	0x4802    LDR	R0, [PC, #8]
0x2BFA	0x6001    STR	R1, [R0, #0]
L_Timer3_interrupt3:
;timer.c, 47 :: 		}
L_end_Timer3_interrupt:
0x2BFC	0x4770    BX	LR
0x2BFE	0xBF00    NOP
0x2C00	0x82004200  	TIM3_SR+0
0x2C04	0x01502000  	_tick_ms+0
0x2C08	0xCA003B9A  	#1000000000
; end of _Timer3_interrupt
_interRTC:
;main.c, 36 :: 		void interRTC() iv IVT_INT_RTC_WKUP ics ICS_AUTO {
0x2C0C	0xE92D0FF0  PUSH	(R4, R5, R6, R7, R8, R9, R10, R11)
0x2C10	0xB085    SUB	SP, SP, #20
0x2C12	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 37 :: 		PWR_CR.DBP = 1;
0x2C16	0x2201    MOVS	R2, #1
0x2C18	0xB252    SXTB	R2, R2
0x2C1A	0x4847    LDR	R0, [PC, #284]
0x2C1C	0x6002    STR	R2, [R0, #0]
;main.c, 38 :: 		RTC_ISR.WUTF = 0; // Clear wake-up event flag
0x2C1E	0x2100    MOVS	R1, #0
0x2C20	0xB249    SXTB	R1, R1
0x2C22	0x4846    LDR	R0, [PC, #280]
0x2C24	0x6001    STR	R1, [R0, #0]
;main.c, 39 :: 		PWR_CR.DBP = 0;
0x2C26	0x4844    LDR	R0, [PC, #272]
0x2C28	0x6001    STR	R1, [R0, #0]
;main.c, 40 :: 		EXTI_PR.PR22 = 1; // Clear wake-up interrupt flag
0x2C2A	0x4845    LDR	R0, [PC, #276]
0x2C2C	0x6002    STR	R2, [R0, #0]
;main.c, 41 :: 		while (RTC_ISR.RSF!=1); // Wait for RTC APB registers synchronization
L_interRTC0:
0x2C2E	0x4945    LDR	R1, [PC, #276]
0x2C30	0x6808    LDR	R0, [R1, #0]
0x2C32	0xB900    CBNZ	R0, L_interRTC1
0x2C34	0xE7FB    B	L_interRTC0
L_interRTC1:
;main.c, 43 :: 		LD1=0; LD2=0;
0x2C36	0x2100    MOVS	R1, #0
0x2C38	0xB249    SXTB	R1, R1
0x2C3A	0x4843    LDR	R0, [PC, #268]
0x2C3C	0x9004    STR	R0, [SP, #16]
0x2C3E	0x6001    STR	R1, [R0, #0]
0x2C40	0x4842    LDR	R0, [PC, #264]
0x2C42	0x9003    STR	R0, [SP, #12]
0x2C44	0x6001    STR	R1, [R0, #0]
;main.c, 44 :: 		cnt=10;
0x2C46	0x210A    MOVS	R1, #10
0x2C48	0x4841    LDR	R0, [PC, #260]
0x2C4A	0x7001    STRB	R1, [R0, #0]
;main.c, 45 :: 		ok=0;
0x2C4C	0x2100    MOVS	R1, #0
0x2C4E	0x4841    LDR	R0, [PC, #260]
0x2C50	0x7001    STRB	R1, [R0, #0]
;main.c, 46 :: 		press=getPressure();
0x2C52	0xF7FFFBC7  BL	_getPressure+0
0x2C56	0x4840    LDR	R0, [PC, #256]
0x2C58	0x9002    STR	R0, [SP, #8]
0x2C5A	0xED000A00  VSTR.32	S0, [R0, #0]
;main.c, 47 :: 		LD1=1; LD2=0;
0x2C5E	0x2201    MOVS	R2, #1
0x2C60	0xB252    SXTB	R2, R2
0x2C62	0x9804    LDR	R0, [SP, #16]
0x2C64	0x6002    STR	R2, [R0, #0]
0x2C66	0x2100    MOVS	R1, #0
0x2C68	0xB249    SXTB	R1, R1
0x2C6A	0x9803    LDR	R0, [SP, #12]
0x2C6C	0x6001    STR	R1, [R0, #0]
;main.c, 49 :: 		TIM2_CR1.CEN = 1;
0x2C6E	0x483B    LDR	R0, [PC, #236]
0x2C70	0x6002    STR	R2, [R0, #0]
;main.c, 50 :: 		TIM3_CR1.CEN = 1;
0x2C72	0x483B    LDR	R0, [PC, #236]
0x2C74	0x6002    STR	R2, [R0, #0]
;main.c, 51 :: 		temp=calcTemp();
0x2C76	0xF7FFFD05  BL	_calcTemp+0
0x2C7A	0x483A    LDR	R0, [PC, #232]
0x2C7C	0x9001    STR	R0, [SP, #4]
0x2C7E	0xED000A00  VSTR.32	S0, [R0, #0]
;main.c, 53 :: 		hum=calcHumTemp(1);
0x2C82	0x2001    MOVS	R0, #1
0x2C84	0xF7FFFBE0  BL	_calcHumTemp+0
0x2C88	0x4837    LDR	R0, [PC, #220]
0x2C8A	0xED000A00  VSTR.32	S0, [R0, #0]
;main.c, 54 :: 		dist=getDistance();
0x2C8E	0xF7FFFCC5  BL	_getDistance+0
0x2C92	0x4836    LDR	R0, [PC, #216]
0x2C94	0xED000A00  VSTR.32	S0, [R0, #0]
;main.c, 55 :: 		LD1=0; LD2=1;
0x2C98	0x2100    MOVS	R1, #0
0x2C9A	0xB249    SXTB	R1, R1
0x2C9C	0x9804    LDR	R0, [SP, #16]
0x2C9E	0x6001    STR	R1, [R0, #0]
0x2CA0	0x2101    MOVS	R1, #1
0x2CA2	0xB249    SXTB	R1, R1
0x2CA4	0x9803    LDR	R0, [SP, #12]
0x2CA6	0x6001    STR	R1, [R0, #0]
;main.c, 56 :: 		showTempLCD(temp,press);
0x2CA8	0x9802    LDR	R0, [SP, #8]
0x2CAA	0xED500A00  VLDR.32	S1, [R0, #0]
0x2CAE	0x9801    LDR	R0, [SP, #4]
0x2CB0	0xED100A00  VLDR.32	S0, [R0, #0]
0x2CB4	0xF7FFFAD6  BL	_showTempLCD+0
;main.c, 57 :: 		ok=0;
0x2CB8	0x2100    MOVS	R1, #0
0x2CBA	0x4826    LDR	R0, [PC, #152]
0x2CBC	0x7001    STRB	R1, [R0, #0]
;main.c, 58 :: 		while(ok==0 && cnt>0)
L_interRTC2:
0x2CBE	0x4825    LDR	R0, [PC, #148]
0x2CC0	0x7800    LDRB	R0, [R0, #0]
0x2CC2	0x2800    CMP	R0, #0
0x2CC4	0xD126    BNE	L__interRTC10
0x2CC6	0x4822    LDR	R0, [PC, #136]
0x2CC8	0x7800    LDRB	R0, [R0, #0]
0x2CCA	0x2800    CMP	R0, #0
0x2CCC	0xD922    BLS	L__interRTC9
L__interRTC8:
;main.c, 60 :: 		ok=sendData(temp, hum, press,dist);
0x2CCE	0x4827    LDR	R0, [PC, #156]
0x2CD0	0xED501A00  VLDR.32	S3, [R0, #0]
0x2CD4	0x4820    LDR	R0, [PC, #128]
0x2CD6	0xED101A00  VLDR.32	S2, [R0, #0]
0x2CDA	0x4823    LDR	R0, [PC, #140]
0x2CDC	0xED500A00  VLDR.32	S1, [R0, #0]
0x2CE0	0x4820    LDR	R0, [PC, #128]
0x2CE2	0xED100A00  VLDR.32	S0, [R0, #0]
0x2CE6	0xF7FFF8EF  BL	_sendData+0
0x2CEA	0x491A    LDR	R1, [PC, #104]
0x2CEC	0x7008    STRB	R0, [R1, #0]
;main.c, 61 :: 		showTempLCD(ok,cnt);
0x2CEE	0x4918    LDR	R1, [PC, #96]
0x2CF0	0x7809    LDRB	R1, [R1, #0]
0x2CF2	0xEE001A10  VMOV	S0, R1
0x2CF6	0xEEB80A40  VCVT.F32.U32	S0, S0
0x2CFA	0xEEF00A40  VMOV.F32	S1, S0
0x2CFE	0xEE000A10  VMOV	S0, R0
0x2D02	0xEEB80A40  VCVT.F32.U32	S0, S0
0x2D06	0xF7FFFAAD  BL	_showTempLCD+0
;main.c, 62 :: 		cnt--;
0x2D0A	0x4911    LDR	R1, [PC, #68]
0x2D0C	0x7808    LDRB	R0, [R1, #0]
0x2D0E	0x1E40    SUBS	R0, R0, #1
0x2D10	0x7008    STRB	R0, [R1, #0]
;main.c, 63 :: 		}
0x2D12	0xE7D4    B	L_interRTC2
;main.c, 58 :: 		while(ok==0 && cnt>0)
L__interRTC10:
L__interRTC9:
;main.c, 64 :: 		TIM2_CR1.CEN = 0;
0x2D14	0x2100    MOVS	R1, #0
0x2D16	0xB249    SXTB	R1, R1
0x2D18	0x4810    LDR	R0, [PC, #64]
0x2D1A	0x6001    STR	R1, [R0, #0]
;main.c, 65 :: 		TIM3_CR1.CEN = 0;
0x2D1C	0x4810    LDR	R0, [PC, #64]
0x2D1E	0x6001    STR	R1, [R0, #0]
;main.c, 66 :: 		LD1=1; LD2=1;
0x2D20	0x2101    MOVS	R1, #1
0x2D22	0xB249    SXTB	R1, R1
0x2D24	0x4808    LDR	R0, [PC, #32]
0x2D26	0x6001    STR	R1, [R0, #0]
0x2D28	0x4808    LDR	R0, [PC, #32]
0x2D2A	0x6001    STR	R1, [R0, #0]
;main.c, 67 :: 		}
L_end_interRTC:
0x2D2C	0xF8DDE000  LDR	LR, [SP, #0]
0x2D30	0xB005    ADD	SP, SP, #20
0x2D32	0xE8BD0FF0  POP	(R4, R5, R6, R7, R8, R9, R10, R11)
0x2D36	0x4770    BX	LR
0x2D38	0x0020420E  	PWR_CR+0
0x2D3C	0x01A84205  	RTC_ISR+0
0x2D40	0x82D84227  	EXTI_PR+0
0x2D44	0x01944205  	RTC_ISR+0
0x2D48	0x02B04242  	ODR12_GPIOE_ODR_bit+0
0x2D4C	0x02BC4242  	ODR15_GPIOE_ODR_bit+0
0x2D50	0x01372000  	_cnt+0
0x2D54	0x09362000  	_ok+0
0x2D58	0x09502000  	_press+0
0x2D5C	0x00004200  	TIM2_CR1+0
0x2D60	0x80004200  	TIM3_CR1+0
0x2D64	0x09542000  	_temp+0
0x2D68	0x09582000  	_hum+0
0x2D6C	0x095C2000  	_dist+0
; end of _interRTC
_getPressure:
;bme280.c, 171 :: 		double getPressure() {
0x23E4	0xB081    SUB	SP, SP, #4
0x23E6	0xF8CDE000  STR	LR, [SP, #0]
;bme280.c, 176 :: 		getTemperature();
0x23EA	0xF7FEFEAD  BL	_getTemperature+0
;bme280.c, 178 :: 		data_[0] = BME280_REG_PRESSUREDATA;
0x23EE	0x21F7    MOVS	R1, #247
0x23F0	0x4810    LDR	R0, [PC, #64]
0x23F2	0x7001    STRB	R1, [R0, #0]
;bme280.c, 179 :: 		BME_Read( 1, 3);
0x23F4	0x2103    MOVS	R1, #3
0x23F6	0x2001    MOVS	R0, #1
0x23F8	0xF7FEFD40  BL	_BME_Read+0
;bme280.c, 180 :: 		result = output[0];
0x23FC	0x480E    LDR	R0, [PC, #56]
; result start address is: 0 (R0)
0x23FE	0x7800    LDRB	R0, [R0, #0]
;bme280.c, 181 :: 		result <<= 8;
0x2400	0x0201    LSLS	R1, R0, #8
; result end address is: 0 (R0)
;bme280.c, 182 :: 		result |= output[1];
0x2402	0x480E    LDR	R0, [PC, #56]
0x2404	0x7800    LDRB	R0, [R0, #0]
0x2406	0xEA410000  ORR	R0, R1, R0, LSL #0
;bme280.c, 183 :: 		result <<= 8;
0x240A	0x0201    LSLS	R1, R0, #8
;bme280.c, 184 :: 		result |= output[2];
0x240C	0x480C    LDR	R0, [PC, #48]
0x240E	0x7800    LDRB	R0, [R0, #0]
0x2410	0xEA410000  ORR	R0, R1, R0, LSL #0
;bme280.c, 185 :: 		return BME280_compensate_P_int32(result)/100.0;
0x2414	0xF7FFF8DC  BL	_BME280_compensate_P_int32+0
0x2418	0xEE000A90  VMOV	S1, R0
0x241C	0xEEF80A60  VCVT.F32.U32	S1, S1
0x2420	0x4808    LDR	R0, [PC, #32]
0x2422	0xEE000A10  VMOV	S0, R0
0x2426	0xEE800A80  VDIV.F32	S0, S1, S0
;bme280.c, 186 :: 		}
L_end_getPressure:
0x242A	0xF8DDE000  LDR	LR, [SP, #0]
0x242E	0xB001    ADD	SP, SP, #4
0x2430	0x4770    BX	LR
0x2432	0xBF00    NOP
0x2434	0x01232000  	_data_+0
0x2438	0x012D2000  	_output+0
0x243C	0x012E2000  	_output+1
0x2440	0x012F2000  	_output+2
0x2444	0x000042C8  	#1120403456
; end of _getPressure
_getTemperature:
;bme280.c, 104 :: 		double getTemperature() {
0x1148	0xB081    SUB	SP, SP, #4
0x114A	0xF8CDE000  STR	LR, [SP, #0]
;bme280.c, 108 :: 		data_[0] = BME280_REG_TEMPDATA;
0x114E	0x21FA    MOVS	R1, #250
0x1150	0x4810    LDR	R0, [PC, #64]
0x1152	0x7001    STRB	R1, [R0, #0]
;bme280.c, 110 :: 		BME_Read( 1,3);
0x1154	0x2103    MOVS	R1, #3
0x1156	0x2001    MOVS	R0, #1
0x1158	0xF7FFFE90  BL	_BME_Read+0
;bme280.c, 112 :: 		result = output[0];
0x115C	0x480E    LDR	R0, [PC, #56]
; result start address is: 0 (R0)
0x115E	0x7800    LDRB	R0, [R0, #0]
;bme280.c, 113 :: 		result <<= 8;
0x1160	0x0201    LSLS	R1, R0, #8
; result end address is: 0 (R0)
;bme280.c, 114 :: 		result |= output[1];
0x1162	0x480E    LDR	R0, [PC, #56]
0x1164	0x7800    LDRB	R0, [R0, #0]
0x1166	0xEA410000  ORR	R0, R1, R0, LSL #0
;bme280.c, 115 :: 		result <<= 8;
0x116A	0x0201    LSLS	R1, R0, #8
;bme280.c, 116 :: 		result |= output[2];
0x116C	0x480C    LDR	R0, [PC, #48]
0x116E	0x7800    LDRB	R0, [R0, #0]
0x1170	0xEA410000  ORR	R0, R1, R0, LSL #0
;bme280.c, 117 :: 		return BME280_compensate_T_int32(result)/100.0;
0x1174	0xF7FFFE58  BL	_BME280_compensate_T_int32+0
0x1178	0xEE000A90  VMOV	S1, R0
0x117C	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x1180	0x4808    LDR	R0, [PC, #32]
0x1182	0xEE000A10  VMOV	S0, R0
0x1186	0xEE800A80  VDIV.F32	S0, S1, S0
;bme280.c, 118 :: 		}
L_end_getTemperature:
0x118A	0xF8DDE000  LDR	LR, [SP, #0]
0x118E	0xB001    ADD	SP, SP, #4
0x1190	0x4770    BX	LR
0x1192	0xBF00    NOP
0x1194	0x01232000  	_data_+0
0x1198	0x012D2000  	_output+0
0x119C	0x012E2000  	_output+1
0x11A0	0x012F2000  	_output+2
0x11A4	0x000042C8  	#1120403456
; end of _getTemperature
_BME_Read:
;bme280.c, 30 :: 		void BME_Read( uint32_t len, uint32_t readlen) {
; readlen start address is: 4 (R1)
; len start address is: 0 (R0)
0x0E7C	0xB082    SUB	SP, SP, #8
0x0E7E	0xF8CDE000  STR	LR, [SP, #0]
0x0E82	0x4605    MOV	R5, R0
0x0E84	0x468A    MOV	R10, R1
; readlen end address is: 4 (R1)
; len end address is: 0 (R0)
; len start address is: 20 (R5)
; readlen start address is: 40 (R10)
;bme280.c, 31 :: 		LD11=1; LD22=0;
0x0E86	0x2301    MOVS	R3, #1
0x0E88	0xB25B    SXTB	R3, R3
0x0E8A	0x4A14    LDR	R2, [PC, #80]
0x0E8C	0x6013    STR	R3, [R2, #0]
0x0E8E	0x2300    MOVS	R3, #0
0x0E90	0xB25B    SXTB	R3, R3
0x0E92	0x4A13    LDR	R2, [PC, #76]
0x0E94	0x9201    STR	R2, [SP, #4]
0x0E96	0x6013    STR	R3, [R2, #0]
;bme280.c, 32 :: 		I2C3_Start();
0x0E98	0xF7FFFCC2  BL	_I2C3_Start+0
;bme280.c, 33 :: 		LD11=1; LD22=1;
0x0E9C	0x2301    MOVS	R3, #1
0x0E9E	0xB25B    SXTB	R3, R3
0x0EA0	0x4A0E    LDR	R2, [PC, #56]
0x0EA2	0x6013    STR	R3, [R2, #0]
0x0EA4	0x9A01    LDR	R2, [SP, #4]
0x0EA6	0x6013    STR	R3, [R2, #0]
;bme280.c, 34 :: 		I2C3_Write(BME280_ADDRESS, data_, len, END_MODE_RESTART);
0x0EA8	0xF2400300  MOVW	R3, #0
0x0EAC	0x462A    MOV	R2, R5
; len end address is: 20 (R5)
0x0EAE	0x490D    LDR	R1, [PC, #52]
0x0EB0	0x2076    MOVS	R0, #118
0x0EB2	0xF7FFFCC1  BL	_I2C3_Write+0
;bme280.c, 35 :: 		LD11=0; LD22=1;
0x0EB6	0x2300    MOVS	R3, #0
0x0EB8	0xB25B    SXTB	R3, R3
0x0EBA	0x4A08    LDR	R2, [PC, #32]
0x0EBC	0x6013    STR	R3, [R2, #0]
0x0EBE	0x2301    MOVS	R3, #1
0x0EC0	0xB25B    SXTB	R3, R3
0x0EC2	0x9A01    LDR	R2, [SP, #4]
0x0EC4	0x6013    STR	R3, [R2, #0]
;bme280.c, 36 :: 		I2C3_Read(BME280_ADDRESS, output, readlen, END_MODE_STOP);
0x0EC6	0xF2400301  MOVW	R3, #1
0x0ECA	0x4652    MOV	R2, R10
; readlen end address is: 40 (R10)
0x0ECC	0x4906    LDR	R1, [PC, #24]
0x0ECE	0x2076    MOVS	R0, #118
0x0ED0	0xF7FFFC94  BL	_I2C3_Read+0
;bme280.c, 37 :: 		}
L_end_BME_Read:
0x0ED4	0xF8DDE000  LDR	LR, [SP, #0]
0x0ED8	0xB002    ADD	SP, SP, #8
0x0EDA	0x4770    BX	LR
0x0EDC	0x02B04242  	ODR12_GPIOE_ODR_bit+0
0x0EE0	0x02BC4242  	ODR15_GPIOE_ODR_bit+0
0x0EE4	0x01232000  	_data_+0
0x0EE8	0x012D2000  	_output+0
; end of _BME_Read
_BME280_compensate_T_int32:
;bme280.c, 92 :: 		int32_t BME280_compensate_T_int32(int32_t adc_T) {
; adc_T start address is: 0 (R0)
; adc_T end address is: 0 (R0)
; adc_T start address is: 0 (R0)
;bme280.c, 95 :: 		adc_T >>= 4;
0x0E28	0x1103    ASRS	R3, R0, #4
; adc_T end address is: 0 (R0)
;bme280.c, 96 :: 		var1 = ((((adc_T>>3) - ((int32_t)dig_T1<<1))) * ((int32_t)dig_T2)) >> 11;
0x0E2A	0x10DA    ASRS	R2, R3, #3
0x0E2C	0x4D0F    LDR	R5, [PC, #60]
0x0E2E	0x8829    LDRH	R1, [R5, #0]
0x0E30	0x0049    LSLS	R1, R1, #1
0x0E32	0x1A52    SUB	R2, R2, R1
0x0E34	0x490E    LDR	R1, [PC, #56]
0x0E36	0xF9B11000  LDRSH	R1, [R1, #0]
0x0E3A	0x4351    MULS	R1, R2, R1
0x0E3C	0x12CC    ASRS	R4, R1, #11
;bme280.c, 97 :: 		var2 = (((((adc_T>>4) - ((int32_t)dig_T1)) * ((adc_T>>4) - ((int32_t)dig_T1))) >> 12) *
0x0E3E	0x111B    ASRS	R3, R3, #4
0x0E40	0x4629    MOV	R1, R5
0x0E42	0x8809    LDRH	R1, [R1, #0]
0x0E44	0x1A5A    SUB	R2, R3, R1
0x0E46	0x4629    MOV	R1, R5
0x0E48	0x8809    LDRH	R1, [R1, #0]
0x0E4A	0x1A59    SUB	R1, R3, R1
0x0E4C	0x4351    MULS	R1, R2, R1
0x0E4E	0x130A    ASRS	R2, R1, #12
;bme280.c, 98 :: 		((int32_t)dig_T3)) >> 14;
0x0E50	0x4908    LDR	R1, [PC, #32]
0x0E52	0xF9B11000  LDRSH	R1, [R1, #0]
0x0E56	0x4351    MULS	R1, R2, R1
0x0E58	0x1389    ASRS	R1, R1, #14
;bme280.c, 99 :: 		t_fine = var1 + var2;
0x0E5A	0x1862    ADDS	R2, R4, R1
0x0E5C	0x4906    LDR	R1, [PC, #24]
0x0E5E	0x600A    STR	R2, [R1, #0]
;bme280.c, 100 :: 		T = (t_fine * 5 + 128) >> 8;
0x0E60	0x2105    MOVS	R1, #5
0x0E62	0x4351    MULS	R1, R2, R1
0x0E64	0x3180    ADDS	R1, #128
0x0E66	0x1209    ASRS	R1, R1, #8
;bme280.c, 101 :: 		return T;
0x0E68	0x4608    MOV	R0, R1
;bme280.c, 102 :: 		}
L_end_BME280_compensate_T_int32:
0x0E6A	0x4770    BX	LR
0x0E6C	0x01382000  	_dig_T1+0
0x0E70	0x013A2000  	_dig_T2+0
0x0E74	0x013C2000  	_dig_T3+0
0x0E78	0x094C2000  	_t_fine+0
; end of _BME280_compensate_T_int32
_BME280_compensate_P_int32:
;bme280.c, 143 :: 		uint32_t BME280_compensate_P_int32(int32_t adc_P)
; adc_P start address is: 0 (R0)
; adc_P end address is: 0 (R0)
; adc_P start address is: 0 (R0)
;bme280.c, 147 :: 		adc_P >>= 4;
0x15D0	0x1100    ASRS	R0, R0, #4
;bme280.c, 148 :: 		var1 = (((int32_t)t_fine)>>1) - (int32_t)64000;
0x15D2	0x492D    LDR	R1, [PC, #180]
0x15D4	0x6809    LDR	R1, [R1, #0]
0x15D6	0x1049    ASRS	R1, R1, #1
0x15D8	0xF5A1447A  SUB	R4, R1, #64000
;bme280.c, 149 :: 		var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((int32_t)dig_P6);
0x15DC	0x10A1    ASRS	R1, R4, #2
0x15DE	0xFB01F301  MUL	R3, R1, R1
0x15E2	0x12DA    ASRS	R2, R3, #11
0x15E4	0x4929    LDR	R1, [PC, #164]
0x15E6	0xF9B11000  LDRSH	R1, [R1, #0]
0x15EA	0x434A    MULS	R2, R1, R2
;bme280.c, 150 :: 		var2 = var2 + ((var1*((int32_t)dig_P5))<<1);
0x15EC	0x4928    LDR	R1, [PC, #160]
0x15EE	0xF9B11000  LDRSH	R1, [R1, #0]
0x15F2	0x4361    MULS	R1, R4, R1
0x15F4	0x0049    LSLS	R1, R1, #1
0x15F6	0x1851    ADDS	R1, R2, R1
;bme280.c, 151 :: 		var2 = (var2>>2)+(((int32_t)dig_P4)<<16);
0x15F8	0x108A    ASRS	R2, R1, #2
0x15FA	0x4926    LDR	R1, [PC, #152]
0x15FC	0xF9B11000  LDRSH	R1, [R1, #0]
0x1600	0x0409    LSLS	R1, R1, #16
0x1602	0x1851    ADDS	R1, R2, R1
; var2 start address is: 20 (R5)
0x1604	0x460D    MOV	R5, R1
;bme280.c, 152 :: 		var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((int32_t)dig_P2) * var1)>>1))>>18;
0x1606	0x135A    ASRS	R2, R3, #13
0x1608	0x4923    LDR	R1, [PC, #140]
0x160A	0xF9B11000  LDRSH	R1, [R1, #0]
0x160E	0x4351    MULS	R1, R2, R1
0x1610	0x10CA    ASRS	R2, R1, #3
0x1612	0x4922    LDR	R1, [PC, #136]
0x1614	0xF9B11000  LDRSH	R1, [R1, #0]
0x1618	0x4361    MULS	R1, R4, R1
0x161A	0x1049    ASRS	R1, R1, #1
0x161C	0x1851    ADDS	R1, R2, R1
0x161E	0x1489    ASRS	R1, R1, #18
;bme280.c, 153 :: 		var1 =((((32768+var1))*((int32_t)dig_P1))>>15);
0x1620	0xF5014200  ADD	R2, R1, #32768
0x1624	0x491E    LDR	R1, [PC, #120]
0x1626	0x8809    LDRH	R1, [R1, #0]
0x1628	0x4351    MULS	R1, R2, R1
0x162A	0x13C9    ASRS	R1, R1, #15
; var1 start address is: 12 (R3)
0x162C	0x460B    MOV	R3, R1
;bme280.c, 154 :: 		if (var1 == 0) {
0x162E	0xB909    CBNZ	R1, L_BME280_compensate_P_int324
; adc_P end address is: 0 (R0)
; var2 end address is: 20 (R5)
; var1 end address is: 12 (R3)
;bme280.c, 155 :: 		return 0; // avoid exception caused by division by zero
0x1630	0x2000    MOVS	R0, #0
0x1632	0xE027    B	L_end_BME280_compensate_P_int32
;bme280.c, 156 :: 		}
L_BME280_compensate_P_int324:
;bme280.c, 157 :: 		p = (((uint32_t)(((int32_t)1048576)-adc_P)-(var2>>12)))*3125;
; var1 start address is: 12 (R3)
; var2 start address is: 20 (R5)
; adc_P start address is: 0 (R0)
0x1634	0xF5C01280  RSB	R2, R0, #1048576
; adc_P end address is: 0 (R0)
0x1638	0x1329    ASRS	R1, R5, #12
; var2 end address is: 20 (R5)
0x163A	0x1A52    SUB	R2, R2, R1
0x163C	0xF6404135  MOVW	R1, #3125
0x1640	0x4351    MULS	R1, R2, R1
; p start address is: 0 (R0)
0x1642	0x4608    MOV	R0, R1
;bme280.c, 158 :: 		if (p < 0x80000000) {
0x1644	0xF1B14F00  CMP	R1, #-2147483648
0x1648	0xD203    BCS	L_BME280_compensate_P_int325
;bme280.c, 159 :: 		p = (p << 1) / ((uint32_t)var1);
0x164A	0x0040    LSLS	R0, R0, #1
; p end address is: 0 (R0)
0x164C	0xFBB0F0F3  UDIV	R0, R0, R3
; var1 end address is: 12 (R3)
; p start address is: 0 (R0)
;bme280.c, 160 :: 		}
0x1650	0xE002    B	L_BME280_compensate_P_int326
L_BME280_compensate_P_int325:
;bme280.c, 162 :: 		p = (p / (uint32_t)var1) * 2;
; var1 start address is: 12 (R3)
0x1652	0xFBB0F0F3  UDIV	R0, R0, R3
; var1 end address is: 12 (R3)
; p end address is: 0 (R0)
0x1656	0x0040    LSLS	R0, R0, #1
; p start address is: 0 (R0)
; p end address is: 0 (R0)
;bme280.c, 163 :: 		}
L_BME280_compensate_P_int326:
;bme280.c, 164 :: 		var1 = (((int32_t)dig_P9) * ((int32_t)(((p>>3) * (p>>3))>>13)))>>12;
; p start address is: 0 (R0)
0x1658	0x4912    LDR	R1, [PC, #72]
0x165A	0xF9B12000  LDRSH	R2, [R1, #0]
0x165E	0x08C1    LSRS	R1, R0, #3
0x1660	0x4349    MULS	R1, R1, R1
0x1662	0x0B49    LSRS	R1, R1, #13
0x1664	0x4351    MULS	R1, R2, R1
0x1666	0x130B    ASRS	R3, R1, #12
;bme280.c, 165 :: 		var2 = (((int32_t)(p>>2)) * ((int32_t)dig_P8))>>13;
0x1668	0x0882    LSRS	R2, R0, #2
0x166A	0x490F    LDR	R1, [PC, #60]
0x166C	0xF9B11000  LDRSH	R1, [R1, #0]
0x1670	0x4351    MULS	R1, R2, R1
0x1672	0x1349    ASRS	R1, R1, #13
;bme280.c, 166 :: 		p = (uint32_t)((int32_t)p + ((var1 + var2 + dig_P7) >> 4));
0x1674	0x185A    ADDS	R2, R3, R1
0x1676	0x490D    LDR	R1, [PC, #52]
0x1678	0xF9B11000  LDRSH	R1, [R1, #0]
0x167C	0x1851    ADDS	R1, R2, R1
0x167E	0x1109    ASRS	R1, R1, #4
0x1680	0x1841    ADDS	R1, R0, R1
; p end address is: 0 (R0)
;bme280.c, 167 :: 		return p;
0x1682	0x4608    MOV	R0, R1
;bme280.c, 168 :: 		}
L_end_BME280_compensate_P_int32:
0x1684	0x4770    BX	LR
0x1686	0xBF00    NOP
0x1688	0x094C2000  	_t_fine+0
0x168C	0x01482000  	_dig_P6+0
0x1690	0x01462000  	_dig_P5+0
0x1694	0x01442000  	_dig_P4+0
0x1698	0x01422000  	_dig_P3+0
0x169C	0x01402000  	_dig_P2+0
0x16A0	0x013E2000  	_dig_P1+0
0x16A4	0x014E2000  	_dig_P9+0
0x16A8	0x014C2000  	_dig_P8+0
0x16AC	0x014A2000  	_dig_P7+0
; end of _BME280_compensate_P_int32
_calcTemp:
;temperature.c, 101 :: 		float calcTemp()
0x2684	0xB083    SUB	SP, SP, #12
0x2686	0xF8CDE000  STR	LR, [SP, #0]
;temperature.c, 108 :: 		test = oneWireReset();
0x268A	0xF7FEFF59  BL	_oneWireReset+0
;temperature.c, 109 :: 		oneWireWrite(0xCC);          //SKIP ROM
0x268E	0x20CC    MOVS	R0, #204
0x2690	0xF7FEFF16  BL	_oneWireWrite+0
;temperature.c, 110 :: 		oneWireWrite(0x44);          //CALC_TEMP
0x2694	0x2044    MOVS	R0, #68
0x2696	0xF7FEFF13  BL	_oneWireWrite+0
;temperature.c, 111 :: 		my_Delay_ms(_WAIT_FOR_INIT_TIME);     // Vreme merenja
0x269A	0xF24020EE  MOVW	R0, #750
0x269E	0xF7FFFBFD  BL	_my_Delay_ms+0
;temperature.c, 112 :: 		test = oneWireReset();
0x26A2	0xF7FEFF4D  BL	_oneWireReset+0
;temperature.c, 113 :: 		oneWireWrite(0xCC);          //SKIP ROM
0x26A6	0x20CC    MOVS	R0, #204
0x26A8	0xF7FEFF0A  BL	_oneWireWrite+0
;temperature.c, 114 :: 		oneWireWrite(0xBE);          //READ SCRATCHPAD
0x26AC	0x20BE    MOVS	R0, #190
0x26AE	0xF7FEFF07  BL	_oneWireWrite+0
;temperature.c, 116 :: 		for(i=0; i<9; i++)
; i start address is: 8 (R2)
0x26B2	0x2200    MOVS	R2, #0
; i end address is: 8 (R2)
L_calcTemp16:
; i start address is: 8 (R2)
0x26B4	0x2A09    CMP	R2, #9
0x26B6	0xD20D    BCS	L_calcTemp17
;temperature.c, 118 :: 		scratchpad[i]=oneWireRead();
0x26B8	0x481D    LDR	R0, [PC, #116]
0x26BA	0x1880    ADDS	R0, R0, R2
0x26BC	0x9002    STR	R0, [SP, #8]
0x26BE	0xF88D2004  STRB	R2, [SP, #4]
0x26C2	0xF7FEFF1F  BL	_oneWireRead+0
0x26C6	0xF89D2004  LDRB	R2, [SP, #4]
0x26CA	0x9902    LDR	R1, [SP, #8]
0x26CC	0x7008    STRB	R0, [R1, #0]
;temperature.c, 116 :: 		for(i=0; i<9; i++)
0x26CE	0x1C52    ADDS	R2, R2, #1
0x26D0	0xB2D2    UXTB	R2, R2
;temperature.c, 119 :: 		}
; i end address is: 8 (R2)
0x26D2	0xE7EF    B	L_calcTemp16
L_calcTemp17:
;temperature.c, 126 :: 		temp=scratchpad[0];
0x26D4	0x4816    LDR	R0, [PC, #88]
; temp start address is: 4 (R1)
0x26D6	0x7801    LDRB	R1, [R0, #0]
;temperature.c, 127 :: 		temp=temp+(scratchpad[1]<<8);
0x26D8	0x4816    LDR	R0, [PC, #88]
0x26DA	0x7800    LDRB	R0, [R0, #0]
0x26DC	0x0200    LSLS	R0, R0, #8
0x26DE	0xB280    UXTH	R0, R0
0x26E0	0x1808    ADDS	R0, R1, R0
; temp end address is: 4 (R1)
; temp start address is: 24 (R6)
0x26E2	0x4606    MOV	R6, R0
;temperature.c, 128 :: 		res= crc8();
0x26E4	0xF7FEFFE4  BL	_crc8+0
;temperature.c, 129 :: 		if(res!=scratchpad[8])
0x26E8	0x4913    LDR	R1, [PC, #76]
0x26EA	0x7809    LDRB	R1, [R1, #0]
0x26EC	0x4288    CMP	R0, R1
0x26EE	0xD003    BEQ	L_calcTemp19
; temp end address is: 24 (R6)
;temperature.c, 130 :: 		return _ERROR_TEMP;
0x26F0	0x4812    LDR	R0, [PC, #72]
0x26F2	0xEE000A10  VMOV	S0, R0
0x26F6	0xE017    B	L_end_calcTemp
L_calcTemp19:
;temperature.c, 132 :: 		if(temp & 0xF000)
; temp start address is: 24 (R6)
0x26F8	0xF4064070  AND	R0, R6, #61440
0x26FC	0xB148    CBZ	R0, L__calcTemp22
;temperature.c, 134 :: 		temp=(~temp)&0x0000FFFF;
0x26FE	0x43F1    MVN	R1, R6
; temp end address is: 24 (R6)
0x2700	0xF64F70FF  MOVW	R0, #65535
0x2704	0xEA010000  AND	R0, R1, R0, LSL #0
;temperature.c, 135 :: 		temp=temp+1;
0x2708	0x1C40    ADDS	R0, R0, #1
;temperature.c, 136 :: 		temp=-temp;
0x270A	0x4240    RSBS	R0, R0, #0
; temp start address is: 4 (R1)
0x270C	0x4601    MOV	R1, R0
; temp end address is: 4 (R1)
0x270E	0x4608    MOV	R0, R1
;temperature.c, 137 :: 		}
0x2710	0xE000    B	L_calcTemp20
L__calcTemp22:
;temperature.c, 132 :: 		if(temp & 0xF000)
0x2712	0x4630    MOV	R0, R6
;temperature.c, 137 :: 		}
L_calcTemp20:
;temperature.c, 138 :: 		tempF=temp*1.0/16.0;
; temp start address is: 0 (R0)
0x2714	0xEE000A90  VMOV	S1, R0
0x2718	0xEEF80AE0  VCVT.F32.S32	S1, S1
; temp end address is: 0 (R0)
0x271C	0xEEB30A00  VMOV.F32	S0, #16
0x2720	0xEE800A80  VDIV.F32	S0, S1, S0
;temperature.c, 139 :: 		return tempF;
0x2724	0xEEB00A40  VMOV.F32	S0, S0
;temperature.c, 140 :: 		}
L_end_calcTemp:
0x2728	0xF8DDE000  LDR	LR, [SP, #0]
0x272C	0xB003    ADD	SP, SP, #12
0x272E	0x4770    BX	LR
0x2730	0x09602000  	_scratchpad+0
0x2734	0x09612000  	_scratchpad+1
0x2738	0x09682000  	_scratchpad+8
0x273C	0x0000C2C8  	#-1027080192
; end of _calcTemp
_oneWireReset:
;temperature.c, 29 :: 		uint8_t oneWireReset(){
0x1540	0xB082    SUB	SP, SP, #8
0x1542	0xF8CDE000  STR	LR, [SP, #0]
;temperature.c, 32 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x1546	0xF2400102  MOVW	R1, #2
0x154A	0x481E    LDR	R0, [PC, #120]
0x154C	0xF7FFFBD0  BL	_GPIO_Digital_Output+0
;temperature.c, 33 :: 		OWDO = 1;
0x1550	0x2001    MOVS	R0, #1
0x1552	0xB240    SXTB	R0, R0
0x1554	0x491C    LDR	R1, [PC, #112]
0x1556	0x6008    STR	R0, [R1, #0]
;temperature.c, 34 :: 		OWDO = 0;
0x1558	0x2000    MOVS	R0, #0
0x155A	0xB240    SXTB	R0, R0
0x155C	0x6008    STR	R0, [R1, #0]
;temperature.c, 35 :: 		my_Delay_us(_TEMP_RESET_START);
0x155E	0xF24010E0  MOVW	R0, #480
0x1562	0xF7FFFB91  BL	_my_Delay_us+0
;temperature.c, 36 :: 		OWDO = 1;
0x1566	0x2101    MOVS	R1, #1
0x1568	0xB249    SXTB	R1, R1
0x156A	0x4817    LDR	R0, [PC, #92]
0x156C	0x6001    STR	R1, [R0, #0]
;temperature.c, 37 :: 		GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_1);
0x156E	0xF2400102  MOVW	R1, #2
0x1572	0x4814    LDR	R0, [PC, #80]
0x1574	0xF7FFFCBA  BL	_GPIO_Digital_Input+0
;temperature.c, 39 :: 		my_Delay_us(_TEMP_RESET_1);
0x1578	0x2046    MOVS	R0, #70
0x157A	0xF7FFFB85  BL	_my_Delay_us+0
;temperature.c, 40 :: 		ret = OWDI;
0x157E	0x4913    LDR	R1, [PC, #76]
0x1580	0x6808    LDR	R0, [R1, #0]
0x1582	0xF88D0004  STRB	R0, [SP, #4]
;temperature.c, 41 :: 		if (ret == 0){
0x1586	0xF89D0004  LDRB	R0, [SP, #4]
0x158A	0xB940    CBNZ	R0, L_oneWireReset7
;temperature.c, 42 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x158C	0xF2400102  MOVW	R1, #2
0x1590	0x480C    LDR	R0, [PC, #48]
0x1592	0xF7FFFBAD  BL	_GPIO_Digital_Output+0
;temperature.c, 43 :: 		OWDO = 1;
0x1596	0x2101    MOVS	R1, #1
0x1598	0xB249    SXTB	R1, R1
0x159A	0x480B    LDR	R0, [PC, #44]
0x159C	0x6001    STR	R1, [R0, #0]
;temperature.c, 44 :: 		}
L_oneWireReset7:
;temperature.c, 45 :: 		my_Delay_us(_TEMP_RESET_2);
0x159E	0x20FA    MOVS	R0, #250
0x15A0	0xF7FFFB72  BL	_my_Delay_us+0
;temperature.c, 47 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x15A4	0xF2400102  MOVW	R1, #2
0x15A8	0x4806    LDR	R0, [PC, #24]
0x15AA	0xF7FFFBA1  BL	_GPIO_Digital_Output+0
;temperature.c, 48 :: 		OWDO = 1;
0x15AE	0x2101    MOVS	R1, #1
0x15B0	0xB249    SXTB	R1, R1
0x15B2	0x4805    LDR	R0, [PC, #20]
0x15B4	0x6001    STR	R1, [R0, #0]
;temperature.c, 49 :: 		return ret;
0x15B6	0xF89D0004  LDRB	R0, [SP, #4]
;temperature.c, 50 :: 		}
L_end_oneWireReset:
0x15BA	0xF8DDE000  LDR	LR, [SP, #0]
0x15BE	0xB002    ADD	SP, SP, #8
0x15C0	0x4770    BX	LR
0x15C2	0xBF00    NOP
0x15C4	0x04004002  	GPIOB_BASE+0
0x15C8	0x82844240  	ODR1_GPIOB_ODR_bit+0
0x15CC	0x82044240  	IDR1_GPIOB_IDR_bit+0
; end of _oneWireReset
_my_Delay_us:
;timer.c, 25 :: 		void my_Delay_us(uint32_t num)
; num start address is: 0 (R0)
; num end address is: 0 (R0)
; num start address is: 0 (R0)
;timer.c, 27 :: 		tick_us=0;
0x0C88	0x2200    MOVS	R2, #0
0x0C8A	0x4904    LDR	R1, [PC, #16]
0x0C8C	0x600A    STR	R2, [R1, #0]
; num end address is: 0 (R0)
;timer.c, 28 :: 		while(tick_us<num);
L_my_Delay_us1:
; num start address is: 0 (R0)
0x0C8E	0x4903    LDR	R1, [PC, #12]
0x0C90	0x6809    LDR	R1, [R1, #0]
0x0C92	0x4281    CMP	R1, R0
0x0C94	0xD200    BCS	L_my_Delay_us2
; num end address is: 0 (R0)
0x0C96	0xE7FA    B	L_my_Delay_us1
L_my_Delay_us2:
;timer.c, 29 :: 		}
L_end_my_Delay_us:
0x0C98	0x4770    BX	LR
0x0C9A	0xBF00    NOP
0x0C9C	0x01542000  	_tick_us+0
; end of _my_Delay_us
_oneWireWrite:
;temperature.c, 81 :: 		void oneWireWrite(unsigned short byte){
0x14C0	0xB083    SUB	SP, SP, #12
0x14C2	0xF8CDE000  STR	LR, [SP, #0]
0x14C6	0xF88D0008  STRB	R0, [SP, #8]
;temperature.c, 83 :: 		for (i = 0; i < 8; i++){
0x14CA	0x2100    MOVS	R1, #0
0x14CC	0xF88D1004  STRB	R1, [SP, #4]
L_oneWireWrite10:
0x14D0	0xF89D1004  LDRB	R1, [SP, #4]
0x14D4	0x2908    CMP	R1, #8
0x14D6	0xD211    BCS	L_oneWireWrite11
;temperature.c, 84 :: 		b = byte & 0x01;
0x14D8	0xF89D1008  LDRB	R1, [SP, #8]
0x14DC	0xF0010101  AND	R1, R1, #1
;temperature.c, 85 :: 		oneWireWriteBit(b);
0x14E0	0xB2C8    UXTB	R0, R1
0x14E2	0xF7FFFDC7  BL	_oneWireWriteBit+0
;temperature.c, 86 :: 		byte >>=1;
0x14E6	0xF89D1008  LDRB	R1, [SP, #8]
0x14EA	0x0849    LSRS	R1, R1, #1
0x14EC	0xF88D1008  STRB	R1, [SP, #8]
;temperature.c, 83 :: 		for (i = 0; i < 8; i++){
0x14F0	0xF89D1004  LDRB	R1, [SP, #4]
0x14F4	0x1C49    ADDS	R1, R1, #1
0x14F6	0xF88D1004  STRB	R1, [SP, #4]
;temperature.c, 87 :: 		}
0x14FA	0xE7E9    B	L_oneWireWrite10
L_oneWireWrite11:
;temperature.c, 88 :: 		}
L_end_oneWireWrite:
0x14FC	0xF8DDE000  LDR	LR, [SP, #0]
0x1500	0xB003    ADD	SP, SP, #12
0x1502	0x4770    BX	LR
; end of _oneWireWrite
_oneWireWriteBit:
;temperature.c, 52 :: 		void oneWireWriteBit(uint8_t b){
; b start address is: 0 (R0)
0x1074	0xB081    SUB	SP, SP, #4
0x1076	0xF8CDE000  STR	LR, [SP, #0]
0x107A	0xFA5FFB80  UXTB	R11, R0
; b end address is: 0 (R0)
; b start address is: 44 (R11)
;temperature.c, 53 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x107E	0xF2400102  MOVW	R1, #2
0x1082	0x4811    LDR	R0, [PC, #68]
0x1084	0xF7FFFE34  BL	_GPIO_Digital_Output+0
;temperature.c, 54 :: 		OWDO = 1;
0x1088	0x2101    MOVS	R1, #1
0x108A	0xB249    SXTB	R1, R1
0x108C	0x4A0F    LDR	R2, [PC, #60]
0x108E	0x6011    STR	R1, [R2, #0]
;temperature.c, 55 :: 		OWDO = 0;
0x1090	0x2100    MOVS	R1, #0
0x1092	0xB249    SXTB	R1, R1
0x1094	0x6011    STR	R1, [R2, #0]
;temperature.c, 56 :: 		if (b){
0x1096	0xF1BB0F00  CMP	R11, #0
0x109A	0xD00A    BEQ	L_oneWireWriteBit8
; b end address is: 44 (R11)
;temperature.c, 57 :: 		my_Delay_us(_TEMP_READ_ONE_1);
0x109C	0x200F    MOVS	R0, #15
0x109E	0xF7FFFDF3  BL	_my_Delay_us+0
;temperature.c, 58 :: 		OWDO = 1;
0x10A2	0x2201    MOVS	R2, #1
0x10A4	0xB252    SXTB	R2, R2
0x10A6	0x4909    LDR	R1, [PC, #36]
0x10A8	0x600A    STR	R2, [R1, #0]
;temperature.c, 59 :: 		my_Delay_us(_TEMP_READ_ONE_2);
0x10AA	0x2032    MOVS	R0, #50
0x10AC	0xF7FFFDEC  BL	_my_Delay_us+0
;temperature.c, 60 :: 		} else{
0x10B0	0xE006    B	L_oneWireWriteBit9
L_oneWireWriteBit8:
;temperature.c, 61 :: 		my_Delay_us(_TEMP_READ_ZERO);
0x10B2	0x2041    MOVS	R0, #65
0x10B4	0xF7FFFDE8  BL	_my_Delay_us+0
;temperature.c, 62 :: 		OWDO = 1;
0x10B8	0x2201    MOVS	R2, #1
0x10BA	0xB252    SXTB	R2, R2
0x10BC	0x4903    LDR	R1, [PC, #12]
0x10BE	0x600A    STR	R2, [R1, #0]
;temperature.c, 63 :: 		}
L_oneWireWriteBit9:
;temperature.c, 64 :: 		}
L_end_oneWireWriteBit:
0x10C0	0xF8DDE000  LDR	LR, [SP, #0]
0x10C4	0xB001    ADD	SP, SP, #4
0x10C6	0x4770    BX	LR
0x10C8	0x04004002  	GPIOB_BASE+0
0x10CC	0x82844240  	ODR1_GPIOB_ODR_bit+0
; end of _oneWireWriteBit
_oneWireRead:
;temperature.c, 90 :: 		unsigned short oneWireRead(){
0x1504	0xB082    SUB	SP, SP, #8
0x1506	0xF8CDE000  STR	LR, [SP, #0]
;temperature.c, 92 :: 		byte = 0;
; byte start address is: 8 (R2)
0x150A	0x2200    MOVS	R2, #0
;temperature.c, 93 :: 		for (i = 0; i < 8; i++){
; i start address is: 4 (R1)
0x150C	0x2100    MOVS	R1, #0
; byte end address is: 8 (R2)
; i end address is: 4 (R1)
L_oneWireRead13:
; i start address is: 4 (R1)
; byte start address is: 8 (R2)
0x150E	0x2908    CMP	R1, #8
0x1510	0xD211    BCS	L_oneWireRead14
;temperature.c, 94 :: 		b = oneWireReadBit();
0x1512	0xF88D2004  STRB	R2, [SP, #4]
0x1516	0xF88D1005  STRB	R1, [SP, #5]
0x151A	0xF7FFFCF3  BL	_oneWireReadBit+0
0x151E	0xF89D1005  LDRB	R1, [SP, #5]
0x1522	0xF89D2004  LDRB	R2, [SP, #4]
;temperature.c, 95 :: 		b <<= i;
0x1526	0xB2C0    UXTB	R0, R0
0x1528	0x4088    LSLS	R0, R1
;temperature.c, 96 :: 		byte |= b;
0x152A	0xB2C0    UXTB	R0, R0
0x152C	0x4302    ORRS	R2, R0
0x152E	0xB2D2    UXTB	R2, R2
;temperature.c, 93 :: 		for (i = 0; i < 8; i++){
0x1530	0x1C49    ADDS	R1, R1, #1
0x1532	0xB2C9    UXTB	R1, R1
;temperature.c, 97 :: 		}
; i end address is: 4 (R1)
0x1534	0xE7EB    B	L_oneWireRead13
L_oneWireRead14:
;temperature.c, 98 :: 		return byte;
0x1536	0xB2D0    UXTB	R0, R2
; byte end address is: 8 (R2)
;temperature.c, 99 :: 		}
L_end_oneWireRead:
0x1538	0xF8DDE000  LDR	LR, [SP, #0]
0x153C	0xB002    ADD	SP, SP, #8
0x153E	0x4770    BX	LR
; end of _oneWireRead
_oneWireReadBit:
;temperature.c, 66 :: 		int oneWireReadBit(){
0x0F04	0xB082    SUB	SP, SP, #8
0x0F06	0xF8CDE000  STR	LR, [SP, #0]
;temperature.c, 68 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x0F0A	0xF2400102  MOVW	R1, #2
0x0F0E	0x4814    LDR	R0, [PC, #80]
0x0F10	0xF7FFFEEE  BL	_GPIO_Digital_Output+0
;temperature.c, 69 :: 		OWDO = 1;
0x0F14	0x2001    MOVS	R0, #1
0x0F16	0xB240    SXTB	R0, R0
0x0F18	0x4912    LDR	R1, [PC, #72]
0x0F1A	0x6008    STR	R0, [R1, #0]
;temperature.c, 70 :: 		OWDO = 0;
0x0F1C	0x2000    MOVS	R0, #0
0x0F1E	0xB240    SXTB	R0, R0
0x0F20	0x6008    STR	R0, [R1, #0]
;temperature.c, 72 :: 		GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_1);
0x0F22	0xF2400102  MOVW	R1, #2
0x0F26	0x480E    LDR	R0, [PC, #56]
0x0F28	0xF7FFFFE0  BL	_GPIO_Digital_Input+0
;temperature.c, 73 :: 		my_Delay_us(_TEMP_READ_INIT);
0x0F2C	0x2005    MOVS	R0, #5
0x0F2E	0xF7FFFEAB  BL	_my_Delay_us+0
;temperature.c, 74 :: 		b = OWDI;
0x0F32	0x490D    LDR	R1, [PC, #52]
0x0F34	0x6808    LDR	R0, [R1, #0]
0x0F36	0xF88D0004  STRB	R0, [SP, #4]
;temperature.c, 75 :: 		my_Delay_us(_TEMP_READ_WAIT);
0x0F3A	0x2037    MOVS	R0, #55
0x0F3C	0xF7FFFEA4  BL	_my_Delay_us+0
;temperature.c, 76 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x0F40	0xF2400102  MOVW	R1, #2
0x0F44	0x4806    LDR	R0, [PC, #24]
0x0F46	0xF7FFFED3  BL	_GPIO_Digital_Output+0
;temperature.c, 77 :: 		OWDO = 1;
0x0F4A	0x2101    MOVS	R1, #1
0x0F4C	0xB249    SXTB	R1, R1
0x0F4E	0x4805    LDR	R0, [PC, #20]
0x0F50	0x6001    STR	R1, [R0, #0]
;temperature.c, 78 :: 		return b;
0x0F52	0xF89D0004  LDRB	R0, [SP, #4]
;temperature.c, 79 :: 		}
L_end_oneWireReadBit:
0x0F56	0xF8DDE000  LDR	LR, [SP, #0]
0x0F5A	0xB002    ADD	SP, SP, #8
0x0F5C	0x4770    BX	LR
0x0F5E	0xBF00    NOP
0x0F60	0x04004002  	GPIOB_BASE+0
0x0F64	0x82844240  	ODR1_GPIOB_ODR_bit+0
0x0F68	0x82044240  	IDR1_GPIOB_IDR_bit+0
; end of _oneWireReadBit
_crc8:
;temperature.c, 8 :: 		uint8_t crc8()
;temperature.c, 11 :: 		crc = 0;
; crc start address is: 20 (R5)
0x16B0	0x2500    MOVS	R5, #0
;temperature.c, 12 :: 		for(j=0;j<8; j++)
; j start address is: 12 (R3)
0x16B2	0x2300    MOVS	R3, #0
; crc end address is: 20 (R5)
; j end address is: 12 (R3)
L_crc80:
; j start address is: 12 (R3)
; crc start address is: 20 (R5)
0x16B4	0x2B08    CMP	R3, #8
0x16B6	0xD21A    BCS	L_crc81
;temperature.c, 14 :: 		cur=scratchpad[j];
0x16B8	0x480E    LDR	R0, [PC, #56]
0x16BA	0x18C0    ADDS	R0, R0, R3
0x16BC	0x7804    LDRB	R4, [R0, #0]
; cur start address is: 16 (R4)
;temperature.c, 15 :: 		for (i = 0; i < 8; i++)
; i start address is: 8 (R2)
0x16BE	0x2200    MOVS	R2, #0
; crc end address is: 20 (R5)
; cur end address is: 16 (R4)
; i end address is: 8 (R2)
; j end address is: 12 (R3)
L_crc83:
; i start address is: 8 (R2)
; cur start address is: 16 (R4)
; crc start address is: 20 (R5)
; j start address is: 12 (R3)
0x16C0	0x2A08    CMP	R2, #8
0x16C2	0xD211    BCS	L_crc84
;temperature.c, 17 :: 		mix=crc^cur;
0x16C4	0xEA850104  EOR	R1, R5, R4, LSL #0
0x16C8	0xB2C9    UXTB	R1, R1
;temperature.c, 18 :: 		crc=crc>>1;
0x16CA	0x086D    LSRS	R5, R5, #1
0x16CC	0xB2ED    UXTB	R5, R5
;temperature.c, 19 :: 		if (mix&0x01)
0x16CE	0xF0010001  AND	R0, R1, #1
0x16D2	0xB2C0    UXTB	R0, R0
0x16D4	0xB118    CBZ	R0, L__crc821
;temperature.c, 20 :: 		crc=crc^0x8C;
0x16D6	0xF085058C  EOR	R5, R5, #140
0x16DA	0xB2ED    UXTB	R5, R5
; crc end address is: 20 (R5)
0x16DC	0xE7FF    B	L_crc86
L__crc821:
;temperature.c, 19 :: 		if (mix&0x01)
;temperature.c, 20 :: 		crc=crc^0x8C;
L_crc86:
;temperature.c, 21 :: 		cur=cur>>1;
; crc start address is: 20 (R5)
0x16DE	0x0864    LSRS	R4, R4, #1
0x16E0	0xB2E4    UXTB	R4, R4
;temperature.c, 15 :: 		for (i = 0; i < 8; i++)
0x16E2	0x1C52    ADDS	R2, R2, #1
0x16E4	0xB2D2    UXTB	R2, R2
;temperature.c, 22 :: 		}
; cur end address is: 16 (R4)
; i end address is: 8 (R2)
0x16E6	0xE7EB    B	L_crc83
L_crc84:
;temperature.c, 12 :: 		for(j=0;j<8; j++)
0x16E8	0x1C5B    ADDS	R3, R3, #1
0x16EA	0xB2DB    UXTB	R3, R3
;temperature.c, 23 :: 		}
; j end address is: 12 (R3)
0x16EC	0xE7E2    B	L_crc80
L_crc81:
;temperature.c, 25 :: 		return crc;
0x16EE	0xB2E8    UXTB	R0, R5
; crc end address is: 20 (R5)
;temperature.c, 26 :: 		}
L_end_crc8:
0x16F0	0x4770    BX	LR
0x16F2	0xBF00    NOP
0x16F4	0x09602000  	_scratchpad+0
; end of _crc8
_calcHumTemp:
;humidity.c, 7 :: 		float calcHumTemp(uint8_t humB){
; i start address is: 16 (R4)
0x2448	0xB087    SUB	SP, SP, #28
0x244A	0xF8CDE000  STR	LR, [SP, #0]
;humidity.c, 8 :: 		uint32_t result = 1, i = 0;
;humidity.c, 7 :: 		float calcHumTemp(uint8_t humB){
;humidity.c, 8 :: 		uint32_t result = 1, i = 0;
;humidity.c, 7 :: 		float calcHumTemp(uint8_t humB){
0x244E	0xF88D0018  STRB	R0, [SP, #24]
; i end address is: 16 (R4)
;humidity.c, 8 :: 		uint32_t result = 1, i = 0;
; i start address is: 16 (R4)
0x2452	0xF04F0400  MOV	R4, #0
;humidity.c, 10 :: 		uint32_t checksum=0;
0x2456	0xF10D0B10  ADD	R11, SP, #16
0x245A	0xF10B0A08  ADD	R10, R11, #8
0x245E	0xF8DFC1A0  LDR	R12, [PC, #416]
0x2462	0xF7FFFD27  BL	___CC2DW+0
;humidity.c, 11 :: 		float res=0;
; i end address is: 16 (R4)
0x2466	0x4620    MOV	R0, R4
;humidity.c, 12 :: 		for(i;i<5;i++)
L_calcHumTemp0:
; i start address is: 0 (R0)
0x2468	0x2805    CMP	R0, #5
0x246A	0xD207    BCS	L_calcHumTemp1
;humidity.c, 13 :: 		array[i] = 0;
0x246C	0xA902    ADD	R1, SP, #8
0x246E	0x180A    ADDS	R2, R1, R0
0x2470	0x2100    MOVS	R1, #0
0x2472	0x7011    STRB	R1, [R2, #0]
;humidity.c, 12 :: 		for(i;i<5;i++)
0x2474	0x1C41    ADDS	R1, R0, #1
; i end address is: 0 (R0)
; i start address is: 16 (R4)
0x2476	0x460C    MOV	R4, R1
;humidity.c, 13 :: 		array[i] = 0;
0x2478	0x4620    MOV	R0, R4
; i end address is: 16 (R4)
0x247A	0xE7F5    B	L_calcHumTemp0
L_calcHumTemp1:
;humidity.c, 14 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_1);
0x247C	0xF2400102  MOVW	R1, #2
0x2480	0x4860    LDR	R0, [PC, #384]
0x2482	0xF7FEFC35  BL	_GPIO_Digital_Output+0
;humidity.c, 15 :: 		HUM_OUT = 1;
0x2486	0x2101    MOVS	R1, #1
0x2488	0xB249    SXTB	R1, R1
0x248A	0x4A5F    LDR	R2, [PC, #380]
0x248C	0x6011    STR	R1, [R2, #0]
;humidity.c, 16 :: 		HUM_OUT = 0;
0x248E	0x2100    MOVS	R1, #0
0x2490	0xB249    SXTB	R1, R1
0x2492	0x6011    STR	R1, [R2, #0]
;humidity.c, 17 :: 		my_Delay_ms(_INIT_TIME_SET);
0x2494	0x2012    MOVS	R0, #18
0x2496	0xF7FFFD01  BL	_my_Delay_ms+0
;humidity.c, 18 :: 		GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_1);
0x249A	0xF2400102  MOVW	R1, #2
0x249E	0x4859    LDR	R0, [PC, #356]
0x24A0	0xF7FEFD24  BL	_GPIO_Digital_Input+0
;humidity.c, 19 :: 		my_Delay_us(_INIT_TIME_WAIT_1);
0x24A4	0x2046    MOVS	R0, #70
0x24A6	0xF7FEFBEF  BL	_my_Delay_us+0
;humidity.c, 21 :: 		if(res==1)
0x24AA	0xEDDD0A05  VLDR.32	S1, [SP, #20]
0x24AE	0xEEB70A00  VMOV.F32	S0, #1
0x24B2	0xEEF40AC0  VCMPE.F32	S1, S0
0x24B6	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x24BA	0xD103    BNE	L_calcHumTemp3
;humidity.c, 22 :: 		return _ERROR_HUM;
0x24BC	0x4953    LDR	R1, [PC, #332]
0x24BE	0xEE001A10  VMOV	S0, R1
0x24C2	0xE098    B	L_end_calcHumTemp
L_calcHumTemp3:
;humidity.c, 23 :: 		my_Delay_us(_INIT_TIME_WAIT_2);
0x24C4	0x2082    MOVS	R0, #130
0x24C6	0xF7FEFBDF  BL	_my_Delay_us+0
;humidity.c, 25 :: 		i=0;
; i start address is: 24 (R6)
0x24CA	0x2600    MOVS	R6, #0
; i end address is: 24 (R6)
;humidity.c, 26 :: 		for(i;i<40;i++){
L_calcHumTemp4:
; i start address is: 24 (R6)
0x24CC	0x2E28    CMP	R6, #40
0x24CE	0xD223    BCS	L_calcHumTemp5
; i end address is: 24 (R6)
0x24D0	0x4630    MOV	R0, R6
;humidity.c, 27 :: 		while(HUM_IN == 0);
L_calcHumTemp7:
; i start address is: 0 (R0)
0x24D2	0x4A4F    LDR	R2, [PC, #316]
0x24D4	0x6811    LDR	R1, [R2, #0]
0x24D6	0xB901    CBNZ	R1, L_calcHumTemp8
0x24D8	0xE7FB    B	L_calcHumTemp7
L_calcHumTemp8:
;humidity.c, 28 :: 		my_Delay_us(_TIME_HUM_READ);
0x24DA	0x9001    STR	R0, [SP, #4]
0x24DC	0x2032    MOVS	R0, #50
0x24DE	0xF7FEFBD3  BL	_my_Delay_us+0
0x24E2	0x9801    LDR	R0, [SP, #4]
;humidity.c, 29 :: 		array[i/8] |= HUM_IN<<(7-i%8);
0x24E4	0x08C2    LSRS	R2, R0, #3
0x24E6	0xA902    ADD	R1, SP, #8
0x24E8	0x188C    ADDS	R4, R1, R2
0x24EA	0xF0000107  AND	R1, R0, #7
0x24EE	0xF1C10207  RSB	R2, R1, #7
0x24F2	0x4B47    LDR	R3, [PC, #284]
0x24F4	0x6819    LDR	R1, [R3, #0]
0x24F6	0xFA01F202  LSL	R2, R1, R2
0x24FA	0xB292    UXTH	R2, R2
0x24FC	0x7821    LDRB	R1, [R4, #0]
0x24FE	0x4311    ORRS	R1, R2
0x2500	0x7021    STRB	R1, [R4, #0]
;humidity.c, 30 :: 		if(HUM_IN == 1)
0x2502	0x461A    MOV	R2, R3
0x2504	0x6811    LDR	R1, [R2, #0]
0x2506	0xB121    CBZ	R1, L_calcHumTemp9
;humidity.c, 31 :: 		my_Delay_us(_TIME_HUM_READ);
0x2508	0x9001    STR	R0, [SP, #4]
0x250A	0x2032    MOVS	R0, #50
0x250C	0xF7FEFBBC  BL	_my_Delay_us+0
0x2510	0x9801    LDR	R0, [SP, #4]
L_calcHumTemp9:
;humidity.c, 26 :: 		for(i;i<40;i++){
0x2512	0x1C41    ADDS	R1, R0, #1
; i end address is: 0 (R0)
; i start address is: 24 (R6)
0x2514	0x460E    MOV	R6, R1
;humidity.c, 32 :: 		}
; i end address is: 24 (R6)
0x2516	0xE7D9    B	L_calcHumTemp4
L_calcHumTemp5:
;humidity.c, 33 :: 		for(i=0; i<4; i++)
; i start address is: 8 (R2)
0x2518	0x2200    MOVS	R2, #0
; i end address is: 8 (R2)
0x251A	0x4610    MOV	R0, R2
L_calcHumTemp10:
; i start address is: 0 (R0)
0x251C	0x2804    CMP	R0, #4
0x251E	0xD209    BCS	L_calcHumTemp11
;humidity.c, 34 :: 		checksum+=array[i];
0x2520	0xA902    ADD	R1, SP, #8
0x2522	0x1809    ADDS	R1, R1, R0
0x2524	0x780A    LDRB	R2, [R1, #0]
0x2526	0x9904    LDR	R1, [SP, #16]
0x2528	0x1889    ADDS	R1, R1, R2
0x252A	0x9104    STR	R1, [SP, #16]
;humidity.c, 33 :: 		for(i=0; i<4; i++)
0x252C	0x1C41    ADDS	R1, R0, #1
; i end address is: 0 (R0)
; i start address is: 8 (R2)
0x252E	0x460A    MOV	R2, R1
;humidity.c, 34 :: 		checksum+=array[i];
0x2530	0x4610    MOV	R0, R2
; i end address is: 8 (R2)
0x2532	0xE7F3    B	L_calcHumTemp10
L_calcHumTemp11:
;humidity.c, 35 :: 		if((checksum&0x00FF)!= array[4])
0x2534	0x9904    LDR	R1, [SP, #16]
0x2536	0xF00102FF  AND	R2, R1, #255
0x253A	0xA902    ADD	R1, SP, #8
0x253C	0x1D09    ADDS	R1, R1, #4
0x253E	0x7809    LDRB	R1, [R1, #0]
0x2540	0x428A    CMP	R2, R1
0x2542	0xD003    BEQ	L_calcHumTemp13
;humidity.c, 36 :: 		return _ERROR_HUM;
0x2544	0x4931    LDR	R1, [PC, #196]
0x2546	0xEE001A10  VMOV	S0, R1
0x254A	0xE054    B	L_end_calcHumTemp
L_calcHumTemp13:
;humidity.c, 37 :: 		if(humB==0)
0x254C	0xF89D1018  LDRB	R1, [SP, #24]
0x2550	0xBB41    CBNZ	R1, L_calcHumTemp14
;humidity.c, 39 :: 		res=array[2]&0x7F;
0x2552	0xAB02    ADD	R3, SP, #8
0x2554	0x1C99    ADDS	R1, R3, #2
0x2556	0x780A    LDRB	R2, [R1, #0]
0x2558	0xF002017F  AND	R1, R2, #127
0x255C	0xB2C9    UXTB	R1, R1
0x255E	0xEE001A90  VMOV	S1, R1
0x2562	0xEEF80A60  VCVT.F32.U32	S1, S1
;humidity.c, 40 :: 		res=res*25.6+array[3]*0.1;
0x2566	0x492B    LDR	R1, [PC, #172]
0x2568	0xEE001A10  VMOV	S0, R1
0x256C	0xEE201A80  VMUL.F32	S2, S1, S0
0x2570	0x1CD9    ADDS	R1, R3, #3
0x2572	0x7809    LDRB	R1, [R1, #0]
0x2574	0xEE001A90  VMOV	S1, R1
0x2578	0xEEF80A60  VCVT.F32.U32	S1, S1
0x257C	0x4926    LDR	R1, [PC, #152]
0x257E	0xEE001A10  VMOV	S0, R1
0x2582	0xEE200A80  VMUL.F32	S0, S1, S0
0x2586	0xEE310A00  VADD.F32	S0, S2, S0
0x258A	0xED8D0A05  VSTR.32	S0, [SP, #20]
;humidity.c, 41 :: 		if(array[2]&0x80)
0x258E	0xF0020180  AND	R1, R2, #128
0x2592	0xB2C9    UXTB	R1, R1
0x2594	0xB129    CBZ	R1, L_calcHumTemp15
;humidity.c, 42 :: 		res=-res;
0x2596	0xED9D0A05  VLDR.32	S0, [SP, #20]
0x259A	0xEEB10A40  VNEG.F32	S0, S0
0x259E	0xED8D0A05  VSTR.32	S0, [SP, #20]
L_calcHumTemp15:
;humidity.c, 43 :: 		}
0x25A2	0xE026    B	L_calcHumTemp16
L_calcHumTemp14:
;humidity.c, 46 :: 		res=array[0]&0x7F;
0x25A4	0xAB02    ADD	R3, SP, #8
0x25A6	0x781A    LDRB	R2, [R3, #0]
0x25A8	0xF002017F  AND	R1, R2, #127
0x25AC	0xB2C9    UXTB	R1, R1
0x25AE	0xEE001A90  VMOV	S1, R1
0x25B2	0xEEF80A60  VCVT.F32.U32	S1, S1
;humidity.c, 47 :: 		res=res*25.6+array[1]*0.1;
0x25B6	0x4917    LDR	R1, [PC, #92]
0x25B8	0xEE001A10  VMOV	S0, R1
0x25BC	0xEE201A80  VMUL.F32	S2, S1, S0
0x25C0	0x1C59    ADDS	R1, R3, #1
0x25C2	0x7809    LDRB	R1, [R1, #0]
0x25C4	0xEE001A90  VMOV	S1, R1
0x25C8	0xEEF80A60  VCVT.F32.U32	S1, S1
0x25CC	0x4912    LDR	R1, [PC, #72]
0x25CE	0xEE001A10  VMOV	S0, R1
0x25D2	0xEE200A80  VMUL.F32	S0, S1, S0
0x25D6	0xEE310A00  VADD.F32	S0, S2, S0
0x25DA	0xED8D0A05  VSTR.32	S0, [SP, #20]
;humidity.c, 48 :: 		if(array[0]&0x80)
0x25DE	0xF0020180  AND	R1, R2, #128
0x25E2	0xB2C9    UXTB	R1, R1
0x25E4	0xB129    CBZ	R1, L_calcHumTemp17
;humidity.c, 49 :: 		res=-res;
0x25E6	0xED9D0A05  VLDR.32	S0, [SP, #20]
0x25EA	0xEEB10A40  VNEG.F32	S0, S0
0x25EE	0xED8D0A05  VSTR.32	S0, [SP, #20]
L_calcHumTemp17:
;humidity.c, 50 :: 		}
L_calcHumTemp16:
;humidity.c, 52 :: 		return res;
0x25F2	0xED9D0A05  VLDR.32	S0, [SP, #20]
;humidity.c, 53 :: 		}
L_end_calcHumTemp:
0x25F6	0xF8DDE000  LDR	LR, [SP, #0]
0x25FA	0xB007    ADD	SP, SP, #28
0x25FC	0x4770    BX	LR
0x25FE	0xBF00    NOP
0x2600	0x2FF00000  	?ICScalcHumTemp_checksum_L0+0
0x2604	0x08004002  	GPIOC_BASE+0
0x2608	0x02844241  	ODR1_GPIOC_ODR_bit+0
0x260C	0x0000C2C8  	#-1027080192
0x2610	0x02044241  	IDR1_GPIOC_IDR_bit+0
0x2614	0xCCCD41CC  	#1103940813
0x2618	0xCCCD3DCC  	#1036831949
; end of _calcHumTemp
_getDistance:
;ultrasonic.c, 12 :: 		double getDistance() {
0x261C	0xB082    SUB	SP, SP, #8
0x261E	0xF8CDE000  STR	LR, [SP, #0]
;ultrasonic.c, 17 :: 		TRIG = 0;
0x2622	0x2000    MOVS	R0, #0
0x2624	0xB240    SXTB	R0, R0
0x2626	0x4914    LDR	R1, [PC, #80]
0x2628	0x6008    STR	R0, [R1, #0]
;ultrasonic.c, 18 :: 		TRIG = 1;
0x262A	0x2001    MOVS	R0, #1
0x262C	0xB240    SXTB	R0, R0
0x262E	0x6008    STR	R0, [R1, #0]
;ultrasonic.c, 19 :: 		my_Delay_us(_ULTRASONIC_START_TIME);
0x2630	0x200A    MOVS	R0, #10
0x2632	0xF7FEFB29  BL	_my_Delay_us+0
;ultrasonic.c, 20 :: 		TRIG = 0;
0x2636	0x2100    MOVS	R1, #0
0x2638	0xB249    SXTB	R1, R1
0x263A	0x480F    LDR	R0, [PC, #60]
0x263C	0x6001    STR	R1, [R0, #0]
;ultrasonic.c, 23 :: 		cnt = 0;
; cnt start address is: 8 (R2)
0x263E	0x2200    MOVS	R2, #0
; cnt end address is: 8 (R2)
;ultrasonic.c, 24 :: 		while (ECHO == 0);
L_getDistance0:
; cnt start address is: 8 (R2)
0x2640	0x490E    LDR	R1, [PC, #56]
0x2642	0x6808    LDR	R0, [R1, #0]
0x2644	0xB900    CBNZ	R0, L_getDistance1
0x2646	0xE7FB    B	L_getDistance0
L_getDistance1:
;ultrasonic.c, 25 :: 		while (ECHO == 1) {
L_getDistance2:
; cnt end address is: 8 (R2)
; cnt start address is: 8 (R2)
0x2648	0x490C    LDR	R1, [PC, #48]
0x264A	0x6808    LDR	R0, [R1, #0]
0x264C	0xB138    CBZ	R0, L_getDistance3
;ultrasonic.c, 26 :: 		cnt++;
0x264E	0x1C50    ADDS	R0, R2, #1
; cnt end address is: 8 (R2)
; cnt start address is: 0 (R0)
;ultrasonic.c, 27 :: 		my_Delay_us(_ULTRASONIC_COUNT_TIME);
0x2650	0x9001    STR	R0, [SP, #4]
0x2652	0x2001    MOVS	R0, #1
0x2654	0xF7FEFB18  BL	_my_Delay_us+0
0x2658	0x9801    LDR	R0, [SP, #4]
;ultrasonic.c, 28 :: 		}
0x265A	0x4602    MOV	R2, R0
; cnt end address is: 0 (R0)
0x265C	0xE7F4    B	L_getDistance2
L_getDistance3:
;ultrasonic.c, 31 :: 		distance = cnt / 58.0;
; cnt start address is: 8 (R2)
0x265E	0xEE002A90  VMOV	S1, R2
0x2662	0xEEF80AE0  VCVT.F32.S32	S1, S1
; cnt end address is: 8 (R2)
0x2666	0x4806    LDR	R0, [PC, #24]
0x2668	0xEE000A10  VMOV	S0, R0
0x266C	0xEE800A80  VDIV.F32	S0, S1, S0
;ultrasonic.c, 32 :: 		return distance;
;ultrasonic.c, 33 :: 		}
L_end_getDistance:
0x2670	0xF8DDE000  LDR	LR, [SP, #0]
0x2674	0xB002    ADD	SP, SP, #8
0x2676	0x4770    BX	LR
0x2678	0x82B84240  	ODR14_GPIOB_ODR_bit+0
0x267C	0x823C4240  	IDR15_GPIOB_IDR_bit+0
0x2680	0x00004268  	#1114112000
; end of _getDistance
_showTempLCD:
;lcd.c, 12 :: 		void showTempLCD(float temp, float hum)
0x2264	0xB08B    SUB	SP, SP, #44
0x2266	0xF8CDE000  STR	LR, [SP, #0]
0x226A	0xED8D0A09  VSTR.32	S0, [SP, #36]
0x226E	0xEDCD0A0A  VSTR.32	S1, [SP, #40]
;lcd.c, 16 :: 		Lcd_Init();
0x2272	0xF7FEFFFF  BL	_Lcd_Init+0
;lcd.c, 17 :: 		My_Delay_ms(DELAY_LCD);
0x2276	0x2064    MOVS	R0, #100
0x2278	0xF7FFFE10  BL	_my_Delay_ms+0
;lcd.c, 18 :: 		Lcd_Cmd(_LCD_CLEAR);
0x227C	0x2001    MOVS	R0, #1
0x227E	0xF7FEFF93  BL	_Lcd_Cmd+0
;lcd.c, 19 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x2282	0x200C    MOVS	R0, #12
0x2284	0xF7FEFF90  BL	_Lcd_Cmd+0
;lcd.c, 21 :: 		FloatToStr(temp,txtTemp);
0x2288	0xAA01    ADD	R2, SP, #4
0x228A	0x4610    MOV	R0, R2
0x228C	0xED9D0A09  VLDR.32	S0, [SP, #36]
0x2290	0xF7FFFC42  BL	_FloatToStr+0
;lcd.c, 22 :: 		FloatToStr(hum,txtHum);
0x2294	0xF10D0213  ADD	R2, SP, #19
0x2298	0x4610    MOV	R0, R2
0x229A	0xED9D0A0A  VLDR.32	S0, [SP, #40]
0x229E	0xF7FFFC3B  BL	_FloatToStr+0
;lcd.c, 23 :: 		Lcd_Out(1,1,"Temp:");
0x22A2	0x4A0C    LDR	R2, [PC, #48]
0x22A4	0x2101    MOVS	R1, #1
0x22A6	0x2001    MOVS	R0, #1
0x22A8	0xF7FFFBFC  BL	_Lcd_Out+0
;lcd.c, 24 :: 		Lcd_Out(2,1,"Hum:");
0x22AC	0x4A0A    LDR	R2, [PC, #40]
0x22AE	0x2101    MOVS	R1, #1
0x22B0	0x2002    MOVS	R0, #2
0x22B2	0xF7FFFBF7  BL	_Lcd_Out+0
;lcd.c, 25 :: 		Lcd_Out(1,7,txtTemp);
0x22B6	0xAA01    ADD	R2, SP, #4
0x22B8	0x2107    MOVS	R1, #7
0x22BA	0x2001    MOVS	R0, #1
0x22BC	0xF7FFFBF2  BL	_Lcd_Out+0
;lcd.c, 26 :: 		Lcd_Out(2,7,txtHum);
0x22C0	0xF10D0213  ADD	R2, SP, #19
0x22C4	0x2107    MOVS	R1, #7
0x22C6	0x2002    MOVS	R0, #2
0x22C8	0xF7FFFBEC  BL	_Lcd_Out+0
;lcd.c, 27 :: 		}
L_end_showTempLCD:
0x22CC	0xF8DDE000  LDR	LR, [SP, #0]
0x22D0	0xB00B    ADD	SP, SP, #44
0x22D2	0x4770    BX	LR
0x22D4	0x00102000  	?lstr1_lcd+0
0x22D8	0x00162000  	?lstr2_lcd+0
; end of _showTempLCD
_Lcd_Init:
;__Lib_Lcd.c, 77 :: 		
0x1274	0xB086    SUB	SP, SP, #24
0x1276	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Lcd.c, 80 :: 		
0x127A	0xF6400014  MOVW	R0, #lo_addr(LCD_EN+0)
;__Lib_Lcd.c, 81 :: 		
0x127E	0xF2C40002  MOVT	R0, #hi_addr(LCD_EN+0)
;__Lib_Lcd.c, 82 :: 		
0x1282	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 83 :: 		
0x1286	0xEA4F3141  LSL	R1, R1, BitPos(LCD_EN+0)
;__Lib_Lcd.c, 85 :: 		
0x128A	0x4A85    LDR	R2, [PC, #532]
0x128C	0xB289    UXTH	R1, R1
0x128E	0xF7FFFBCF  BL	_GPIO_Config+0
;__Lib_Lcd.c, 88 :: 		
0x1292	0xF6404014  MOVW	R0, #lo_addr(LCD_RS+0)
;__Lib_Lcd.c, 89 :: 		
0x1296	0xF2C40002  MOVT	R0, #hi_addr(LCD_RS+0)
;__Lib_Lcd.c, 90 :: 		
0x129A	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 91 :: 		
0x129E	0xEA4F11C1  LSL	R1, R1, BitPos(LCD_RS+0)
;__Lib_Lcd.c, 93 :: 		
0x12A2	0x4A7F    LDR	R2, [PC, #508]
0x12A4	0xB289    UXTH	R1, R1
0x12A6	0xF7FFFBC3  BL	_GPIO_Config+0
;__Lib_Lcd.c, 96 :: 		
0x12AA	0xF2400014  MOVW	R0, #lo_addr(LCD_D4+0)
;__Lib_Lcd.c, 97 :: 		
0x12AE	0xF2C40002  MOVT	R0, #hi_addr(LCD_D4+0)
;__Lib_Lcd.c, 98 :: 		
0x12B2	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 99 :: 		
0x12B6	0xEA4F0141  LSL	R1, R1, BitPos(LCD_D4+0)
;__Lib_Lcd.c, 101 :: 		
0x12BA	0x4A79    LDR	R2, [PC, #484]
0x12BC	0xB289    UXTH	R1, R1
0x12BE	0xF7FFFBB7  BL	_GPIO_Config+0
;__Lib_Lcd.c, 104 :: 		
0x12C2	0xF2400014  MOVW	R0, #lo_addr(LCD_D5+0)
;__Lib_Lcd.c, 105 :: 		
0x12C6	0xF2C40002  MOVT	R0, #hi_addr(LCD_D5+0)
;__Lib_Lcd.c, 106 :: 		
0x12CA	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 107 :: 		
0x12CE	0xEA4F0101  LSL	R1, R1, BitPos(LCD_D5+0)
;__Lib_Lcd.c, 109 :: 		
0x12D2	0x4A73    LDR	R2, [PC, #460]
0x12D4	0xB289    UXTH	R1, R1
0x12D6	0xF7FFFBAB  BL	_GPIO_Config+0
;__Lib_Lcd.c, 112 :: 		
0x12DA	0xF2404014  MOVW	R0, #lo_addr(LCD_D6+0)
;__Lib_Lcd.c, 113 :: 		
0x12DE	0xF2C40002  MOVT	R0, #hi_addr(LCD_D6+0)
;__Lib_Lcd.c, 114 :: 		
0x12E2	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 115 :: 		
0x12E6	0xEA4F2181  LSL	R1, R1, BitPos(LCD_D6+0)
;__Lib_Lcd.c, 117 :: 		
0x12EA	0x4A6D    LDR	R2, [PC, #436]
0x12EC	0xB289    UXTH	R1, R1
0x12EE	0xF7FFFB9F  BL	_GPIO_Config+0
;__Lib_Lcd.c, 120 :: 		
0x12F2	0xF2404014  MOVW	R0, #lo_addr(LCD_D7+0)
;__Lib_Lcd.c, 121 :: 		
0x12F6	0xF2C40002  MOVT	R0, #hi_addr(LCD_D7+0)
;__Lib_Lcd.c, 122 :: 		
0x12FA	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 123 :: 		
0x12FE	0xEA4F21C1  LSL	R1, R1, BitPos(LCD_D7+0)
;__Lib_Lcd.c, 125 :: 		
0x1302	0x4A67    LDR	R2, [PC, #412]
0x1304	0xB289    UXTH	R1, R1
0x1306	0xF7FFFB93  BL	_GPIO_Config+0
;__Lib_Lcd.c, 127 :: 		
0x130A	0x2100    MOVS	R1, #0
0x130C	0xB249    SXTB	R1, R1
0x130E	0x4865    LDR	R0, [PC, #404]
0x1310	0x9005    STR	R0, [SP, #20]
0x1312	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 128 :: 		
0x1314	0x4864    LDR	R0, [PC, #400]
0x1316	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 129 :: 		
0x1318	0x4864    LDR	R0, [PC, #400]
0x131A	0x9004    STR	R0, [SP, #16]
0x131C	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 130 :: 		
0x131E	0x4864    LDR	R0, [PC, #400]
0x1320	0x9003    STR	R0, [SP, #12]
0x1322	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 131 :: 		
0x1324	0x4863    LDR	R0, [PC, #396]
0x1326	0x9002    STR	R0, [SP, #8]
0x1328	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 132 :: 		
0x132A	0x4863    LDR	R0, [PC, #396]
0x132C	0x9001    STR	R0, [SP, #4]
0x132E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 134 :: 		
0x1330	0xF7FFFE1E  BL	_Delay_5500us+0
;__Lib_Lcd.c, 135 :: 		
0x1334	0xF7FFFE1C  BL	_Delay_5500us+0
;__Lib_Lcd.c, 136 :: 		
0x1338	0xF7FFFE1A  BL	_Delay_5500us+0
;__Lib_Lcd.c, 139 :: 		
0x133C	0x2101    MOVS	R1, #1
0x133E	0xB249    SXTB	R1, R1
0x1340	0x485C    LDR	R0, [PC, #368]
0x1342	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 140 :: 		
0x1344	0x9801    LDR	R0, [SP, #4]
0x1346	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 141 :: 		
0x1348	0x9805    LDR	R0, [SP, #20]
0x134A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 142 :: 		
0x134C	0xF7FFFD60  BL	_Delay_1us+0
;__Lib_Lcd.c, 143 :: 		
0x1350	0x2100    MOVS	R1, #0
0x1352	0xB249    SXTB	R1, R1
0x1354	0x4853    LDR	R0, [PC, #332]
0x1356	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 144 :: 		
0x1358	0xF7FFFE0A  BL	_Delay_5500us+0
;__Lib_Lcd.c, 146 :: 		
0x135C	0x2101    MOVS	R1, #1
0x135E	0xB249    SXTB	R1, R1
0x1360	0x4850    LDR	R0, [PC, #320]
0x1362	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 147 :: 		
0x1364	0xF7FFFD54  BL	_Delay_1us+0
;__Lib_Lcd.c, 148 :: 		
0x1368	0x2100    MOVS	R1, #0
0x136A	0xB249    SXTB	R1, R1
0x136C	0x484D    LDR	R0, [PC, #308]
0x136E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 149 :: 		
0x1370	0xF7FFFDFE  BL	_Delay_5500us+0
;__Lib_Lcd.c, 151 :: 		
0x1374	0x2101    MOVS	R1, #1
0x1376	0xB249    SXTB	R1, R1
0x1378	0x484A    LDR	R0, [PC, #296]
0x137A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 152 :: 		
0x137C	0xF7FFFD48  BL	_Delay_1us+0
;__Lib_Lcd.c, 153 :: 		
0x1380	0x2100    MOVS	R1, #0
0x1382	0xB249    SXTB	R1, R1
0x1384	0x4847    LDR	R0, [PC, #284]
0x1386	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 154 :: 		
0x1388	0xF7FFFDF2  BL	_Delay_5500us+0
;__Lib_Lcd.c, 157 :: 		
0x138C	0x2100    MOVS	R1, #0
0x138E	0xB249    SXTB	R1, R1
0x1390	0x4849    LDR	R0, [PC, #292]
0x1392	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 158 :: 		
0x1394	0x2101    MOVS	R1, #1
0x1396	0xB249    SXTB	R1, R1
0x1398	0x9805    LDR	R0, [SP, #20]
0x139A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 159 :: 		
0x139C	0xF7FFFD38  BL	_Delay_1us+0
;__Lib_Lcd.c, 160 :: 		
0x13A0	0x2100    MOVS	R1, #0
0x13A2	0xB249    SXTB	R1, R1
0x13A4	0x483F    LDR	R0, [PC, #252]
0x13A6	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 161 :: 		
0x13A8	0xF7FFFDE2  BL	_Delay_5500us+0
;__Lib_Lcd.c, 164 :: 		
0x13AC	0x2101    MOVS	R1, #1
0x13AE	0xB249    SXTB	R1, R1
0x13B0	0x483C    LDR	R0, [PC, #240]
0x13B2	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 165 :: 		
0x13B4	0xF7FFFD2C  BL	_Delay_1us+0
;__Lib_Lcd.c, 166 :: 		
0x13B8	0x2100    MOVS	R1, #0
0x13BA	0xB249    SXTB	R1, R1
0x13BC	0x4839    LDR	R0, [PC, #228]
0x13BE	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 168 :: 		
0x13C0	0x9802    LDR	R0, [SP, #8]
0x13C2	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 169 :: 		
0x13C4	0x2101    MOVS	R1, #1
0x13C6	0xB249    SXTB	R1, R1
0x13C8	0x9804    LDR	R0, [SP, #16]
0x13CA	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 170 :: 		
0x13CC	0x9805    LDR	R0, [SP, #20]
0x13CE	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 171 :: 		
0x13D0	0xF7FFFD1E  BL	_Delay_1us+0
;__Lib_Lcd.c, 172 :: 		
0x13D4	0x2100    MOVS	R1, #0
0x13D6	0xB249    SXTB	R1, R1
0x13D8	0x4832    LDR	R0, [PC, #200]
0x13DA	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 173 :: 		
0x13DC	0xF7FFFDC8  BL	_Delay_5500us+0
;__Lib_Lcd.c, 176 :: 		
0x13E0	0x2100    MOVS	R1, #0
0x13E2	0xB249    SXTB	R1, R1
0x13E4	0x4831    LDR	R0, [PC, #196]
0x13E6	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 177 :: 		
0x13E8	0x2101    MOVS	R1, #1
0x13EA	0xB249    SXTB	R1, R1
0x13EC	0x9801    LDR	R0, [SP, #4]
0x13EE	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 178 :: 		
0x13F0	0x9805    LDR	R0, [SP, #20]
0x13F2	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 179 :: 		
0x13F4	0xF7FFFD0C  BL	_Delay_1us+0
;__Lib_Lcd.c, 180 :: 		
0x13F8	0x2100    MOVS	R1, #0
0x13FA	0xB249    SXTB	R1, R1
0x13FC	0x4829    LDR	R0, [PC, #164]
0x13FE	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 182 :: 		
0x1400	0x9801    LDR	R0, [SP, #4]
0x1402	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 183 :: 		
0x1404	0x2101    MOVS	R1, #1
0x1406	0xB249    SXTB	R1, R1
0x1408	0x9805    LDR	R0, [SP, #20]
0x140A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 184 :: 		
0x140C	0xF7FFFD00  BL	_Delay_1us+0
;__Lib_Lcd.c, 185 :: 		
0x1410	0x2100    MOVS	R1, #0
0x1412	0xB249    SXTB	R1, R1
0x1414	0x4823    LDR	R0, [PC, #140]
0x1416	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 186 :: 		
0x1418	0xF7FFFDAA  BL	_Delay_5500us+0
;__Lib_Lcd.c, 189 :: 		
0x141C	0x2101    MOVS	R1, #1
0x141E	0xB249    SXTB	R1, R1
0x1420	0x4820    LDR	R0, [PC, #128]
0x1422	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 190 :: 		
0x1424	0xF7FFFCF4  BL	_Delay_1us+0
;__Lib_Lcd.c, 191 :: 		
0x1428	0x2100    MOVS	R1, #0
0x142A	0xB249    SXTB	R1, R1
0x142C	0x481D    LDR	R0, [PC, #116]
0x142E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 193 :: 		
0x1430	0x2101    MOVS	R1, #1
0x1432	0xB249    SXTB	R1, R1
0x1434	0x9801    LDR	R0, [SP, #4]
0x1436	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 194 :: 		
0x1438	0x9805    LDR	R0, [SP, #20]
0x143A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 195 :: 		
0x143C	0xF7FFFCE8  BL	_Delay_1us+0
;__Lib_Lcd.c, 196 :: 		
0x1440	0x2100    MOVS	R1, #0
0x1442	0xB249    SXTB	R1, R1
0x1444	0x4817    LDR	R0, [PC, #92]
0x1446	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 197 :: 		
0x1448	0xF7FFFD92  BL	_Delay_5500us+0
;__Lib_Lcd.c, 200 :: 		
0x144C	0x2100    MOVS	R1, #0
0x144E	0xB249    SXTB	R1, R1
0x1450	0x4819    LDR	R0, [PC, #100]
0x1452	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 201 :: 		
0x1454	0x2101    MOVS	R1, #1
0x1456	0xB249    SXTB	R1, R1
0x1458	0x9805    LDR	R0, [SP, #20]
0x145A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 202 :: 		
0x145C	0xF7FFFCD8  BL	_Delay_1us+0
;__Lib_Lcd.c, 203 :: 		
0x1460	0x2100    MOVS	R1, #0
0x1462	0xB249    SXTB	R1, R1
0x1464	0x480F    LDR	R0, [PC, #60]
0x1466	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 205 :: 		
0x1468	0x2101    MOVS	R1, #1
0x146A	0xB249    SXTB	R1, R1
0x146C	0x9804    LDR	R0, [SP, #16]
0x146E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 206 :: 		
0x1470	0x9803    LDR	R0, [SP, #12]
0x1472	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 207 :: 		
0x1474	0x9802    LDR	R0, [SP, #8]
0x1476	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 208 :: 		
0x1478	0x9801    LDR	R0, [SP, #4]
0x147A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 209 :: 		
0x147C	0x9805    LDR	R0, [SP, #20]
0x147E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 210 :: 		
0x1480	0xF7FFFCC6  BL	_Delay_1us+0
;__Lib_Lcd.c, 211 :: 		
0x1484	0x2100    MOVS	R1, #0
0x1486	0xB249    SXTB	R1, R1
0x1488	0x4806    LDR	R0, [PC, #24]
0x148A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 213 :: 		
0x148C	0xF7FFFD70  BL	_Delay_5500us+0
;__Lib_Lcd.c, 215 :: 		
0x1490	0x2101    MOVS	R1, #1
0x1492	0xB249    SXTB	R1, R1
0x1494	0x4809    LDR	R0, [PC, #36]
0x1496	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 216 :: 		
L_end_Lcd_Init:
0x1498	0xF8DDE000  LDR	LR, [SP, #0]
0x149C	0xB006    ADD	SP, SP, #24
0x149E	0x4770    BX	LR
0x14A0	0x00140008  	#524308
0x14A4	0x02B44241  	LCD_EN+0
0x14A8	0x829C4241  	LCD_RS+0
0x14AC	0x82AC4240  	LCD_D7+0
0x14B0	0x82A84240  	LCD_D6+0
0x14B4	0x02804240  	LCD_D5+0
0x14B8	0x02844240  	LCD_D4+0
0x14BC	0x26E02201  	__Lib_Lcd_cmd_status+0
; end of _Lcd_Init
_Delay_5500us:
;__Lib_Delays.c, 37 :: 		void Delay_5500us() {
;__Lib_Delays.c, 38 :: 		Delay_us(5500);
0x0F70	0xF645375E  MOVW	R7, #23390
0x0F74	0xF2C00703  MOVT	R7, #3
L_Delay_5500us12:
0x0F78	0x1E7F    SUBS	R7, R7, #1
0x0F7A	0xD1FD    BNE	L_Delay_5500us12
0x0F7C	0xBF00    NOP
0x0F7E	0xBF00    NOP
0x0F80	0xBF00    NOP
0x0F82	0xBF00    NOP
0x0F84	0xBF00    NOP
;__Lib_Delays.c, 39 :: 		}
L_end_Delay_5500us:
0x0F86	0x4770    BX	LR
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x0E10	0xF2400726  MOVW	R7, #38
0x0E14	0xF2C00700  MOVT	R7, #0
L_Delay_1us0:
0x0E18	0x1E7F    SUBS	R7, R7, #1
0x0E1A	0xD1FD    BNE	L_Delay_1us0
0x0E1C	0xBF00    NOP
0x0E1E	0xBF00    NOP
0x0E20	0xBF00    NOP
0x0E22	0xBF00    NOP
0x0E24	0xBF00    NOP
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x0E26	0x4770    BX	LR
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c, 11 :: 		
; out_char start address is: 0 (R0)
0x11A8	0xB088    SUB	SP, SP, #32
0x11AA	0xF8CDE000  STR	LR, [SP, #0]
; out_char end address is: 0 (R0)
; out_char start address is: 0 (R0)
;__Lib_Lcd.c, 13 :: 		
0x11AE	0xF3C012C0  UBFX	R2, R0, #7, #1
0x11B2	0x4929    LDR	R1, [PC, #164]
0x11B4	0x9107    STR	R1, [SP, #28]
0x11B6	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 14 :: 		
0x11B8	0xF3C01280  UBFX	R2, R0, #6, #1
0x11BC	0x4927    LDR	R1, [PC, #156]
0x11BE	0x9106    STR	R1, [SP, #24]
0x11C0	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 15 :: 		
0x11C2	0xF3C01240  UBFX	R2, R0, #5, #1
0x11C6	0x4926    LDR	R1, [PC, #152]
0x11C8	0x9105    STR	R1, [SP, #20]
0x11CA	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 16 :: 		
0x11CC	0xF3C01200  UBFX	R2, R0, #4, #1
0x11D0	0x4924    LDR	R1, [PC, #144]
0x11D2	0x9104    STR	R1, [SP, #16]
0x11D4	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 18 :: 		
0x11D6	0x4A24    LDR	R2, [PC, #144]
0x11D8	0x9203    STR	R2, [SP, #12]
0x11DA	0x6811    LDR	R1, [R2, #0]
0x11DC	0xF0810201  EOR	R2, R1, #1
0x11E0	0x4922    LDR	R1, [PC, #136]
0x11E2	0x9102    STR	R1, [SP, #8]
0x11E4	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 21 :: 		
0x11E6	0x2201    MOVS	R2, #1
0x11E8	0xB252    SXTB	R2, R2
0x11EA	0x4921    LDR	R1, [PC, #132]
0x11EC	0x9101    STR	R1, [SP, #4]
0x11EE	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 22 :: 		
0x11F0	0xF7FFFE0E  BL	_Delay_1us+0
;__Lib_Lcd.c, 23 :: 		
0x11F4	0x2200    MOVS	R2, #0
0x11F6	0xB252    SXTB	R2, R2
0x11F8	0x491D    LDR	R1, [PC, #116]
0x11FA	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 26 :: 		
0x11FC	0xF3C002C0  UBFX	R2, R0, #3, #1
0x1200	0x9907    LDR	R1, [SP, #28]
0x1202	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 27 :: 		
0x1204	0xF3C00280  UBFX	R2, R0, #2, #1
0x1208	0x9906    LDR	R1, [SP, #24]
0x120A	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 28 :: 		
0x120C	0xF3C00240  UBFX	R2, R0, #1, #1
0x1210	0x9905    LDR	R1, [SP, #20]
0x1212	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 29 :: 		
0x1214	0xF3C00200  UBFX	R2, R0, #0, #1
; out_char end address is: 0 (R0)
0x1218	0x9904    LDR	R1, [SP, #16]
0x121A	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 31 :: 		
0x121C	0x9903    LDR	R1, [SP, #12]
0x121E	0x460A    MOV	R2, R1
0x1220	0x6811    LDR	R1, [R2, #0]
0x1222	0xF0810201  EOR	R2, R1, #1
0x1226	0x9902    LDR	R1, [SP, #8]
0x1228	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 33 :: 		
0x122A	0x2201    MOVS	R2, #1
0x122C	0xB252    SXTB	R2, R2
0x122E	0x9901    LDR	R1, [SP, #4]
0x1230	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 34 :: 		
0x1232	0xF7FFFDED  BL	_Delay_1us+0
;__Lib_Lcd.c, 35 :: 		
0x1236	0x2200    MOVS	R2, #0
0x1238	0xB252    SXTB	R2, R2
0x123A	0x490D    LDR	R1, [PC, #52]
0x123C	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 37 :: 		
0x123E	0x9903    LDR	R1, [SP, #12]
0x1240	0x460A    MOV	R2, R1
0x1242	0x6811    LDR	R1, [R2, #0]
0x1244	0xB111    CBZ	R1, L_Lcd_Cmd0
;__Lib_Lcd.c, 38 :: 		
0x1246	0xF7FFFE93  BL	_Delay_5500us+0
0x124A	0xE001    B	L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c, 40 :: 		
0x124C	0xF7FFFDD4  BL	_Delay_50us+0
L_Lcd_Cmd1:
;__Lib_Lcd.c, 41 :: 		
L_end_Lcd_Cmd:
0x1250	0xF8DDE000  LDR	LR, [SP, #0]
0x1254	0xB008    ADD	SP, SP, #32
0x1256	0x4770    BX	LR
0x1258	0x82AC4240  	LCD_D7+0
0x125C	0x82A84240  	LCD_D6+0
0x1260	0x02804240  	LCD_D5+0
0x1264	0x02844240  	LCD_D4+0
0x1268	0x26E02201  	__Lib_Lcd_cmd_status+0
0x126C	0x829C4241  	LCD_RS+0
0x1270	0x02B44241  	LCD_EN+0
; end of _Lcd_Cmd
_Delay_50us:
;__Lib_Delays.c, 25 :: 		void Delay_50us() {
;__Lib_Delays.c, 26 :: 		Delay_us(50);
0x0DF8	0xF24077CE  MOVW	R7, #1998
0x0DFC	0xF2C00700  MOVT	R7, #0
L_Delay_50us6:
0x0E00	0x1E7F    SUBS	R7, R7, #1
0x0E02	0xD1FD    BNE	L_Delay_50us6
0x0E04	0xBF00    NOP
0x0E06	0xBF00    NOP
0x0E08	0xBF00    NOP
0x0E0A	0xBF00    NOP
0x0E0C	0xBF00    NOP
;__Lib_Delays.c, 27 :: 		}
L_end_Delay_50us:
0x0E0E	0x4770    BX	LR
; end of _Delay_50us
_FloatToStr:
;__Lib_Conversions.c, 631 :: 		
; str start address is: 0 (R0)
0x1B18	0xB083    SUB	SP, SP, #12
0x1B1A	0xF8CDE000  STR	LR, [SP, #0]
; fnum start address is: 0 (S0)
0x1B1E	0x4604    MOV	R4, R0
; str end address is: 0 (R0)
; fnum end address is: 0 (S0)
; fnum start address is: 0 (S0)
; str start address is: 16 (R4)
;__Lib_Conversions.c, 633 :: 		
; bpoint start address is: 0 (R0)
0x1B20	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 635 :: 		
; dexpon start address is: 12 (R3)
0x1B22	0x2300    MOVS	R3, #0
0x1B24	0xB25B    SXTB	R3, R3
;__Lib_Conversions.c, 638 :: 		
0x1B26	0xED8D0A02  VSTR.32	S0, [SP, #8]
; fnum end address is: 0 (S0)
;__Lib_Conversions.c, 639 :: 		
0x1B2A	0x9902    LDR	R1, [SP, #8]
0x1B2C	0xF1B13FFF  CMP	R1, #-1
0x1B30	0xD105    BNE	L_FloatToStr117
; bpoint end address is: 0 (R0)
; dexpon end address is: 12 (R3)
;__Lib_Conversions.c, 640 :: 		
0x1B32	0x4970    LDR	R1, [PC, #448]
0x1B34	0x4620    MOV	R0, R4
; str end address is: 16 (R4)
0x1B36	0xF7FFF949  BL	_strcpy+0
;__Lib_Conversions.c, 641 :: 		
0x1B3A	0x2003    MOVS	R0, #3
0x1B3C	0xE0D5    B	L_end_FloatToStr
;__Lib_Conversions.c, 642 :: 		
L_FloatToStr117:
;__Lib_Conversions.c, 643 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 16 (R4)
; i start address is: 20 (R5)
; bpoint start address is: 0 (R0)
0x1B3E	0x2501    MOVS	R5, #1
;__Lib_Conversions.c, 644 :: 		
0x1B40	0xA902    ADD	R1, SP, #8
0x1B42	0x1CC9    ADDS	R1, R1, #3
0x1B44	0x7809    LDRB	R1, [R1, #0]
0x1B46	0xF0010180  AND	R1, R1, #128
0x1B4A	0xB2C9    UXTB	R1, R1
0x1B4C	0xB169    CBZ	R1, L__FloatToStr179
;__Lib_Conversions.c, 645 :: 		
0x1B4E	0xA902    ADD	R1, SP, #8
0x1B50	0x1CCA    ADDS	R2, R1, #3
0x1B52	0x7811    LDRB	R1, [R2, #0]
0x1B54	0xF0810180  EOR	R1, R1, #128
0x1B58	0x7011    STRB	R1, [R2, #0]
;__Lib_Conversions.c, 646 :: 		
0x1B5A	0x1C69    ADDS	R1, R5, #1
; i end address is: 20 (R5)
; i start address is: 8 (R2)
0x1B5C	0xB2CA    UXTB	R2, R1
;__Lib_Conversions.c, 647 :: 		
0x1B5E	0x212D    MOVS	R1, #45
0x1B60	0x7021    STRB	R1, [R4, #0]
0x1B62	0x1C64    ADDS	R4, R4, #1
; i end address is: 8 (R2)
; str end address is: 16 (R4)
0x1B64	0xB2D7    UXTB	R7, R2
0x1B66	0x4626    MOV	R6, R4
;__Lib_Conversions.c, 648 :: 		
0x1B68	0xE001    B	L_FloatToStr118
L__FloatToStr179:
;__Lib_Conversions.c, 644 :: 		
0x1B6A	0x4626    MOV	R6, R4
0x1B6C	0xB2EF    UXTB	R7, R5
;__Lib_Conversions.c, 648 :: 		
L_FloatToStr118:
;__Lib_Conversions.c, 649 :: 		
; str start address is: 24 (R6)
; i start address is: 28 (R7)
0x1B6E	0x9902    LDR	R1, [SP, #8]
0x1B70	0xB929    CBNZ	R1, L_FloatToStr119
; bpoint end address is: 0 (R0)
; i end address is: 28 (R7)
; dexpon end address is: 12 (R3)
;__Lib_Conversions.c, 650 :: 		
0x1B72	0x4961    LDR	R1, [PC, #388]
0x1B74	0x4630    MOV	R0, R6
; str end address is: 24 (R6)
0x1B76	0xF7FFF929  BL	_strcpy+0
;__Lib_Conversions.c, 651 :: 		
0x1B7A	0x2000    MOVS	R0, #0
0x1B7C	0xE0B5    B	L_end_FloatToStr
;__Lib_Conversions.c, 652 :: 		
L_FloatToStr119:
;__Lib_Conversions.c, 653 :: 		
; dexpon start address is: 12 (R3)
; i start address is: 28 (R7)
; str start address is: 24 (R6)
; bpoint start address is: 0 (R0)
0x1B7E	0x9902    LDR	R1, [SP, #8]
0x1B80	0xF1B14FFF  CMP	R1, #2139095040
0x1B84	0xD105    BNE	L_FloatToStr120
; bpoint end address is: 0 (R0)
; dexpon end address is: 12 (R3)
;__Lib_Conversions.c, 654 :: 		
0x1B86	0x495D    LDR	R1, [PC, #372]
0x1B88	0x4630    MOV	R0, R6
; str end address is: 24 (R6)
0x1B8A	0xF7FFF91F  BL	_strcpy+0
;__Lib_Conversions.c, 655 :: 		
0x1B8E	0xB2F8    UXTB	R0, R7
; i end address is: 28 (R7)
0x1B90	0xE0AB    B	L_end_FloatToStr
;__Lib_Conversions.c, 656 :: 		
L_FloatToStr120:
;__Lib_Conversions.c, 664 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 24 (R6)
; bpoint start address is: 0 (R0)
0x1B92	0xF88D3004  STRB	R3, [SP, #4]
; str end address is: 24 (R6)
; dexpon end address is: 12 (R3)
0x1B96	0xB2C3    UXTB	R3, R0
0x1B98	0x4634    MOV	R4, R6
0x1B9A	0xF99D0004  LDRSB	R0, [SP, #4]
L_FloatToStr121:
; bpoint end address is: 0 (R0)
; str start address is: 16 (R4)
; dexpon start address is: 0 (R0)
; bpoint start address is: 12 (R3)
0x1B9E	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x1BA2	0xEEB70A00  VMOV.F32	S0, #1
0x1BA6	0xEEF40AC0  VCMPE.F32	S1, S0
0x1BAA	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1BAE	0xDA0A    BGE	L_FloatToStr122
;__Lib_Conversions.c, 665 :: 		
0x1BB0	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x1BB4	0xEEB20A04  VMOV.F32	S0, #10
0x1BB8	0xEE200A80  VMUL.F32	S0, S1, S0
0x1BBC	0xED8D0A02  VSTR.32	S0, [SP, #8]
;__Lib_Conversions.c, 666 :: 		
0x1BC0	0x1E40    SUBS	R0, R0, #1
0x1BC2	0xB240    SXTB	R0, R0
;__Lib_Conversions.c, 667 :: 		
0x1BC4	0xE7EB    B	L_FloatToStr121
L_FloatToStr122:
;__Lib_Conversions.c, 672 :: 		
; bpoint end address is: 12 (R3)
; dexpon end address is: 0 (R0)
L_FloatToStr123:
; str end address is: 16 (R4)
; bpoint start address is: 12 (R3)
; dexpon start address is: 0 (R0)
; str start address is: 16 (R4)
0x1BC6	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x1BCA	0xEEB20A04  VMOV.F32	S0, #10
0x1BCE	0xEEF40AC0  VCMPE.F32	S1, S0
0x1BD2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1BD6	0xDB0B    BLT	L_FloatToStr124
;__Lib_Conversions.c, 673 :: 		
0x1BD8	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x1BDC	0x4948    LDR	R1, [PC, #288]
0x1BDE	0xEE001A10  VMOV	S0, R1
0x1BE2	0xEE200A80  VMUL.F32	S0, S1, S0
0x1BE6	0xED8D0A02  VSTR.32	S0, [SP, #8]
;__Lib_Conversions.c, 674 :: 		
0x1BEA	0x1C40    ADDS	R0, R0, #1
0x1BEC	0xB240    SXTB	R0, R0
;__Lib_Conversions.c, 675 :: 		
0x1BEE	0xE7EA    B	L_FloatToStr123
L_FloatToStr124:
;__Lib_Conversions.c, 680 :: 		
0x1BF0	0x9902    LDR	R1, [SP, #8]
0x1BF2	0x0049    LSLS	R1, R1, #1
0x1BF4	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 689 :: 		
0x1BF6	0xA902    ADD	R1, SP, #8
0x1BF8	0x1CC9    ADDS	R1, R1, #3
0x1BFA	0x7809    LDRB	R1, [R1, #0]
0x1BFC	0x397F    SUBS	R1, #127
; d start address is: 20 (R5)
0x1BFE	0xB2CD    UXTB	R5, R1
;__Lib_Conversions.c, 692 :: 		
0x1C00	0xA902    ADD	R1, SP, #8
0x1C02	0x1CCA    ADDS	R2, R1, #3
0x1C04	0x2101    MOVS	R1, #1
0x1C06	0x7011    STRB	R1, [R2, #0]
;__Lib_Conversions.c, 693 :: 		
0x1C08	0x9902    LDR	R1, [SP, #8]
0x1C0A	0x40A9    LSLS	R1, R5
; d end address is: 20 (R5)
0x1C0C	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 694 :: 		
0x1C0E	0xA902    ADD	R1, SP, #8
0x1C10	0x1CC9    ADDS	R1, R1, #3
0x1C12	0x7809    LDRB	R1, [R1, #0]
0x1C14	0x3130    ADDS	R1, #48
0x1C16	0x7021    STRB	R1, [R4, #0]
0x1C18	0x1C62    ADDS	R2, R4, #1
; str end address is: 16 (R4)
; str start address is: 8 (R2)
;__Lib_Conversions.c, 695 :: 		
0x1C1A	0x2801    CMP	R0, #1
0x1C1C	0xDB03    BLT	L__FloatToStr178
0x1C1E	0x2806    CMP	R0, #6
0x1C20	0xDC01    BGT	L__FloatToStr177
0x1C22	0x4615    MOV	R5, R2
; bpoint end address is: 12 (R3)
0x1C24	0xE003    B	L_FloatToStr127
L__FloatToStr178:
L__FloatToStr177:
;__Lib_Conversions.c, 696 :: 		
0x1C26	0x212E    MOVS	R1, #46
0x1C28	0x7011    STRB	R1, [R2, #0]
0x1C2A	0x1C55    ADDS	R5, R2, #1
; str end address is: 8 (R2)
; str start address is: 20 (R5)
;__Lib_Conversions.c, 697 :: 		
; bpoint start address is: 12 (R3)
0x1C2C	0x2301    MOVS	R3, #1
; str end address is: 20 (R5)
; bpoint end address is: 12 (R3)
;__Lib_Conversions.c, 698 :: 		
L_FloatToStr127:
;__Lib_Conversions.c, 699 :: 		
; bpoint start address is: 12 (R3)
; str start address is: 20 (R5)
; d start address is: 4 (R1)
0x1C2E	0x2106    MOVS	R1, #6
; d end address is: 4 (R1)
; str end address is: 20 (R5)
; bpoint end address is: 12 (R3)
; dexpon end address is: 0 (R0)
0x1C30	0xB244    SXTB	R4, R0
0x1C32	0xB2C8    UXTB	R0, R1
L_FloatToStr128:
; d start address is: 0 (R0)
; str start address is: 20 (R5)
; bpoint start address is: 12 (R3)
; dexpon start address is: 16 (R4)
0x1C34	0xB310    CBZ	R0, L_FloatToStr129
;__Lib_Conversions.c, 700 :: 		
0x1C36	0xA902    ADD	R1, SP, #8
0x1C38	0x1CCA    ADDS	R2, R1, #3
0x1C3A	0x2100    MOVS	R1, #0
0x1C3C	0x7011    STRB	R1, [R2, #0]
;__Lib_Conversions.c, 701 :: 		
0x1C3E	0x9902    LDR	R1, [SP, #8]
0x1C40	0x008A    LSLS	R2, R1, #2
0x1C42	0x9902    LDR	R1, [SP, #8]
0x1C44	0x1889    ADDS	R1, R1, R2
0x1C46	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 702 :: 		
0x1C48	0x9902    LDR	R1, [SP, #8]
0x1C4A	0x0049    LSLS	R1, R1, #1
0x1C4C	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 703 :: 		
0x1C4E	0xA902    ADD	R1, SP, #8
0x1C50	0x1CC9    ADDS	R1, R1, #3
0x1C52	0x7809    LDRB	R1, [R1, #0]
0x1C54	0x3130    ADDS	R1, #48
0x1C56	0x7029    STRB	R1, [R5, #0]
0x1C58	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 704 :: 		
0x1C5A	0xB963    CBNZ	R3, L__FloatToStr181
;__Lib_Conversions.c, 705 :: 		
0x1C5C	0x1E61    SUBS	R1, R4, #1
0x1C5E	0xB249    SXTB	R1, R1
; dexpon end address is: 16 (R4)
; dexpon start address is: 8 (R2)
0x1C60	0xB24A    SXTB	R2, R1
0x1C62	0xB921    CBNZ	R1, L__FloatToStr180
; bpoint end address is: 12 (R3)
;__Lib_Conversions.c, 706 :: 		
0x1C64	0x212E    MOVS	R1, #46
0x1C66	0x7029    STRB	R1, [R5, #0]
0x1C68	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 707 :: 		
; bpoint start address is: 4 (R1)
0x1C6A	0x2101    MOVS	R1, #1
; bpoint end address is: 4 (R1)
; str end address is: 20 (R5)
;__Lib_Conversions.c, 708 :: 		
0x1C6C	0xE000    B	L_FloatToStr132
L__FloatToStr180:
;__Lib_Conversions.c, 705 :: 		
0x1C6E	0xB2D9    UXTB	R1, R3
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr132:
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
0x1C70	0xB254    SXTB	R4, R2
; dexpon end address is: 8 (R2)
; bpoint end address is: 4 (R1)
; str end address is: 20 (R5)
0x1C72	0xB2CB    UXTB	R3, R1
0x1C74	0xE7FF    B	L_FloatToStr131
L__FloatToStr181:
;__Lib_Conversions.c, 704 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr131:
;__Lib_Conversions.c, 699 :: 		
; str start address is: 20 (R5)
; bpoint start address is: 12 (R3)
; dexpon start address is: 16 (R4)
0x1C76	0x1E40    SUBS	R0, R0, #1
0x1C78	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 709 :: 		
; bpoint end address is: 12 (R3)
; d end address is: 0 (R0)
0x1C7A	0xE7DB    B	L_FloatToStr128
L_FloatToStr129:
;__Lib_Conversions.c, 710 :: 		
0x1C7C	0x462A    MOV	R2, R5
; dexpon end address is: 16 (R4)
0x1C7E	0xB260    SXTB	R0, R4
L_FloatToStr133:
; str end address is: 20 (R5)
; dexpon start address is: 0 (R0)
; str start address is: 8 (R2)
0x1C80	0x1E51    SUBS	R1, R2, #1
0x1C82	0x7809    LDRB	R1, [R1, #0]
0x1C84	0x2930    CMP	R1, #48
0x1C86	0xD101    BNE	L_FloatToStr134
;__Lib_Conversions.c, 711 :: 		
0x1C88	0x1E52    SUBS	R2, R2, #1
0x1C8A	0xE7F9    B	L_FloatToStr133
L_FloatToStr134:
;__Lib_Conversions.c, 712 :: 		
0x1C8C	0x1E51    SUBS	R1, R2, #1
0x1C8E	0x7809    LDRB	R1, [R1, #0]
0x1C90	0x292E    CMP	R1, #46
0x1C92	0xD101    BNE	L__FloatToStr182
;__Lib_Conversions.c, 713 :: 		
0x1C94	0x1E52    SUBS	R2, R2, #1
; str end address is: 8 (R2)
0x1C96	0xE7FF    B	L_FloatToStr135
L__FloatToStr182:
;__Lib_Conversions.c, 712 :: 		
;__Lib_Conversions.c, 713 :: 		
L_FloatToStr135:
;__Lib_Conversions.c, 714 :: 		
; str start address is: 8 (R2)
0x1C98	0xB318    CBZ	R0, L__FloatToStr185
;__Lib_Conversions.c, 715 :: 		
0x1C9A	0x2165    MOVS	R1, #101
0x1C9C	0x7011    STRB	R1, [R2, #0]
0x1C9E	0x1C52    ADDS	R2, R2, #1
;__Lib_Conversions.c, 716 :: 		
0x1CA0	0x2800    CMP	R0, #0
0x1CA2	0xDA06    BGE	L__FloatToStr183
;__Lib_Conversions.c, 717 :: 		
0x1CA4	0x212D    MOVS	R1, #45
0x1CA6	0x7011    STRB	R1, [R2, #0]
0x1CA8	0x1C52    ADDS	R2, R2, #1
;__Lib_Conversions.c, 718 :: 		
0x1CAA	0x4241    RSBS	R1, R0, #0
0x1CAC	0xB248    SXTB	R0, R1
; dexpon end address is: 0 (R0)
; str end address is: 8 (R2)
0x1CAE	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
0x1CB0	0xE000    B	L_FloatToStr137
L__FloatToStr183:
;__Lib_Conversions.c, 716 :: 		
0x1CB2	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
L_FloatToStr137:
;__Lib_Conversions.c, 720 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 8 (R2)
; d start address is: 0 (R0)
0x1CB4	0xB2D8    UXTB	R0, R3
;__Lib_Conversions.c, 721 :: 		
0x1CB6	0xB2D9    UXTB	R1, R3
; dexpon end address is: 12 (R3)
0x1CB8	0x2909    CMP	R1, #9
0x1CBA	0xD907    BLS	L__FloatToStr184
;__Lib_Conversions.c, 722 :: 		
0x1CBC	0x210A    MOVS	R1, #10
0x1CBE	0xFBB0F1F1  UDIV	R1, R0, R1
0x1CC2	0xB2C9    UXTB	R1, R1
0x1CC4	0x3130    ADDS	R1, #48
0x1CC6	0x7011    STRB	R1, [R2, #0]
0x1CC8	0x1C53    ADDS	R3, R2, #1
; str end address is: 8 (R2)
; str start address is: 12 (R3)
; str end address is: 12 (R3)
0x1CCA	0xE000    B	L_FloatToStr138
L__FloatToStr184:
;__Lib_Conversions.c, 721 :: 		
0x1CCC	0x4613    MOV	R3, R2
;__Lib_Conversions.c, 722 :: 		
L_FloatToStr138:
;__Lib_Conversions.c, 723 :: 		
; str start address is: 12 (R3)
0x1CCE	0x220A    MOVS	R2, #10
0x1CD0	0xFBB0F1F2  UDIV	R1, R0, R2
0x1CD4	0xFB020111  MLS	R1, R2, R1, R0
0x1CD8	0xB2C9    UXTB	R1, R1
; d end address is: 0 (R0)
0x1CDA	0x3130    ADDS	R1, #48
0x1CDC	0x7019    STRB	R1, [R3, #0]
0x1CDE	0x1C58    ADDS	R0, R3, #1
; str end address is: 12 (R3)
; str start address is: 0 (R0)
; str end address is: 0 (R0)
;__Lib_Conversions.c, 724 :: 		
0x1CE0	0xE000    B	L_FloatToStr136
L__FloatToStr185:
;__Lib_Conversions.c, 714 :: 		
0x1CE2	0x4610    MOV	R0, R2
;__Lib_Conversions.c, 724 :: 		
L_FloatToStr136:
;__Lib_Conversions.c, 725 :: 		
; str start address is: 0 (R0)
0x1CE4	0x2100    MOVS	R1, #0
0x1CE6	0x7001    STRB	R1, [R0, #0]
; str end address is: 0 (R0)
;__Lib_Conversions.c, 726 :: 		
0x1CE8	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 727 :: 		
L_end_FloatToStr:
0x1CEA	0xF8DDE000  LDR	LR, [SP, #0]
0x1CEE	0xB003    ADD	SP, SP, #12
0x1CF0	0x4770    BX	LR
0x1CF2	0xBF00    NOP
0x1CF4	0x01192000  	?lstr1___Lib_Conversions+0
0x1CF8	0x011D2000  	?lstr2___Lib_Conversions+0
0x1CFC	0x011F2000  	?lstr3___Lib_Conversions+0
0x1D00	0xCCCD3DCC  	#1036831949
; end of _FloatToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x0DCC	0xB081    SUB	SP, SP, #4
0x0DCE	0x9100    STR	R1, [SP, #0]
0x0DD0	0x4601    MOV	R1, R0
0x0DD2	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x0DD4	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x0DD6	0x461C    MOV	R4, R3
0x0DD8	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x0DDA	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x0DDC	0x4603    MOV	R3, R0
0x0DDE	0x1C42    ADDS	R2, R0, #1
0x0DE0	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x0DE2	0x781A    LDRB	R2, [R3, #0]
0x0DE4	0x7022    STRB	R2, [R4, #0]
0x0DE6	0x7822    LDRB	R2, [R4, #0]
0x0DE8	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x0DEA	0x462B    MOV	R3, R5
0x0DEC	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x0DEE	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x0DF0	0xB001    ADD	SP, SP, #4
0x0DF2	0x4770    BX	LR
; end of _strcpy
_Lcd_Out:
;__Lib_Lcd.c, 218 :: 		
; text start address is: 8 (R2)
; column start address is: 4 (R1)
; row start address is: 0 (R0)
0x1AA4	0xB081    SUB	SP, SP, #4
0x1AA6	0xF8CDE000  STR	LR, [SP, #0]
0x1AAA	0x4615    MOV	R5, R2
; text end address is: 8 (R2)
; column end address is: 4 (R1)
; row end address is: 0 (R0)
; row start address is: 0 (R0)
; column start address is: 4 (R1)
; text start address is: 20 (R5)
;__Lib_Lcd.c, 221 :: 		
0x1AAC	0xE009    B	L_Lcd_Out11
; row end address is: 0 (R0)
;__Lib_Lcd.c, 222 :: 		
L_Lcd_Out13:
; row start address is: 0 (R0)
0x1AAE	0x2080    MOVS	R0, #128
; row end address is: 0 (R0)
0x1AB0	0xE010    B	L_Lcd_Out12
;__Lib_Lcd.c, 223 :: 		
L_Lcd_Out14:
; row start address is: 0 (R0)
0x1AB2	0x20C0    MOVS	R0, #192
; row end address is: 0 (R0)
0x1AB4	0xE00E    B	L_Lcd_Out12
;__Lib_Lcd.c, 224 :: 		
L_Lcd_Out15:
; row start address is: 0 (R0)
0x1AB6	0x2094    MOVS	R0, #148
; row end address is: 0 (R0)
0x1AB8	0xE00C    B	L_Lcd_Out12
;__Lib_Lcd.c, 225 :: 		
L_Lcd_Out16:
; row start address is: 0 (R0)
0x1ABA	0x20D4    MOVS	R0, #212
; row end address is: 0 (R0)
0x1ABC	0xE00A    B	L_Lcd_Out12
;__Lib_Lcd.c, 226 :: 		
L_Lcd_Out17:
; row start address is: 0 (R0)
0x1ABE	0x2080    MOVS	R0, #128
;__Lib_Lcd.c, 227 :: 		
0x1AC0	0xE008    B	L_Lcd_Out12
L_Lcd_Out11:
0x1AC2	0x2801    CMP	R0, #1
0x1AC4	0xD0F3    BEQ	L_Lcd_Out13
0x1AC6	0x2802    CMP	R0, #2
0x1AC8	0xD0F3    BEQ	L_Lcd_Out14
0x1ACA	0x2803    CMP	R0, #3
0x1ACC	0xD0F3    BEQ	L_Lcd_Out15
0x1ACE	0x2804    CMP	R0, #4
0x1AD0	0xD0F3    BEQ	L_Lcd_Out16
; row end address is: 0 (R0)
0x1AD2	0xE7F4    B	L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c, 228 :: 		
; row start address is: 0 (R0)
0x1AD4	0x1E4B    SUBS	R3, R1, #1
0x1AD6	0xB21B    SXTH	R3, R3
; column end address is: 4 (R1)
0x1AD8	0x18C3    ADDS	R3, R0, R3
; row end address is: 0 (R0)
;__Lib_Lcd.c, 230 :: 		
0x1ADA	0xB2D8    UXTB	R0, R3
0x1ADC	0xF7FFFB64  BL	_Lcd_Cmd+0
;__Lib_Lcd.c, 231 :: 		
0x1AE0	0x2400    MOVS	R4, #0
0x1AE2	0xB264    SXTB	R4, R4
0x1AE4	0x4B0B    LDR	R3, [PC, #44]
0x1AE6	0x601C    STR	R4, [R3, #0]
;__Lib_Lcd.c, 232 :: 		
; i start address is: 0 (R0)
0x1AE8	0x2000    MOVS	R0, #0
; text end address is: 20 (R5)
; i end address is: 0 (R0)
0x1AEA	0x462C    MOV	R4, R5
0x1AEC	0xB2C5    UXTB	R5, R0
;__Lib_Lcd.c, 233 :: 		
L_Lcd_Out18:
; i start address is: 20 (R5)
; text start address is: 16 (R4)
0x1AEE	0x1963    ADDS	R3, R4, R5
0x1AF0	0x781B    LDRB	R3, [R3, #0]
0x1AF2	0xB13B    CBZ	R3, L_Lcd_Out19
;__Lib_Lcd.c, 234 :: 		
0x1AF4	0x1963    ADDS	R3, R4, R5
0x1AF6	0x781B    LDRB	R3, [R3, #0]
0x1AF8	0xB2D8    UXTB	R0, R3
0x1AFA	0xF7FFF953  BL	_Lcd_Chr_CP+0
0x1AFE	0x1C6D    ADDS	R5, R5, #1
0x1B00	0xB2ED    UXTB	R5, R5
; text end address is: 16 (R4)
; i end address is: 20 (R5)
0x1B02	0xE7F4    B	L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c, 235 :: 		
0x1B04	0x2401    MOVS	R4, #1
0x1B06	0xB264    SXTB	R4, R4
0x1B08	0x4B02    LDR	R3, [PC, #8]
0x1B0A	0x601C    STR	R4, [R3, #0]
;__Lib_Lcd.c, 236 :: 		
L_end_Lcd_Out:
0x1B0C	0xF8DDE000  LDR	LR, [SP, #0]
0x1B10	0xB001    ADD	SP, SP, #4
0x1B12	0x4770    BX	LR
0x1B14	0x26E02201  	__Lib_Lcd_cmd_status+0
; end of _Lcd_Out
_Lcd_Chr_CP:
;__Lib_Lcd.c, 43 :: 		
; out_char start address is: 0 (R0)
0x0DA4	0xB081    SUB	SP, SP, #4
0x0DA6	0xF8CDE000  STR	LR, [SP, #0]
; out_char end address is: 0 (R0)
; out_char start address is: 0 (R0)
;__Lib_Lcd.c, 45 :: 		
0x0DAA	0x2200    MOVS	R2, #0
0x0DAC	0xB252    SXTB	R2, R2
0x0DAE	0x4906    LDR	R1, [PC, #24]
0x0DB0	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 46 :: 		
; out_char end address is: 0 (R0)
0x0DB2	0xF000F9F9  BL	_Lcd_Cmd+0
;__Lib_Lcd.c, 47 :: 		
0x0DB6	0x2201    MOVS	R2, #1
0x0DB8	0xB252    SXTB	R2, R2
0x0DBA	0x4903    LDR	R1, [PC, #12]
0x0DBC	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 48 :: 		
L_end_Lcd_Chr_CP:
0x0DBE	0xF8DDE000  LDR	LR, [SP, #0]
0x0DC2	0xB001    ADD	SP, SP, #4
0x0DC4	0x4770    BX	LR
0x0DC6	0xBF00    NOP
0x0DC8	0x26E02201  	__Lib_Lcd_cmd_status+0
; end of _Lcd_Chr_CP
_sendData:
;uart.c, 167 :: 		uint8_t sendData(float temp, float hum, float pres, float dist) {
0x1EC8	0xB0B2    SUB	SP, SP, #200
0x1ECA	0xF8CDE000  STR	LR, [SP, #0]
; dist start address is: 12 (S3)
; pres start address is: 8 (S2)
; hum start address is: 4 (S1)
; temp start address is: 0 (S0)
0x1ECE	0xEEB02A61  VMOV.F32	S4, S3
0x1ED2	0xEEF01A41  VMOV.F32	S3, S2
0x1ED6	0xEEB01A60  VMOV.F32	S2, S1
; dist end address is: 12 (S3)
; pres end address is: 8 (S2)
; hum end address is: 4 (S1)
; temp end address is: 0 (S0)
; temp start address is: 0 (S0)
; hum start address is: 8 (S2)
; pres start address is: 12 (S3)
; dist start address is: 16 (S4)
;uart.c, 170 :: 		uint8_t url[150] = "AT+HTTPPARA=\"URL\",\"http://azaric.asuscomm.com:9998/mips/log?temp=";
0x1EDA	0xF10D0B30  ADD	R11, SP, #48
0x1EDE	0xF10B0A96  ADD	R10, R11, #150
0x1EE2	0xF8DFC344  LDR	R12, [PC, #836]
0x1EE6	0xF7FFFFE5  BL	___CC2DW+0
;uart.c, 171 :: 		len = strlen(url);
0x1EEA	0xAC0C    ADD	R4, SP, #48
0x1EEC	0x4620    MOV	R0, R4
0x1EEE	0xF7FFFDCB  BL	_strlen+0
; len start address is: 32 (R8)
0x1EF2	0xFA0FF880  SXTH	R8, R0
;uart.c, 172 :: 		FloatToStr(temp, txtTemp);
0x1EF6	0xAC02    ADD	R4, SP, #8
0x1EF8	0x4620    MOV	R0, R4
; temp end address is: 0 (S0)
0x1EFA	0xF7FFFE0D  BL	_FloatToStr+0
;uart.c, 173 :: 		FloatToStr(hum, txtHum);
0x1EFE	0xF10D0412  ADD	R4, SP, #18
0x1F02	0x4620    MOV	R0, R4
0x1F04	0xEEB00A41  VMOV.F32	S0, S2
; hum end address is: 8 (S2)
0x1F08	0xF7FFFE06  BL	_FloatToStr+0
;uart.c, 174 :: 		FloatToStr(pres, txtPres);
0x1F0C	0xAC07    ADD	R4, SP, #28
0x1F0E	0x4620    MOV	R0, R4
0x1F10	0xEEB00A61  VMOV.F32	S0, S3
; pres end address is: 12 (S3)
0x1F14	0xF7FFFE00  BL	_FloatToStr+0
;uart.c, 175 :: 		FloatToStr(dist, txtDist);
0x1F18	0xF10D0426  ADD	R4, SP, #38
0x1F1C	0x4620    MOV	R0, R4
0x1F1E	0xEEB00A42  VMOV.F32	S0, S4
; dist end address is: 16 (S4)
0x1F22	0xF7FFFDF9  BL	_FloatToStr+0
;uart.c, 176 :: 		for (i = 0; i < strlen(txtTemp); i++) {
; i start address is: 24 (R6)
0x1F26	0x2600    MOVS	R6, #0
; len end address is: 32 (R8)
; i end address is: 24 (R6)
0x1F28	0x4647    MOV	R7, R8
L_sendData38:
; i start address is: 24 (R6)
; len start address is: 28 (R7)
0x1F2A	0xAC02    ADD	R4, SP, #8
0x1F2C	0x4620    MOV	R0, R4
0x1F2E	0xF7FFFDAB  BL	_strlen+0
0x1F32	0x4286    CMP	R6, R0
0x1F34	0xD20D    BCS	L_sendData39
;uart.c, 177 :: 		if (txtTemp[i] == '\0')
0x1F36	0xAC02    ADD	R4, SP, #8
0x1F38	0x19A4    ADDS	R4, R4, R6
0x1F3A	0x7824    LDRB	R4, [R4, #0]
0x1F3C	0xB904    CBNZ	R4, L_sendData41
; i end address is: 24 (R6)
;uart.c, 178 :: 		break;
0x1F3E	0xE008    B	L_sendData39
L_sendData41:
;uart.c, 179 :: 		url[len++] = txtTemp[i];
; i start address is: 24 (R6)
0x1F40	0xAC0C    ADD	R4, SP, #48
0x1F42	0x19E5    ADDS	R5, R4, R7
0x1F44	0xAC02    ADD	R4, SP, #8
0x1F46	0x19A4    ADDS	R4, R4, R6
0x1F48	0x7824    LDRB	R4, [R4, #0]
0x1F4A	0x702C    STRB	R4, [R5, #0]
0x1F4C	0x1C7F    ADDS	R7, R7, #1
;uart.c, 176 :: 		for (i = 0; i < strlen(txtTemp); i++) {
0x1F4E	0x1C76    ADDS	R6, R6, #1
;uart.c, 180 :: 		}
; i end address is: 24 (R6)
0x1F50	0xE7EB    B	L_sendData38
L_sendData39:
;uart.c, 182 :: 		url[len++] = '&';url[len++] = 'h';url[len++] = 'u';url[len++] = 'm';url[len++] = '=';
0x1F52	0xAE0C    ADD	R6, SP, #48
0x1F54	0x19F5    ADDS	R5, R6, R7
0x1F56	0x2426    MOVS	R4, #38
0x1F58	0x702C    STRB	R4, [R5, #0]
0x1F5A	0x1C7C    ADDS	R4, R7, #1
; len end address is: 28 (R7)
; len start address is: 0 (R0)
0x1F5C	0x4620    MOV	R0, R4
0x1F5E	0x1935    ADDS	R5, R6, R4
0x1F60	0x2468    MOVS	R4, #104
0x1F62	0x702C    STRB	R4, [R5, #0]
0x1F64	0x1C44    ADDS	R4, R0, #1
0x1F66	0x4620    MOV	R0, R4
0x1F68	0x1935    ADDS	R5, R6, R4
0x1F6A	0x2475    MOVS	R4, #117
0x1F6C	0x702C    STRB	R4, [R5, #0]
0x1F6E	0x1C44    ADDS	R4, R0, #1
0x1F70	0x4620    MOV	R0, R4
0x1F72	0x1935    ADDS	R5, R6, R4
0x1F74	0x246D    MOVS	R4, #109
0x1F76	0x702C    STRB	R4, [R5, #0]
0x1F78	0x1C44    ADDS	R4, R0, #1
0x1F7A	0x4620    MOV	R0, R4
0x1F7C	0x1935    ADDS	R5, R6, R4
0x1F7E	0x243D    MOVS	R4, #61
0x1F80	0x702C    STRB	R4, [R5, #0]
0x1F82	0x1C47    ADDS	R7, R0, #1
; len end address is: 0 (R0)
; len start address is: 28 (R7)
;uart.c, 184 :: 		for (i = 0; i < strlen(txtHum); i++) {
; i start address is: 24 (R6)
0x1F84	0x2600    MOVS	R6, #0
; len end address is: 28 (R7)
; i end address is: 24 (R6)
L_sendData42:
; i start address is: 24 (R6)
; len start address is: 28 (R7)
0x1F86	0xF10D0412  ADD	R4, SP, #18
0x1F8A	0x4620    MOV	R0, R4
0x1F8C	0xF7FFFD7C  BL	_strlen+0
0x1F90	0x4286    CMP	R6, R0
0x1F92	0xD20F    BCS	L_sendData43
;uart.c, 185 :: 		if (txtHum[i] == '\0')
0x1F94	0xF10D0412  ADD	R4, SP, #18
0x1F98	0x19A4    ADDS	R4, R4, R6
0x1F9A	0x7824    LDRB	R4, [R4, #0]
0x1F9C	0xB904    CBNZ	R4, L_sendData45
; i end address is: 24 (R6)
;uart.c, 186 :: 		break;
0x1F9E	0xE009    B	L_sendData43
L_sendData45:
;uart.c, 187 :: 		url[len++] = txtHum[i];
; i start address is: 24 (R6)
0x1FA0	0xAC0C    ADD	R4, SP, #48
0x1FA2	0x19E5    ADDS	R5, R4, R7
0x1FA4	0xF10D0412  ADD	R4, SP, #18
0x1FA8	0x19A4    ADDS	R4, R4, R6
0x1FAA	0x7824    LDRB	R4, [R4, #0]
0x1FAC	0x702C    STRB	R4, [R5, #0]
0x1FAE	0x1C7F    ADDS	R7, R7, #1
;uart.c, 184 :: 		for (i = 0; i < strlen(txtHum); i++) {
0x1FB0	0x1C76    ADDS	R6, R6, #1
;uart.c, 188 :: 		}
; i end address is: 24 (R6)
0x1FB2	0xE7E8    B	L_sendData42
L_sendData43:
;uart.c, 190 :: 		url[len++] = '&';url[len++] = 'p';url[len++] = 'r';url[len++] = 'e';url[len++] = 's';url[len++] = '=';
0x1FB4	0xAE0C    ADD	R6, SP, #48
0x1FB6	0x19F5    ADDS	R5, R6, R7
0x1FB8	0x2426    MOVS	R4, #38
0x1FBA	0x702C    STRB	R4, [R5, #0]
0x1FBC	0x1C7C    ADDS	R4, R7, #1
; len end address is: 28 (R7)
; len start address is: 0 (R0)
0x1FBE	0x4620    MOV	R0, R4
0x1FC0	0x1935    ADDS	R5, R6, R4
0x1FC2	0x2470    MOVS	R4, #112
0x1FC4	0x702C    STRB	R4, [R5, #0]
0x1FC6	0x1C44    ADDS	R4, R0, #1
0x1FC8	0x4620    MOV	R0, R4
0x1FCA	0x1935    ADDS	R5, R6, R4
0x1FCC	0x2472    MOVS	R4, #114
0x1FCE	0x702C    STRB	R4, [R5, #0]
0x1FD0	0x1C44    ADDS	R4, R0, #1
0x1FD2	0x4620    MOV	R0, R4
0x1FD4	0x1935    ADDS	R5, R6, R4
0x1FD6	0x2465    MOVS	R4, #101
0x1FD8	0x702C    STRB	R4, [R5, #0]
0x1FDA	0x1C44    ADDS	R4, R0, #1
0x1FDC	0x4620    MOV	R0, R4
0x1FDE	0x1935    ADDS	R5, R6, R4
0x1FE0	0x2473    MOVS	R4, #115
0x1FE2	0x702C    STRB	R4, [R5, #0]
0x1FE4	0x1C44    ADDS	R4, R0, #1
0x1FE6	0x4620    MOV	R0, R4
0x1FE8	0x1935    ADDS	R5, R6, R4
0x1FEA	0x243D    MOVS	R4, #61
0x1FEC	0x702C    STRB	R4, [R5, #0]
0x1FEE	0x1C47    ADDS	R7, R0, #1
; len end address is: 0 (R0)
; len start address is: 28 (R7)
;uart.c, 192 :: 		for (i = 0; i < strlen(txtPres); i++) {
; i start address is: 24 (R6)
0x1FF0	0x2600    MOVS	R6, #0
; len end address is: 28 (R7)
; i end address is: 24 (R6)
L_sendData46:
; i start address is: 24 (R6)
; len start address is: 28 (R7)
0x1FF2	0xAC07    ADD	R4, SP, #28
0x1FF4	0x4620    MOV	R0, R4
0x1FF6	0xF7FFFD47  BL	_strlen+0
0x1FFA	0x4286    CMP	R6, R0
0x1FFC	0xD20D    BCS	L_sendData47
;uart.c, 193 :: 		if (txtPres[i] == '\0')
0x1FFE	0xAC07    ADD	R4, SP, #28
0x2000	0x19A4    ADDS	R4, R4, R6
0x2002	0x7824    LDRB	R4, [R4, #0]
0x2004	0xB904    CBNZ	R4, L_sendData49
; i end address is: 24 (R6)
;uart.c, 194 :: 		break;
0x2006	0xE008    B	L_sendData47
L_sendData49:
;uart.c, 195 :: 		url[len++] = txtPres[i];
; i start address is: 24 (R6)
0x2008	0xAC0C    ADD	R4, SP, #48
0x200A	0x19E5    ADDS	R5, R4, R7
0x200C	0xAC07    ADD	R4, SP, #28
0x200E	0x19A4    ADDS	R4, R4, R6
0x2010	0x7824    LDRB	R4, [R4, #0]
0x2012	0x702C    STRB	R4, [R5, #0]
0x2014	0x1C7F    ADDS	R7, R7, #1
;uart.c, 192 :: 		for (i = 0; i < strlen(txtPres); i++) {
0x2016	0x1C76    ADDS	R6, R6, #1
;uart.c, 196 :: 		}
; i end address is: 24 (R6)
0x2018	0xE7EB    B	L_sendData46
L_sendData47:
;uart.c, 198 :: 		url[len++] = '&';url[len++] = 'd';url[len++] = 'i';url[len++] = 's';url[len++] = 't';url[len++] = '=';
0x201A	0xAE0C    ADD	R6, SP, #48
0x201C	0x19F5    ADDS	R5, R6, R7
0x201E	0x2426    MOVS	R4, #38
0x2020	0x702C    STRB	R4, [R5, #0]
0x2022	0x1C7C    ADDS	R4, R7, #1
; len end address is: 28 (R7)
; len start address is: 0 (R0)
0x2024	0x4620    MOV	R0, R4
0x2026	0x1935    ADDS	R5, R6, R4
0x2028	0x2464    MOVS	R4, #100
0x202A	0x702C    STRB	R4, [R5, #0]
0x202C	0x1C44    ADDS	R4, R0, #1
0x202E	0x4620    MOV	R0, R4
0x2030	0x1935    ADDS	R5, R6, R4
0x2032	0x2469    MOVS	R4, #105
0x2034	0x702C    STRB	R4, [R5, #0]
0x2036	0x1C44    ADDS	R4, R0, #1
0x2038	0x4620    MOV	R0, R4
0x203A	0x1935    ADDS	R5, R6, R4
0x203C	0x2473    MOVS	R4, #115
0x203E	0x702C    STRB	R4, [R5, #0]
0x2040	0x1C44    ADDS	R4, R0, #1
0x2042	0x4620    MOV	R0, R4
0x2044	0x1935    ADDS	R5, R6, R4
0x2046	0x2474    MOVS	R4, #116
0x2048	0x702C    STRB	R4, [R5, #0]
0x204A	0x1C44    ADDS	R4, R0, #1
0x204C	0x4620    MOV	R0, R4
0x204E	0x1935    ADDS	R5, R6, R4
0x2050	0x243D    MOVS	R4, #61
0x2052	0x702C    STRB	R4, [R5, #0]
0x2054	0x1C41    ADDS	R1, R0, #1
; len end address is: 0 (R0)
; len start address is: 4 (R1)
;uart.c, 200 :: 		for (i = 0; i < strlen(txtDist); i++) {
; i start address is: 24 (R6)
0x2056	0x2600    MOVS	R6, #0
; len end address is: 4 (R1)
; i end address is: 24 (R6)
L_sendData50:
; i start address is: 24 (R6)
; len start address is: 4 (R1)
0x2058	0xF10D0426  ADD	R4, SP, #38
0x205C	0x9101    STR	R1, [SP, #4]
0x205E	0x4620    MOV	R0, R4
0x2060	0xF7FFFD12  BL	_strlen+0
0x2064	0x9901    LDR	R1, [SP, #4]
0x2066	0x4286    CMP	R6, R0
0x2068	0xD20F    BCS	L_sendData51
;uart.c, 201 :: 		if (txtDist[i] == '\0')
0x206A	0xF10D0426  ADD	R4, SP, #38
0x206E	0x19A4    ADDS	R4, R4, R6
0x2070	0x7824    LDRB	R4, [R4, #0]
0x2072	0xB904    CBNZ	R4, L_sendData53
; i end address is: 24 (R6)
;uart.c, 202 :: 		break;
0x2074	0xE009    B	L_sendData51
L_sendData53:
;uart.c, 203 :: 		url[len++] = txtDist[i];
; i start address is: 24 (R6)
0x2076	0xAC0C    ADD	R4, SP, #48
0x2078	0x1865    ADDS	R5, R4, R1
0x207A	0xF10D0426  ADD	R4, SP, #38
0x207E	0x19A4    ADDS	R4, R4, R6
0x2080	0x7824    LDRB	R4, [R4, #0]
0x2082	0x702C    STRB	R4, [R5, #0]
0x2084	0x1C49    ADDS	R1, R1, #1
;uart.c, 200 :: 		for (i = 0; i < strlen(txtDist); i++) {
0x2086	0x1C76    ADDS	R6, R6, #1
;uart.c, 204 :: 		}
; i end address is: 24 (R6)
0x2088	0xE7E6    B	L_sendData50
L_sendData51:
;uart.c, 205 :: 		url[len++] = '\"';url[len++] = '\r';url[len++] = '\n';url[len++] = '\0';
0x208A	0xAE0C    ADD	R6, SP, #48
0x208C	0x1875    ADDS	R5, R6, R1
0x208E	0x2422    MOVS	R4, #34
0x2090	0x702C    STRB	R4, [R5, #0]
0x2092	0x1C4C    ADDS	R4, R1, #1
; len end address is: 4 (R1)
; len start address is: 0 (R0)
0x2094	0x4620    MOV	R0, R4
0x2096	0x1935    ADDS	R5, R6, R4
0x2098	0x240D    MOVS	R4, #13
0x209A	0x702C    STRB	R4, [R5, #0]
0x209C	0x1C44    ADDS	R4, R0, #1
0x209E	0x4620    MOV	R0, R4
0x20A0	0x1935    ADDS	R5, R6, R4
0x20A2	0x240A    MOVS	R4, #10
0x20A4	0x702C    STRB	R4, [R5, #0]
0x20A6	0x1C44    ADDS	R4, R0, #1
; len end address is: 0 (R0)
0x20A8	0x1935    ADDS	R5, R6, R4
0x20AA	0x2400    MOVS	R4, #0
0x20AC	0x702C    STRB	R4, [R5, #0]
;uart.c, 207 :: 		USART2_Send_Text("AT+CPIN?\r\n");
0x20AE	0x4C5F    LDR	R4, [PC, #380]
0x20B0	0x4620    MOV	R0, R4
0x20B2	0xF7FFFE27  BL	_USART2_Send_Text+0
;uart.c, 208 :: 		my_Delay_ms(_TIMER_UART);
0x20B6	0xF64030B8  MOVW	R0, #3000
0x20BA	0xF7FFFEEF  BL	_my_Delay_ms+0
;uart.c, 209 :: 		if(checkReceiveTxt()==0) return 0;
0x20BE	0xF7FFFB1B  BL	_checkReceiveTxt+0
0x20C2	0xB908    CBNZ	R0, L_sendData54
0x20C4	0x2000    MOVS	R0, #0
0x20C6	0xE0AA    B	L_end_sendData
L_sendData54:
;uart.c, 210 :: 		USART2_Send_Text("AT+CIPSHUT\r\n");
0x20C8	0x4C59    LDR	R4, [PC, #356]
0x20CA	0x4620    MOV	R0, R4
0x20CC	0xF7FFFE1A  BL	_USART2_Send_Text+0
;uart.c, 211 :: 		my_Delay_ms(_TIMER_UART);
0x20D0	0xF64030B8  MOVW	R0, #3000
0x20D4	0xF7FFFEE2  BL	_my_Delay_ms+0
;uart.c, 212 :: 		if(checkReceiveTxt()==0) return 0;
0x20D8	0xF7FFFB0E  BL	_checkReceiveTxt+0
0x20DC	0xB908    CBNZ	R0, L_sendData55
0x20DE	0x2000    MOVS	R0, #0
0x20E0	0xE09D    B	L_end_sendData
L_sendData55:
;uart.c, 214 :: 		USART2_Send_Text("AT+CGATT=1\r\n");
0x20E2	0x4C54    LDR	R4, [PC, #336]
0x20E4	0x4620    MOV	R0, R4
0x20E6	0xF7FFFE0D  BL	_USART2_Send_Text+0
;uart.c, 215 :: 		my_Delay_ms(_TIMER_UART);
0x20EA	0xF64030B8  MOVW	R0, #3000
0x20EE	0xF7FFFED5  BL	_my_Delay_ms+0
;uart.c, 216 :: 		if(checkReceiveTxt()==0) return 0;
0x20F2	0xF7FFFB01  BL	_checkReceiveTxt+0
0x20F6	0xB908    CBNZ	R0, L_sendData56
0x20F8	0x2000    MOVS	R0, #0
0x20FA	0xE090    B	L_end_sendData
L_sendData56:
;uart.c, 218 :: 		USART2_Send_Text("AT+SAPBR=3,1,\"CONTYPE\",\"GPRS\"\r\n");
0x20FC	0x4C4E    LDR	R4, [PC, #312]
0x20FE	0x4620    MOV	R0, R4
0x2100	0xF7FFFE00  BL	_USART2_Send_Text+0
;uart.c, 219 :: 		my_Delay_ms(_TIMER_UART);
0x2104	0xF64030B8  MOVW	R0, #3000
0x2108	0xF7FFFEC8  BL	_my_Delay_ms+0
;uart.c, 220 :: 		if(checkReceiveTxt()==0) return 0;
0x210C	0xF7FFFAF4  BL	_checkReceiveTxt+0
0x2110	0xB908    CBNZ	R0, L_sendData57
0x2112	0x2000    MOVS	R0, #0
0x2114	0xE083    B	L_end_sendData
L_sendData57:
;uart.c, 222 :: 		USART2_Send_Text("AT+SAPBR=3,1,\"APN\",\"internet\"\r\n"); // telenor
0x2116	0x4C49    LDR	R4, [PC, #292]
0x2118	0x4620    MOV	R0, R4
0x211A	0xF7FFFDF3  BL	_USART2_Send_Text+0
;uart.c, 224 :: 		my_Delay_ms(_TIMER_UART);
0x211E	0xF64030B8  MOVW	R0, #3000
0x2122	0xF7FFFEBB  BL	_my_Delay_ms+0
;uart.c, 225 :: 		if(checkReceiveTxt()==0) return 0;
0x2126	0xF7FFFAE7  BL	_checkReceiveTxt+0
0x212A	0xB908    CBNZ	R0, L_sendData58
0x212C	0x2000    MOVS	R0, #0
0x212E	0xE076    B	L_end_sendData
L_sendData58:
;uart.c, 227 :: 		USART2_Send_Text("AT+SAPBR=3,1,\"PWD\",\"gprs\"\r\n"); // telenor
0x2130	0x4C43    LDR	R4, [PC, #268]
0x2132	0x4620    MOV	R0, R4
0x2134	0xF7FFFDE6  BL	_USART2_Send_Text+0
;uart.c, 229 :: 		my_Delay_ms(_TIMER_UART);
0x2138	0xF64030B8  MOVW	R0, #3000
0x213C	0xF7FFFEAE  BL	_my_Delay_ms+0
;uart.c, 230 :: 		if(checkReceiveTxt()==0) return 0;
0x2140	0xF7FFFADA  BL	_checkReceiveTxt+0
0x2144	0xB908    CBNZ	R0, L_sendData59
0x2146	0x2000    MOVS	R0, #0
0x2148	0xE069    B	L_end_sendData
L_sendData59:
;uart.c, 232 :: 		USART2_Send_Text("AT+SAPBR=1,1\r\n");
0x214A	0x4C3E    LDR	R4, [PC, #248]
0x214C	0x4620    MOV	R0, R4
0x214E	0xF7FFFDD9  BL	_USART2_Send_Text+0
;uart.c, 233 :: 		my_Delay_ms(3*_TIMER_UART);
0x2152	0xF2423028  MOVW	R0, #9000
0x2156	0xF7FFFEA1  BL	_my_Delay_ms+0
;uart.c, 234 :: 		if(checkReceiveTxt()==0) return 0;
0x215A	0xF7FFFACD  BL	_checkReceiveTxt+0
0x215E	0xB908    CBNZ	R0, L_sendData60
0x2160	0x2000    MOVS	R0, #0
0x2162	0xE05C    B	L_end_sendData
L_sendData60:
;uart.c, 236 :: 		USART2_Send_Text("AT+HTTPTERM\r\n");
0x2164	0x4C38    LDR	R4, [PC, #224]
0x2166	0x4620    MOV	R0, R4
0x2168	0xF7FFFDCC  BL	_USART2_Send_Text+0
;uart.c, 237 :: 		my_Delay_ms(_TIMER_UART);
0x216C	0xF64030B8  MOVW	R0, #3000
0x2170	0xF7FFFE94  BL	_my_Delay_ms+0
;uart.c, 238 :: 		getReceiveTxt();
0x2174	0xF7FFFB9A  BL	_getReceiveTxt+0
;uart.c, 240 :: 		USART2_Send_Text("AT+HTTPINIT\r\n");
0x2178	0x4C34    LDR	R4, [PC, #208]
0x217A	0x4620    MOV	R0, R4
0x217C	0xF7FFFDC2  BL	_USART2_Send_Text+0
;uart.c, 241 :: 		my_Delay_ms(_TIMER_UART);
0x2180	0xF64030B8  MOVW	R0, #3000
0x2184	0xF7FFFE8A  BL	_my_Delay_ms+0
;uart.c, 242 :: 		if(checkReceiveTxt()==0) return 0;
0x2188	0xF7FFFAB6  BL	_checkReceiveTxt+0
0x218C	0xB908    CBNZ	R0, L_sendData61
0x218E	0x2000    MOVS	R0, #0
0x2190	0xE045    B	L_end_sendData
L_sendData61:
;uart.c, 244 :: 		USART2_Send_Text("AT+HTTPPARA=\"CID\",1\r\n");
0x2192	0x4C2F    LDR	R4, [PC, #188]
0x2194	0x4620    MOV	R0, R4
0x2196	0xF7FFFDB5  BL	_USART2_Send_Text+0
;uart.c, 245 :: 		my_Delay_ms(_TIMER_UART);
0x219A	0xF64030B8  MOVW	R0, #3000
0x219E	0xF7FFFE7D  BL	_my_Delay_ms+0
;uart.c, 246 :: 		if(checkReceiveTxt()==0) return 0;
0x21A2	0xF7FFFAA9  BL	_checkReceiveTxt+0
0x21A6	0xB908    CBNZ	R0, L_sendData62
0x21A8	0x2000    MOVS	R0, #0
0x21AA	0xE038    B	L_end_sendData
L_sendData62:
;uart.c, 248 :: 		USART2_Send_Text(url);
0x21AC	0xAC0C    ADD	R4, SP, #48
0x21AE	0x4620    MOV	R0, R4
0x21B0	0xF7FFFDA8  BL	_USART2_Send_Text+0
;uart.c, 249 :: 		my_Delay_ms(_TIMER_UART);
0x21B4	0xF64030B8  MOVW	R0, #3000
0x21B8	0xF7FFFE70  BL	_my_Delay_ms+0
;uart.c, 250 :: 		if(checkReceiveTxt()==0) return 0;
0x21BC	0xF7FFFA9C  BL	_checkReceiveTxt+0
0x21C0	0xB908    CBNZ	R0, L_sendData63
0x21C2	0x2000    MOVS	R0, #0
0x21C4	0xE02B    B	L_end_sendData
L_sendData63:
;uart.c, 252 :: 		USART2_Send_Text("AT+HTTPACTION=1\r\n");
0x21C6	0x4C23    LDR	R4, [PC, #140]
0x21C8	0x4620    MOV	R0, R4
0x21CA	0xF7FFFD9B  BL	_USART2_Send_Text+0
;uart.c, 253 :: 		my_Delay_ms(_TIMER_UART);
0x21CE	0xF64030B8  MOVW	R0, #3000
0x21D2	0xF7FFFE63  BL	_my_Delay_ms+0
;uart.c, 254 :: 		if(checkReceiveTxt()==0) return 0;
0x21D6	0xF7FFFA8F  BL	_checkReceiveTxt+0
0x21DA	0xB908    CBNZ	R0, L_sendData64
0x21DC	0x2000    MOVS	R0, #0
0x21DE	0xE01E    B	L_end_sendData
L_sendData64:
;uart.c, 256 :: 		USART2_Send_Text("AT+CIPSHUT\r\n");
0x21E0	0x4C1D    LDR	R4, [PC, #116]
0x21E2	0x4620    MOV	R0, R4
0x21E4	0xF7FFFD8E  BL	_USART2_Send_Text+0
;uart.c, 257 :: 		my_Delay_ms(_TIMER_UART);
0x21E8	0xF64030B8  MOVW	R0, #3000
0x21EC	0xF7FFFE56  BL	_my_Delay_ms+0
;uart.c, 258 :: 		getReceiveTxt();
0x21F0	0xF7FFFB5C  BL	_getReceiveTxt+0
;uart.c, 260 :: 		USART2_Send_Text("AT+SAPBR=0,1\r\n");
0x21F4	0x4C19    LDR	R4, [PC, #100]
0x21F6	0x4620    MOV	R0, R4
0x21F8	0xF7FFFD84  BL	_USART2_Send_Text+0
;uart.c, 261 :: 		my_Delay_ms(_TIMER_UART);
0x21FC	0xF64030B8  MOVW	R0, #3000
0x2200	0xF7FFFE4C  BL	_my_Delay_ms+0
;uart.c, 262 :: 		getReceiveTxt();
0x2204	0xF7FFFB52  BL	_getReceiveTxt+0
;uart.c, 264 :: 		USART2_Send_Text("AT+CGATT=0\r\n");
0x2208	0x4C15    LDR	R4, [PC, #84]
0x220A	0x4620    MOV	R0, R4
0x220C	0xF7FFFD7A  BL	_USART2_Send_Text+0
;uart.c, 265 :: 		my_Delay_ms(3*_TIMER_UART);
0x2210	0xF2423028  MOVW	R0, #9000
0x2214	0xF7FFFE42  BL	_my_Delay_ms+0
;uart.c, 266 :: 		getReceiveTxt();
0x2218	0xF7FFFB48  BL	_getReceiveTxt+0
;uart.c, 268 :: 		return 1;
0x221C	0x2001    MOVS	R0, #1
;uart.c, 269 :: 		}
L_end_sendData:
0x221E	0xF8DDE000  LDR	LR, [SP, #0]
0x2222	0xB032    ADD	SP, SP, #200
0x2224	0x4770    BX	LR
0x2226	0xBF00    NOP
0x2228	0x2EE90000  	?ICSsendData_url_L0+0
0x222C	0x001B2000  	?lstr4_uart+0
0x2230	0x00262000  	?lstr5_uart+0
0x2234	0x00332000  	?lstr6_uart+0
0x2238	0x00402000  	?lstr7_uart+0
0x223C	0x00602000  	?lstr8_uart+0
0x2240	0x00802000  	?lstr9_uart+0
0x2244	0x009C2000  	?lstr10_uart+0
0x2248	0x00AB2000  	?lstr11_uart+0
0x224C	0x00B92000  	?lstr12_uart+0
0x2250	0x00C72000  	?lstr13_uart+0
0x2254	0x00DD2000  	?lstr14_uart+0
0x2258	0x00EF2000  	?lstr15_uart+0
0x225C	0x00FC2000  	?lstr16_uart+0
0x2260	0x010B2000  	?lstr17_uart+0
; end of _sendData
_strlen:
;__Lib_CString.c, 143 :: 		
; s start address is: 0 (R0)
0x1A88	0xB081    SUB	SP, SP, #4
0x1A8A	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__Lib_CString.c, 146 :: 		
; cp start address is: 0 (R0)
0x1A8C	0x4608    MOV	R0, R1
; s end address is: 4 (R1)
; cp end address is: 0 (R0)
0x1A8E	0x460B    MOV	R3, R1
;__Lib_CString.c, 147 :: 		
L_strlen36:
; cp start address is: 0 (R0)
; s start address is: 12 (R3)
0x1A90	0x4602    MOV	R2, R0
0x1A92	0x1C40    ADDS	R0, R0, #1
0x1A94	0x7811    LDRB	R1, [R2, #0]
0x1A96	0xB101    CBZ	R1, L_strlen37
;__Lib_CString.c, 148 :: 		
0x1A98	0xE7FA    B	L_strlen36
L_strlen37:
;__Lib_CString.c, 149 :: 		
0x1A9A	0x1AC1    SUB	R1, R0, R3
; s end address is: 12 (R3)
; cp end address is: 0 (R0)
0x1A9C	0x1E49    SUBS	R1, R1, #1
0x1A9E	0xB208    SXTH	R0, R1
;__Lib_CString.c, 150 :: 		
L_end_strlen:
0x1AA0	0xB001    ADD	SP, SP, #4
0x1AA2	0x4770    BX	LR
; end of _strlen
_USART2_Send_Text:
;uart.c, 95 :: 		void USART2_Send_Text(uint8_t* input)
; input start address is: 0 (R0)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
0x1D04	0x4603    MOV	R3, R0
; input end address is: 0 (R0)
;uart.c, 99 :: 		while(transmitUART.flag == 1);  //BusyWait for transmit register to get empty
L_USART2_Send_Text12:
; input start address is: 12 (R3)
0x1D06	0x491E    LDR	R1, [PC, #120]
0x1D08	0x7809    LDRB	R1, [R1, #0]
0x1D0A	0x2901    CMP	R1, #1
0x1D0C	0xD100    BNE	L_USART2_Send_Text13
0x1D0E	0xE7FA    B	L_USART2_Send_Text12
L_USART2_Send_Text13:
;uart.c, 101 :: 		transmitUART.byteCount = 0;
0x1D10	0x2200    MOVS	R2, #0
0x1D12	0x491C    LDR	R1, [PC, #112]
0x1D14	0x800A    STRH	R2, [R1, #0]
;uart.c, 102 :: 		input_Char = *input;
0x1D16	0x7818    LDRB	R0, [R3, #0]
; input_Char start address is: 0 (R0)
; input end address is: 12 (R3)
; input_Char end address is: 0 (R0)
;uart.c, 103 :: 		while((input_Char>=0x20 && input_Char<=0x7E) || input_Char==0x09 || input_Char==0x0A || input_Char==0x0D)
L_USART2_Send_Text14:
; input_Char start address is: 0 (R0)
; input start address is: 12 (R3)
0x1D18	0x2820    CMP	R0, #32
0x1D1A	0xD302    BCC	L__USART2_Send_Text68
0x1D1C	0x287E    CMP	R0, #126
0x1D1E	0xD800    BHI	L__USART2_Send_Text67
0x1D20	0xE006    B	L__USART2_Send_Text65
L__USART2_Send_Text68:
L__USART2_Send_Text67:
0x1D22	0x2809    CMP	R0, #9
0x1D24	0xD004    BEQ	L__USART2_Send_Text71
0x1D26	0x280A    CMP	R0, #10
0x1D28	0xD002    BEQ	L__USART2_Send_Text70
0x1D2A	0x280D    CMP	R0, #13
0x1D2C	0xD000    BEQ	L__USART2_Send_Text69
; input end address is: 12 (R3)
; input_Char end address is: 0 (R0)
0x1D2E	0xE00E    B	L_USART2_Send_Text15
L__USART2_Send_Text65:
; input_Char start address is: 0 (R0)
; input start address is: 12 (R3)
L__USART2_Send_Text71:
L__USART2_Send_Text70:
L__USART2_Send_Text69:
;uart.c, 105 :: 		transmitUART.buffer[transmitUART.byteCount] = input_Char;
0x1D30	0x4914    LDR	R1, [PC, #80]
0x1D32	0x880A    LDRH	R2, [R1, #0]
0x1D34	0x4914    LDR	R1, [PC, #80]
0x1D36	0x1889    ADDS	R1, R1, R2
0x1D38	0x7008    STRB	R0, [R1, #0]
; input_Char end address is: 0 (R0)
;uart.c, 106 :: 		++input;
0x1D3A	0x1C59    ADDS	R1, R3, #1
0x1D3C	0x460B    MOV	R3, R1
;uart.c, 107 :: 		input_Char = *input;
0x1D3E	0x7809    LDRB	R1, [R1, #0]
; input_Char start address is: 0 (R0)
0x1D40	0xB2C8    UXTB	R0, R1
;uart.c, 108 :: 		++transmitUART.byteCount;
0x1D42	0x4910    LDR	R1, [PC, #64]
0x1D44	0x8809    LDRH	R1, [R1, #0]
0x1D46	0x1C4A    ADDS	R2, R1, #1
0x1D48	0x490E    LDR	R1, [PC, #56]
0x1D4A	0x800A    STRH	R2, [R1, #0]
;uart.c, 109 :: 		}
; input end address is: 12 (R3)
; input_Char end address is: 0 (R0)
0x1D4C	0xE7E4    B	L_USART2_Send_Text14
L_USART2_Send_Text15:
;uart.c, 111 :: 		transmitUART.bufferPointer = 0;
0x1D4E	0x2200    MOVS	R2, #0
0x1D50	0x490E    LDR	R1, [PC, #56]
0x1D52	0x800A    STRH	R2, [R1, #0]
;uart.c, 113 :: 		transmitUART.flag = 1;
0x1D54	0x2201    MOVS	R2, #1
0x1D56	0x490A    LDR	R1, [PC, #40]
0x1D58	0x700A    STRB	R2, [R1, #0]
;uart.c, 114 :: 		USART2_DR = transmitUART.buffer[transmitUART.bufferPointer++];
0x1D5A	0x490C    LDR	R1, [PC, #48]
0x1D5C	0x880A    LDRH	R2, [R1, #0]
0x1D5E	0x490A    LDR	R1, [PC, #40]
0x1D60	0x1889    ADDS	R1, R1, R2
0x1D62	0x780A    LDRB	R2, [R1, #0]
0x1D64	0x490A    LDR	R1, [PC, #40]
0x1D66	0x600A    STR	R2, [R1, #0]
0x1D68	0x4908    LDR	R1, [PC, #32]
0x1D6A	0x8809    LDRH	R1, [R1, #0]
0x1D6C	0x1C4A    ADDS	R2, R1, #1
0x1D6E	0x4907    LDR	R1, [PC, #28]
0x1D70	0x800A    STRH	R2, [R1, #0]
;uart.c, 115 :: 		USART2_CR1 |= _USART_TXEIE;
0x1D72	0x4908    LDR	R1, [PC, #32]
0x1D74	0x6809    LDR	R1, [R1, #0]
0x1D76	0xF0410280  ORR	R2, R1, #128
0x1D7A	0x4906    LDR	R1, [PC, #24]
0x1D7C	0x600A    STR	R2, [R1, #0]
;uart.c, 116 :: 		}
L_end_USART2_Send_Text:
0x1D7E	0x4770    BX	LR
0x1D80	0x05482000  	_transmitUART+0
0x1D84	0x054A2000  	_transmitUART+2
0x1D88	0x054E2000  	_transmitUART+6
0x1D8C	0x054C2000  	_transmitUART+4
0x1D90	0x44044000  	USART2_DR+0
0x1D94	0x440C4000  	USART2_CR1+0
; end of _USART2_Send_Text
_checkReceiveTxt:
;uart.c, 152 :: 		uint8_t checkReceiveTxt()
0x16F8	0xB081    SUB	SP, SP, #4
0x16FA	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 154 :: 		uint8_t ok=0;
; ok start address is: 16 (R4)
0x16FE	0x2400    MOVS	R4, #0
;uart.c, 156 :: 		USART2_Receive();
0x1700	0xF7FFFB04  BL	_USART2_Receive+0
; ok end address is: 16 (R4)
;uart.c, 157 :: 		while(receivedFlag==1)
L_checkReceiveTxt30:
; ok start address is: 16 (R4)
0x1704	0x4810    LDR	R0, [PC, #64]
0x1706	0x7800    LDRB	R0, [R0, #0]
0x1708	0x2801    CMP	R0, #1
0x170A	0xD118    BNE	L_checkReceiveTxt31
;uart.c, 159 :: 		for(current=1; receivedTxt[current]!=0; current++)
; current start address is: 8 (R2)
0x170C	0x2201    MOVS	R2, #1
; ok end address is: 16 (R4)
; current end address is: 8 (R2)
L_checkReceiveTxt32:
; current start address is: 8 (R2)
; ok start address is: 16 (R4)
0x170E	0x480F    LDR	R0, [PC, #60]
0x1710	0x1880    ADDS	R0, R0, R2
0x1712	0x7800    LDRB	R0, [R0, #0]
0x1714	0xB180    CBZ	R0, L_checkReceiveTxt33
;uart.c, 160 :: 		if((receivedTxt[current-1]=='O')&& (receivedTxt[current]=='K'))
0x1716	0x1E51    SUBS	R1, R2, #1
0x1718	0x480C    LDR	R0, [PC, #48]
0x171A	0x1840    ADDS	R0, R0, R1
0x171C	0x7800    LDRB	R0, [R0, #0]
0x171E	0x284F    CMP	R0, #79
0x1720	0xD107    BNE	L__checkReceiveTxt75
0x1722	0x480A    LDR	R0, [PC, #40]
0x1724	0x1880    ADDS	R0, R0, R2
0x1726	0x7800    LDRB	R0, [R0, #0]
0x1728	0x284B    CMP	R0, #75
0x172A	0xD103    BNE	L__checkReceiveTxt76
; ok end address is: 16 (R4)
L__checkReceiveTxt72:
;uart.c, 161 :: 		ok=1;
; ok start address is: 0 (R0)
0x172C	0x2001    MOVS	R0, #1
; ok end address is: 0 (R0)
0x172E	0xB2C4    UXTB	R4, R0
;uart.c, 160 :: 		if((receivedTxt[current-1]=='O')&& (receivedTxt[current]=='K'))
0x1730	0xE7FF    B	L__checkReceiveTxt74
L__checkReceiveTxt75:
L__checkReceiveTxt74:
; ok start address is: 16 (R4)
; ok end address is: 16 (R4)
0x1732	0xE7FF    B	L__checkReceiveTxt73
L__checkReceiveTxt76:
L__checkReceiveTxt73:
;uart.c, 159 :: 		for(current=1; receivedTxt[current]!=0; current++)
; ok start address is: 16 (R4)
0x1734	0x1C52    ADDS	R2, R2, #1
;uart.c, 161 :: 		ok=1;
; current end address is: 8 (R2)
0x1736	0xE7EA    B	L_checkReceiveTxt32
L_checkReceiveTxt33:
;uart.c, 162 :: 		USART2_Receive();
0x1738	0xF7FFFAE8  BL	_USART2_Receive+0
;uart.c, 163 :: 		}
0x173C	0xE7E2    B	L_checkReceiveTxt30
L_checkReceiveTxt31:
;uart.c, 164 :: 		return ok;
0x173E	0xB2E0    UXTB	R0, R4
; ok end address is: 16 (R4)
;uart.c, 165 :: 		}
L_end_checkReceiveTxt:
0x1740	0xF8DDE000  LDR	LR, [SP, #0]
0x1744	0xB001    ADD	SP, SP, #4
0x1746	0x4770    BX	LR
0x1748	0x01182000  	_receivedFlag+0
0x174C	0x09692000  	_receivedTxt+0
; end of _checkReceiveTxt
_USART2_Receive:
;uart.c, 71 :: 		void USART2_Receive()
;uart.c, 74 :: 		if(receiveUART.msgCount>0)
0x0D0C	0x4820    LDR	R0, [PC, #128]
0x0D0E	0x8800    LDRH	R0, [R0, #0]
0x0D10	0x2800    CMP	R0, #0
0x0D12	0xD938    BLS	L_USART2_Receive6
;uart.c, 76 :: 		current=0;
; current start address is: 12 (R3)
0x0D14	0x2300    MOVS	R3, #0
;uart.c, 77 :: 		receiveUART.msgCount--;
0x0D16	0x481E    LDR	R0, [PC, #120]
0x0D18	0x8800    LDRH	R0, [R0, #0]
0x0D1A	0x1E41    SUBS	R1, R0, #1
0x0D1C	0x481C    LDR	R0, [PC, #112]
0x0D1E	0x8001    STRH	R1, [R0, #0]
; current end address is: 12 (R3)
;uart.c, 78 :: 		while(receiveUART.buffer[receiveUART.bufferPointerRead]!=0x0A)
L_USART2_Receive7:
; current start address is: 12 (R3)
0x0D20	0x481C    LDR	R0, [PC, #112]
0x0D22	0x8801    LDRH	R1, [R0, #0]
0x0D24	0x481C    LDR	R0, [PC, #112]
0x0D26	0x1840    ADDS	R0, R0, R1
0x0D28	0x7800    LDRB	R0, [R0, #0]
0x0D2A	0x280A    CMP	R0, #10
0x0D2C	0xD016    BEQ	L_USART2_Receive8
;uart.c, 80 :: 		receivedTxt[current]=receiveUART.buffer[receiveUART.bufferPointerRead++];
0x0D2E	0x481B    LDR	R0, [PC, #108]
0x0D30	0x18C2    ADDS	R2, R0, R3
0x0D32	0x4818    LDR	R0, [PC, #96]
0x0D34	0x8801    LDRH	R1, [R0, #0]
0x0D36	0x4818    LDR	R0, [PC, #96]
0x0D38	0x1840    ADDS	R0, R0, R1
0x0D3A	0x7800    LDRB	R0, [R0, #0]
0x0D3C	0x7010    STRB	R0, [R2, #0]
0x0D3E	0x4815    LDR	R0, [PC, #84]
0x0D40	0x8800    LDRH	R0, [R0, #0]
0x0D42	0x1C41    ADDS	R1, R0, #1
0x0D44	0x4813    LDR	R0, [PC, #76]
0x0D46	0x8001    STRH	R1, [R0, #0]
;uart.c, 81 :: 		current++;
0x0D48	0x1C5B    ADDS	R3, R3, #1
;uart.c, 82 :: 		if(receiveUART.bufferPointerRead==1000)
0x0D4A	0x4812    LDR	R0, [PC, #72]
0x0D4C	0x8800    LDRH	R0, [R0, #0]
0x0D4E	0xF5B07F7A  CMP	R0, #1000
0x0D52	0xD102    BNE	L_USART2_Receive9
;uart.c, 83 :: 		receiveUART.bufferPointerRead=0;
0x0D54	0x2100    MOVS	R1, #0
0x0D56	0x480F    LDR	R0, [PC, #60]
0x0D58	0x8001    STRH	R1, [R0, #0]
L_USART2_Receive9:
;uart.c, 84 :: 		}
0x0D5A	0xE7E1    B	L_USART2_Receive7
L_USART2_Receive8:
;uart.c, 85 :: 		receiveUART.bufferPointerRead++;
0x0D5C	0x480D    LDR	R0, [PC, #52]
0x0D5E	0x8800    LDRH	R0, [R0, #0]
0x0D60	0x1C41    ADDS	R1, R0, #1
0x0D62	0x480C    LDR	R0, [PC, #48]
0x0D64	0x8001    STRH	R1, [R0, #0]
;uart.c, 86 :: 		if(receiveUART.bufferPointerRead==1000)
0x0D66	0x480B    LDR	R0, [PC, #44]
0x0D68	0x8800    LDRH	R0, [R0, #0]
0x0D6A	0xF5B07F7A  CMP	R0, #1000
0x0D6E	0xD102    BNE	L_USART2_Receive10
;uart.c, 87 :: 		receiveUART.bufferPointerRead=0;
0x0D70	0x2100    MOVS	R1, #0
0x0D72	0x4808    LDR	R0, [PC, #32]
0x0D74	0x8001    STRH	R1, [R0, #0]
L_USART2_Receive10:
;uart.c, 88 :: 		receivedTxt[current]=0;
0x0D76	0x4809    LDR	R0, [PC, #36]
0x0D78	0x18C1    ADDS	R1, R0, R3
; current end address is: 12 (R3)
0x0D7A	0x2000    MOVS	R0, #0
0x0D7C	0x7008    STRB	R0, [R1, #0]
;uart.c, 89 :: 		receivedFlag=1;
0x0D7E	0x2101    MOVS	R1, #1
0x0D80	0x4807    LDR	R0, [PC, #28]
0x0D82	0x7001    STRB	R1, [R0, #0]
;uart.c, 90 :: 		}
0x0D84	0xE002    B	L_USART2_Receive11
L_USART2_Receive6:
;uart.c, 92 :: 		receivedFlag=0;
0x0D86	0x2100    MOVS	R1, #0
0x0D88	0x4805    LDR	R0, [PC, #20]
0x0D8A	0x7001    STRB	R1, [R0, #0]
L_USART2_Receive11:
;uart.c, 93 :: 		}
L_end_USART2_Receive:
0x0D8C	0x4770    BX	LR
0x0D8E	0xBF00    NOP
0x0D90	0x015A2000  	_receiveUART+2
0x0D94	0x015E2000  	_receiveUART+6
0x0D98	0x01602000  	_receiveUART+8
0x0D9C	0x09692000  	_receivedTxt+0
0x0DA0	0x01182000  	_receivedFlag+0
; end of _USART2_Receive
_getReceiveTxt:
;uart.c, 145 :: 		uint8_t getReceiveTxt()
0x18AC	0xB081    SUB	SP, SP, #4
0x18AE	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 147 :: 		USART2_Receive();
0x18B2	0xF7FFFA2B  BL	_USART2_Receive+0
;uart.c, 148 :: 		while(receivedFlag==1)
L_getReceiveTxt28:
0x18B6	0x4805    LDR	R0, [PC, #20]
0x18B8	0x7800    LDRB	R0, [R0, #0]
0x18BA	0x2801    CMP	R0, #1
0x18BC	0xD102    BNE	L_getReceiveTxt29
;uart.c, 149 :: 		USART2_Receive();
0x18BE	0xF7FFFA25  BL	_USART2_Receive+0
0x18C2	0xE7F8    B	L_getReceiveTxt28
L_getReceiveTxt29:
;uart.c, 150 :: 		}
L_end_getReceiveTxt:
0x18C4	0xF8DDE000  LDR	LR, [SP, #0]
0x18C8	0xB001    ADD	SP, SP, #4
0x18CA	0x4770    BX	LR
0x18CC	0x01182000  	_receivedFlag+0
; end of _getReceiveTxt
_interruptUART:
;uart.c, 37 :: 		void interruptUART() iv IVT_INT_USART2 ics ICS_AUTO
;uart.c, 40 :: 		usartStatusRegister = USART2_SR;
0x2AA0	0x4827    LDR	R0, [PC, #156]
; usartStatusRegister start address is: 8 (R2)
0x2AA2	0x6802    LDR	R2, [R0, #0]
;uart.c, 42 :: 		if(usartStatusRegister & _USART_SR_RXNE)
0x2AA4	0xF0020020  AND	R0, R2, #32
0x2AA8	0x2800    CMP	R0, #0
0x2AAA	0xD020    BEQ	L_interruptUART0
;uart.c, 44 :: 		receiveUART.flag = 1;
0x2AAC	0x2101    MOVS	R1, #1
0x2AAE	0x4825    LDR	R0, [PC, #148]
0x2AB0	0x7001    STRB	R1, [R0, #0]
;uart.c, 45 :: 		usartDataRegister = USART2_DR;
0x2AB2	0x4825    LDR	R0, [PC, #148]
; usartDataRegister start address is: 12 (R3)
0x2AB4	0x6803    LDR	R3, [R0, #0]
;uart.c, 46 :: 		receiveUART.buffer[receiveUART.bufferPointerWrite] = usartDataRegister;
0x2AB6	0x4825    LDR	R0, [PC, #148]
0x2AB8	0x8801    LDRH	R1, [R0, #0]
0x2ABA	0x4825    LDR	R0, [PC, #148]
0x2ABC	0x1840    ADDS	R0, R0, R1
0x2ABE	0x7003    STRB	R3, [R0, #0]
;uart.c, 47 :: 		receiveUART.bufferPointerWrite++;
0x2AC0	0x4822    LDR	R0, [PC, #136]
0x2AC2	0x8800    LDRH	R0, [R0, #0]
0x2AC4	0x1C41    ADDS	R1, R0, #1
0x2AC6	0x4821    LDR	R0, [PC, #132]
0x2AC8	0x8001    STRH	R1, [R0, #0]
;uart.c, 48 :: 		if(receiveUART.bufferPointerWrite==1000)
0x2ACA	0x4820    LDR	R0, [PC, #128]
0x2ACC	0x8800    LDRH	R0, [R0, #0]
0x2ACE	0xF5B07F7A  CMP	R0, #1000
0x2AD2	0xD102    BNE	L_interruptUART1
;uart.c, 49 :: 		receiveUART.bufferPointerWrite=0;
0x2AD4	0x2100    MOVS	R1, #0
0x2AD6	0x481D    LDR	R0, [PC, #116]
0x2AD8	0x8001    STRH	R1, [R0, #0]
L_interruptUART1:
;uart.c, 50 :: 		if(usartDataRegister==0x0A)
0x2ADA	0x2B0A    CMP	R3, #10
0x2ADC	0xD107    BNE	L_interruptUART2
; usartDataRegister end address is: 12 (R3)
;uart.c, 52 :: 		receiveUART.msgCount++;
0x2ADE	0x481D    LDR	R0, [PC, #116]
0x2AE0	0x8800    LDRH	R0, [R0, #0]
0x2AE2	0x1C41    ADDS	R1, R0, #1
0x2AE4	0x481B    LDR	R0, [PC, #108]
0x2AE6	0x8001    STRH	R1, [R0, #0]
;uart.c, 53 :: 		receiveUART.flag = 0;
0x2AE8	0x2100    MOVS	R1, #0
0x2AEA	0x4816    LDR	R0, [PC, #88]
0x2AEC	0x7001    STRB	R1, [R0, #0]
;uart.c, 54 :: 		}
L_interruptUART2:
;uart.c, 55 :: 		}
L_interruptUART0:
;uart.c, 57 :: 		if(usartStatusRegister & _USART_SR_TXE)
0x2AEE	0xF0020080  AND	R0, R2, #128
; usartStatusRegister end address is: 8 (R2)
0x2AF2	0x2800    CMP	R0, #0
0x2AF4	0xD022    BEQ	L_interruptUART3
;uart.c, 59 :: 		if(transmitUART.bufferPointer < transmitUART.byteCount)
0x2AF6	0x4818    LDR	R0, [PC, #96]
0x2AF8	0x8801    LDRH	R1, [R0, #0]
0x2AFA	0x4818    LDR	R0, [PC, #96]
0x2AFC	0x8800    LDRH	R0, [R0, #0]
0x2AFE	0x4288    CMP	R0, R1
0x2B00	0xD20C    BCS	L_interruptUART4
;uart.c, 60 :: 		USART2_DR = transmitUART.buffer[transmitUART.bufferPointer++];
0x2B02	0x4816    LDR	R0, [PC, #88]
0x2B04	0x8801    LDRH	R1, [R0, #0]
0x2B06	0x4816    LDR	R0, [PC, #88]
0x2B08	0x1840    ADDS	R0, R0, R1
0x2B0A	0x7801    LDRB	R1, [R0, #0]
0x2B0C	0x480E    LDR	R0, [PC, #56]
0x2B0E	0x6001    STR	R1, [R0, #0]
0x2B10	0x4812    LDR	R0, [PC, #72]
0x2B12	0x8800    LDRH	R0, [R0, #0]
0x2B14	0x1C41    ADDS	R1, R0, #1
0x2B16	0x4811    LDR	R0, [PC, #68]
0x2B18	0x8001    STRH	R1, [R0, #0]
0x2B1A	0xE00F    B	L_interruptUART5
L_interruptUART4:
;uart.c, 63 :: 		USART2_CR1 &= ~(_USART_TXEIE);
0x2B1C	0x4811    LDR	R0, [PC, #68]
0x2B1E	0x6801    LDR	R1, [R0, #0]
0x2B20	0xF06F0080  MVN	R0, #128
0x2B24	0x4001    ANDS	R1, R0
0x2B26	0x480F    LDR	R0, [PC, #60]
0x2B28	0x6001    STR	R1, [R0, #0]
;uart.c, 64 :: 		transmitUART.byteCount=0;
0x2B2A	0x2100    MOVS	R1, #0
0x2B2C	0x480A    LDR	R0, [PC, #40]
0x2B2E	0x8001    STRH	R1, [R0, #0]
;uart.c, 65 :: 		transmitUART.bufferPointer = 0;
0x2B30	0x2100    MOVS	R1, #0
0x2B32	0x480A    LDR	R0, [PC, #40]
0x2B34	0x8001    STRH	R1, [R0, #0]
;uart.c, 66 :: 		transmitUART.flag = 0;
0x2B36	0x2100    MOVS	R1, #0
0x2B38	0x480B    LDR	R0, [PC, #44]
0x2B3A	0x7001    STRB	R1, [R0, #0]
;uart.c, 67 :: 		}
L_interruptUART5:
;uart.c, 68 :: 		}
L_interruptUART3:
;uart.c, 69 :: 		}
L_end_interruptUART:
0x2B3C	0x4770    BX	LR
0x2B3E	0xBF00    NOP
0x2B40	0x44004000  	USART2_SR+0
0x2B44	0x01582000  	_receiveUART+0
0x2B48	0x44044000  	USART2_DR+0
0x2B4C	0x015C2000  	_receiveUART+4
0x2B50	0x01602000  	_receiveUART+8
0x2B54	0x015A2000  	_receiveUART+2
0x2B58	0x054A2000  	_transmitUART+2
0x2B5C	0x054C2000  	_transmitUART+4
0x2B60	0x054E2000  	_transmitUART+6
0x2B64	0x440C4000  	USART2_CR1+0
0x2B68	0x05482000  	_transmitUART+0
; end of _interruptUART
;__Lib_System_4XX.c,0 :: ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
0x2DC6	0x00000000 ;?ICS__Lib_System_4XX_APBAHBPrescTable+0
0x2DCA	0x04030201 ;?ICS__Lib_System_4XX_APBAHBPrescTable+4
0x2DCE	0x04030201 ;?ICS__Lib_System_4XX_APBAHBPrescTable+8
0x2DD2	0x09080706 ;?ICS__Lib_System_4XX_APBAHBPrescTable+12
; end of ?ICS__Lib_System_4XX_APBAHBPrescTable
;lcd.c,0 :: ?ICS?lstr1_lcd [6]
0x2DD6	0x706D6554 ;?ICS?lstr1_lcd+0
0x2DDA	0x003A ;?ICS?lstr1_lcd+4
; end of ?ICS?lstr1_lcd
;,0 :: _initBlock_2 [16]
; Containing: ?ICS?lstr2_lcd [5]
;             ?ICS?lstr4_uart [11]
0x2DDC	0x3A6D7548 ;_initBlock_2+0 : ?ICS?lstr2_lcd at 0x2DDC
0x2DE0	0x2B544100 ;_initBlock_2+4 : ?ICS?lstr4_uart at 0x2DE1
0x2DE4	0x4E495043 ;_initBlock_2+8
0x2DE8	0x000A0D3F ;_initBlock_2+12
; end of _initBlock_2
;,0 :: _initBlock_3 [26]
; Containing: ?ICS?lstr5_uart [13]
;             ?ICS?lstr6_uart [13]
0x2DEC	0x432B5441 ;_initBlock_3+0 : ?ICS?lstr5_uart at 0x2DEC
0x2DF0	0x48535049 ;_initBlock_3+4
0x2DF4	0x0A0D5455 ;_initBlock_3+8
0x2DF8	0x2B544100 ;_initBlock_3+12 : ?ICS?lstr6_uart at 0x2DF9
0x2DFC	0x54414743 ;_initBlock_3+16
0x2E00	0x0D313D54 ;_initBlock_3+20
0x2E04	0x000A ;_initBlock_3+24
; end of _initBlock_3
;uart.c,0 :: ?ICS?lstr7_uart [32]
0x2E06	0x532B5441 ;?ICS?lstr7_uart+0
0x2E0A	0x52425041 ;?ICS?lstr7_uart+4
0x2E0E	0x312C333D ;?ICS?lstr7_uart+8
0x2E12	0x4F43222C ;?ICS?lstr7_uart+12
0x2E16	0x5059544E ;?ICS?lstr7_uart+16
0x2E1A	0x222C2245 ;?ICS?lstr7_uart+20
0x2E1E	0x53525047 ;?ICS?lstr7_uart+24
0x2E22	0x000A0D22 ;?ICS?lstr7_uart+28
; end of ?ICS?lstr7_uart
;uart.c,0 :: ?ICS?lstr8_uart [32]
0x2E26	0x532B5441 ;?ICS?lstr8_uart+0
0x2E2A	0x52425041 ;?ICS?lstr8_uart+4
0x2E2E	0x312C333D ;?ICS?lstr8_uart+8
0x2E32	0x5041222C ;?ICS?lstr8_uart+12
0x2E36	0x222C224E ;?ICS?lstr8_uart+16
0x2E3A	0x65746E69 ;?ICS?lstr8_uart+20
0x2E3E	0x74656E72 ;?ICS?lstr8_uart+24
0x2E42	0x000A0D22 ;?ICS?lstr8_uart+28
; end of ?ICS?lstr8_uart
;uart.c,0 :: ?ICS?lstr9_uart [28]
0x2E46	0x532B5441 ;?ICS?lstr9_uart+0
0x2E4A	0x52425041 ;?ICS?lstr9_uart+4
0x2E4E	0x312C333D ;?ICS?lstr9_uart+8
0x2E52	0x5750222C ;?ICS?lstr9_uart+12
0x2E56	0x222C2244 ;?ICS?lstr9_uart+16
0x2E5A	0x73727067 ;?ICS?lstr9_uart+20
0x2E5E	0x000A0D22 ;?ICS?lstr9_uart+24
; end of ?ICS?lstr9_uart
;,0 :: _initBlock_7 [96]
; Containing: ?ICS?lstr10_uart [15]
;             ?ICS?lstr11_uart [14]
;             ?ICS?lstr12_uart [14]
;             ?ICS?lstr13_uart [22]
;             ?ICS?lstr14_uart [18]
;             ?ICS?lstr15_uart [13]
0x2E62	0x532B5441 ;_initBlock_7+0 : ?ICS?lstr10_uart at 0x2E62
0x2E66	0x52425041 ;_initBlock_7+4
0x2E6A	0x312C313D ;_initBlock_7+8
0x2E6E	0x41000A0D ;_initBlock_7+12 : ?ICS?lstr11_uart at 0x2E71
0x2E72	0x54482B54 ;_initBlock_7+16
0x2E76	0x45545054 ;_initBlock_7+20
0x2E7A	0x0A0D4D52 ;_initBlock_7+24
0x2E7E	0x2B544100 ;_initBlock_7+28 : ?ICS?lstr12_uart at 0x2E7F
0x2E82	0x50545448 ;_initBlock_7+32
0x2E86	0x54494E49 ;_initBlock_7+36
0x2E8A	0x41000A0D ;_initBlock_7+40 : ?ICS?lstr13_uart at 0x2E8D
0x2E8E	0x54482B54 ;_initBlock_7+44
0x2E92	0x41505054 ;_initBlock_7+48
0x2E96	0x223D4152 ;_initBlock_7+52
0x2E9A	0x22444943 ;_initBlock_7+56
0x2E9E	0x0A0D312C ;_initBlock_7+60
0x2EA2	0x2B544100 ;_initBlock_7+64 : ?ICS?lstr14_uart at 0x2EA3
0x2EA6	0x50545448 ;_initBlock_7+68
0x2EAA	0x49544341 ;_initBlock_7+72
0x2EAE	0x313D4E4F ;_initBlock_7+76
0x2EB2	0x41000A0D ;_initBlock_7+80 : ?ICS?lstr15_uart at 0x2EB5
0x2EB6	0x49432B54 ;_initBlock_7+84
0x2EBA	0x55485350 ;_initBlock_7+88
0x2EBE	0x000A0D54 ;_initBlock_7+92
; end of _initBlock_7
;,0 :: _initBlock_8 [28]
; Containing: ?ICS?lstr16_uart [15]
;             ?ICS?lstr17_uart [13]
0x2EC2	0x532B5441 ;_initBlock_8+0 : ?ICS?lstr16_uart at 0x2EC2
0x2EC6	0x52425041 ;_initBlock_8+4
0x2ECA	0x312C303D ;_initBlock_8+8
0x2ECE	0x41000A0D ;_initBlock_8+12 : ?ICS?lstr17_uart at 0x2ED1
0x2ED2	0x47432B54 ;_initBlock_8+16
0x2ED6	0x3D545441 ;_initBlock_8+20
0x2EDA	0x000A0D30 ;_initBlock_8+24
; end of _initBlock_8
;,0 :: _initBlock_9 [161]
; Containing: ?ICS_receivedFlag [1]
;             ?ICS?lstr1___Lib_Conversions [4]
;             ?ICS?lstr2___Lib_Conversions [2]
;             ?ICS?lstr3___Lib_Conversions [4]
;             ?ICSsendData_url_L0 [150]
0x2EDE	0x4E614E00 ;_initBlock_9+0 : ?ICS_receivedFlag at 0x2EDE : ?ICS?lstr1___Lib_Conversions at 0x2EDF
0x2EE2	0x49003000 ;_initBlock_9+4 : ?ICS?lstr2___Lib_Conversions at 0x2EE3 : ?ICS?lstr3___Lib_Conversions at 0x2EE5
0x2EE6	0x4100464E ;_initBlock_9+8 : ?ICSsendData_url_L0 at 0x2EE9
0x2EEA	0x54482B54 ;_initBlock_9+12
0x2EEE	0x41505054 ;_initBlock_9+16
0x2EF2	0x223D4152 ;_initBlock_9+20
0x2EF6	0x224C5255 ;_initBlock_9+24
0x2EFA	0x7468222C ;_initBlock_9+28
0x2EFE	0x2F3A7074 ;_initBlock_9+32
0x2F02	0x617A612F ;_initBlock_9+36
0x2F06	0x2E636972 ;_initBlock_9+40
0x2F0A	0x73757361 ;_initBlock_9+44
0x2F0E	0x6D6D6F63 ;_initBlock_9+48
0x2F12	0x6D6F632E ;_initBlock_9+52
0x2F16	0x3939393A ;_initBlock_9+56
0x2F1A	0x696D2F38 ;_initBlock_9+60
0x2F1E	0x6C2F7370 ;_initBlock_9+64
0x2F22	0x743F676F ;_initBlock_9+68
0x2F26	0x3D706D65 ;_initBlock_9+72
0x2F2A	0x00000000 ;_initBlock_9+76
0x2F2E	0x00000000 ;_initBlock_9+80
0x2F32	0x00000000 ;_initBlock_9+84
0x2F36	0x00000000 ;_initBlock_9+88
0x2F3A	0x00000000 ;_initBlock_9+92
0x2F3E	0x00000000 ;_initBlock_9+96
0x2F42	0x00000000 ;_initBlock_9+100
0x2F46	0x00000000 ;_initBlock_9+104
0x2F4A	0x00000000 ;_initBlock_9+108
0x2F4E	0x00000000 ;_initBlock_9+112
0x2F52	0x00000000 ;_initBlock_9+116
0x2F56	0x00000000 ;_initBlock_9+120
0x2F5A	0x00000000 ;_initBlock_9+124
0x2F5E	0x00000000 ;_initBlock_9+128
0x2F62	0x00000000 ;_initBlock_9+132
0x2F66	0x00000000 ;_initBlock_9+136
0x2F6A	0x00000000 ;_initBlock_9+140
0x2F6E	0x00000000 ;_initBlock_9+144
0x2F72	0x00000000 ;_initBlock_9+148
0x2F76	0x00000000 ;_initBlock_9+152
0x2F7A	0x00000000 ;_initBlock_9+156
0x2F7E	0x00 ;_initBlock_9+160
; end of _initBlock_9
;__Lib_GPIO_32F4xx_Defs.c,785 :: __GPIO_MODULE_I2C3_PA8_PC9 [108]
0x2F80	0x00000408 ;__GPIO_MODULE_I2C3_PA8_PC9+0
0x2F84	0x00000429 ;__GPIO_MODULE_I2C3_PA8_PC9+4
0x2F88	0xFFFFFFFF ;__GPIO_MODULE_I2C3_PA8_PC9+8
0x2F8C	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+12
0x2F90	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+16
0x2F94	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+20
0x2F98	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+24
0x2F9C	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+28
0x2FA0	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+32
0x2FA4	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+36
0x2FA8	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+40
0x2FAC	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+44
0x2FB0	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+48
0x2FB4	0x00001028 ;__GPIO_MODULE_I2C3_PA8_PC9+52
0x2FB8	0x00001028 ;__GPIO_MODULE_I2C3_PA8_PC9+56
0x2FBC	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+60
0x2FC0	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+64
0x2FC4	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+68
0x2FC8	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+72
0x2FCC	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+76
0x2FD0	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+80
0x2FD4	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+84
0x2FD8	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+88
0x2FDC	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+92
0x2FE0	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+96
0x2FE4	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+100
0x2FE8	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+104
; end of __GPIO_MODULE_I2C3_PA8_PC9
;humidity.c,0 :: ?ICScalcHumTemp_i_L0 [4]
0x2FEC	0x00000000 ;?ICScalcHumTemp_i_L0+0
; end of ?ICScalcHumTemp_i_L0
;humidity.c,0 :: ?ICScalcHumTemp_checksum_L0 [4]
0x2FF0	0x00000000 ;?ICScalcHumTemp_checksum_L0+0
; end of ?ICScalcHumTemp_checksum_L0
;humidity.c,0 :: ?ICScalcHumTemp_res_L0 [4]
0x2FF4	0x00000000 ;?ICScalcHumTemp_res_L0+0
; end of ?ICScalcHumTemp_res_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [26]    _I2Cx_Get_Status
0x01A4      [24]    _I2Cx_Is_Idle
0x01BC      [26]    __Lib_I2C_123_I2Cx_Wait_For_Idle
0x01D8      [36]    _ChekXForEvent
0x01FC      [12]    _Get_Fosc_kHz
0x0208     [252]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x0304      [68]    _I2Cx_Start
0x0348     [180]    _I2Cx_Write
0x03FC      [70]    _GPIO_Alternate_Function_Enable
0x0444     [132]    _RCC_GetClocksFrequency
0x04C8     [652]    _I2Cx_Read
0x0754     [168]    _GPIO_Clk_Enable
0x07FC      [36]    _I2C3_Read
0x0820      [24]    _I2C3_Start
0x0838      [36]    _I2C3_Write
0x085C     [468]    _I2Cx_Init_Advanced
0x0A30     [560]    _GPIO_Config
0x0C60      [40]    _BME_Write
0x0C88      [24]    _my_Delay_us
0x0CA0      [80]    _BME_Read_DigS
0x0CF0      [28]    _GPIO_Digital_Output
0x0D0C     [152]    _USART2_Receive
0x0DA4      [40]    _Lcd_Chr_CP
0x0DCC      [40]    _strcpy
0x0DF8      [24]    _Delay_50us
0x0E10      [24]    _Delay_1us
0x0E28      [84]    _BME280_compensate_T_int32
0x0E7C     [112]    _BME_Read
0x0EEC      [24]    _GPIO_Digital_Input
0x0F04     [104]    _oneWireReadBit
0x0F70      [24]    _Delay_5500us
0x0F88      [80]    _BME_Read_DigU
0x0FD8     [128]    _NVIC_SetIntPriority
0x1058      [28]    _I2C3_Init_Advanced
0x1074      [92]    _oneWireWriteBit
0x10D0     [120]    _NVIC_IntEnable
0x1148      [96]    _getTemperature
0x11A8     [204]    _Lcd_Cmd
0x1274     [588]    _Lcd_Init
0x14C0      [68]    _oneWireWrite
0x1504      [60]    _oneWireRead
0x1540     [144]    _oneWireReset
0x15D0     [224]    _BME280_compensate_P_int32
0x16B0      [72]    _crc8
0x16F8      [88]    _checkReceiveTxt
0x1750      [96]    _InitTimerUs
0x17B0     [252]    _USART2_Init
0x18AC      [36]    _getReceiveTxt
0x18D0      [40]    _initUltrasonic
0x18F8     [244]    _BME280_Init
0x19EC      [88]    _InitTimerMs
0x1A44      [68]    _initLCD
0x1A88      [28]    _strlen
0x1AA4     [116]    _Lcd_Out
0x1B18     [492]    _FloatToStr
0x1D04     [148]    _USART2_Send_Text
0x1D98     [260]    _RTCInit
0x1E9C      [24]    _my_Delay_ms
0x1EB4      [20]    ___CC2DW
0x1EC8     [924]    _sendData
0x2264     [120]    _showTempLCD
0x22DC      [76]    __Lib_System_4XX_SystemClockSetDefault
0x2328      [58]    ___FillZeros
0x2364     [128]    _initProg
0x23E4     [100]    _getPressure
0x2448     [468]    _calcHumTemp
0x261C     [104]    _getDistance
0x2684     [188]    _calcTemp
0x2740     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x2AA0     [204]    _interruptUART
0x2B6C      [72]    _main
0x2BB4      [44]    _Timer2_interrupt
0x2BE0      [44]    _Timer3_interrupt
0x2C0C     [356]    _interRTC
0x2D70      [36]    __Lib_System_4XX_InitialSetUpFosc
0x2D94       [8]    ___GenExcept
0x2D9C      [42]    ___EnableFPU
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0000       [4]    FARG_sendData_temp
0x0000       [4]    FARG_showTempLCD_temp
0x0000       [4]    FARG_FloatToStr_fnum
0x0004       [4]    FARG_showTempLCD_hum
0x0004       [4]    FARG_sendData_hum
0x0008       [4]    FARG_sendData_pres
0x000C       [4]    FARG_sendData_dist
0x20000000      [16]    __Lib_System_4XX_APBAHBPrescTable
0x20000010       [6]    ?lstr1_lcd
0x20000016       [5]    ?lstr2_lcd
0x2000001B      [11]    ?lstr4_uart
0x20000026      [13]    ?lstr5_uart
0x20000033      [13]    ?lstr6_uart
0x20000040      [32]    ?lstr7_uart
0x20000060      [32]    ?lstr8_uart
0x20000080      [28]    ?lstr9_uart
0x2000009C      [15]    ?lstr10_uart
0x200000AB      [14]    ?lstr11_uart
0x200000B9      [14]    ?lstr12_uart
0x200000C7      [22]    ?lstr13_uart
0x200000DD      [18]    ?lstr14_uart
0x200000EF      [13]    ?lstr15_uart
0x200000FC      [15]    ?lstr16_uart
0x2000010B      [13]    ?lstr17_uart
0x20000118       [1]    _receivedFlag
0x20000119       [4]    ?lstr1___Lib_Conversions
0x2000011D       [2]    ?lstr2___Lib_Conversions
0x2000011F       [4]    ?lstr3___Lib_Conversions
0x20000123      [10]    _data_
0x2000012D      [10]    _output
0x20000137       [1]    _cnt
0x20000138       [2]    _dig_T1
0x2000013A       [2]    _dig_T2
0x2000013C       [2]    _dig_T3
0x2000013E       [2]    _dig_P1
0x20000140       [2]    _dig_P2
0x20000142       [2]    _dig_P3
0x20000144       [2]    _dig_P4
0x20000146       [2]    _dig_P5
0x20000148       [2]    _dig_P6
0x2000014A       [2]    _dig_P7
0x2000014C       [2]    _dig_P8
0x2000014E       [2]    _dig_P9
0x20000150       [4]    _tick_ms
0x20000154       [4]    _tick_us
0x20000158    [1008]    _receiveUART
0x20000548    [1006]    _transmitUART
0x20000936       [1]    _ok
0x20000937       [0]    __Lib_Lcd_cmd_status
0x20000938       [4]    ___System_CLOCK_IN_KHZ
0x2000093C       [4]    _I2C_Start_Ptr
0x20000940       [4]    _I2C_Read_Ptr
0x20000944       [4]    _I2C_Write_Ptr
0x20000948       [4]    __VOLTAGE_RANGE
0x2000094C       [4]    _t_fine
0x20000950       [4]    _press
0x20000954       [4]    _temp
0x20000958       [4]    _hum
0x2000095C       [4]    _dist
0x20000960       [9]    _scratchpad
0x20000969     [300]    _receivedTxt
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2DC6      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x2DD6       [6]    ?ICS?lstr1_lcd
0x2DDC       [5]    ?ICS?lstr2_lcd
0x2DE1      [11]    ?ICS?lstr4_uart
0x2DEC      [13]    ?ICS?lstr5_uart
0x2DF9      [13]    ?ICS?lstr6_uart
0x2E06      [32]    ?ICS?lstr7_uart
0x2E26      [32]    ?ICS?lstr8_uart
0x2E46      [28]    ?ICS?lstr9_uart
0x2E62      [15]    ?ICS?lstr10_uart
0x2E71      [14]    ?ICS?lstr11_uart
0x2E7F      [14]    ?ICS?lstr12_uart
0x2E8D      [22]    ?ICS?lstr13_uart
0x2EA3      [18]    ?ICS?lstr14_uart
0x2EB5      [13]    ?ICS?lstr15_uart
0x2EC2      [15]    ?ICS?lstr16_uart
0x2ED1      [13]    ?ICS?lstr17_uart
0x2EDE       [1]    ?ICS_receivedFlag
0x2EDF       [4]    ?ICS?lstr1___Lib_Conversions
0x2EE3       [2]    ?ICS?lstr2___Lib_Conversions
0x2EE5       [4]    ?ICS?lstr3___Lib_Conversions
0x2EE9     [150]    ?ICSsendData_url_L0
0x2F80     [108]    __GPIO_MODULE_I2C3_PA8_PC9
0x2FEC       [4]    ?ICScalcHumTemp_i_L0
0x2FF0       [4]    ?ICScalcHumTemp_checksum_L0
0x2FF4       [4]    ?ICScalcHumTemp_res_L0
