;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/24/2017 6:16:10 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x2E650000  	11877
0x0008	0x30310000  	12337
0x000C	0x30310000  	12337
0x0010	0x30310000  	12337
0x0014	0x30310000  	12337
0x0018	0x30310000  	12337
0x001C	0x30310000  	12337
0x0020	0x30310000  	12337
0x0024	0x30310000  	12337
0x0028	0x30310000  	12337
0x002C	0x30310000  	12337
0x0030	0x30310000  	12337
0x0034	0x30310000  	12337
0x0038	0x30310000  	12337
0x003C	0x30310000  	12337
0x0040	0x30310000  	12337
0x0044	0x30310000  	12337
0x0048	0x30310000  	12337
0x004C	0x2A990000  	10905
0x0050	0x30310000  	12337
0x0054	0x30310000  	12337
0x0058	0x30310000  	12337
0x005C	0x30310000  	12337
0x0060	0x30310000  	12337
0x0064	0x30310000  	12337
0x0068	0x30310000  	12337
0x006C	0x30310000  	12337
0x0070	0x30310000  	12337
0x0074	0x30310000  	12337
0x0078	0x30310000  	12337
0x007C	0x30310000  	12337
0x0080	0x30310000  	12337
0x0084	0x30310000  	12337
0x0088	0x30310000  	12337
0x008C	0x30310000  	12337
0x0090	0x30310000  	12337
0x0094	0x30310000  	12337
0x0098	0x30310000  	12337
0x009C	0x30310000  	12337
0x00A0	0x30310000  	12337
0x00A4	0x30310000  	12337
0x00A8	0x30310000  	12337
0x00AC	0x30310000  	12337
0x00B0	0x29750000  	10613
0x00B4	0x29A10000  	10657
0x00B8	0x30310000  	12337
0x00BC	0x30310000  	12337
0x00C0	0x30310000  	12337
0x00C4	0x30310000  	12337
0x00C8	0x30310000  	12337
0x00CC	0x30310000  	12337
0x00D0	0x30310000  	12337
0x00D4	0x30310000  	12337
0x00D8	0x29CD0000  	10701
0x00DC	0x30310000  	12337
0x00E0	0x30310000  	12337
0x00E4	0x30310000  	12337
0x00E8	0x30310000  	12337
0x00EC	0x30310000  	12337
0x00F0	0x30310000  	12337
0x00F4	0x30310000  	12337
0x00F8	0x30310000  	12337
0x00FC	0x30310000  	12337
0x0100	0x30310000  	12337
0x0104	0x30310000  	12337
0x0108	0x30310000  	12337
0x010C	0x30310000  	12337
0x0110	0x30310000  	12337
0x0114	0x30310000  	12337
0x0118	0x30310000  	12337
0x011C	0x30310000  	12337
0x0120	0x30310000  	12337
0x0124	0x30310000  	12337
0x0128	0x30310000  	12337
0x012C	0x30310000  	12337
0x0130	0x30310000  	12337
0x0134	0x30310000  	12337
0x0138	0x30310000  	12337
0x013C	0x30310000  	12337
0x0140	0x30310000  	12337
0x0144	0x30310000  	12337
0x0148	0x30310000  	12337
0x014C	0x30310000  	12337
0x0150	0x30310000  	12337
0x0154	0x30310000  	12337
0x0158	0x30310000  	12337
0x015C	0x30310000  	12337
0x0160	0x30310000  	12337
0x0164	0x30310000  	12337
0x0168	0x30310000  	12337
0x016C	0x30310000  	12337
0x0170	0x30310000  	12337
0x0174	0x30310000  	12337
0x0178	0x30310000  	12337
0x017C	0x30310000  	12337
0x0180	0x30310000  	12337
0x0184	0x30310000  	12337
; end of ____SysVT
_main:
;main.c, 47 :: 		void main() {
0x2E64	0xB084    SUB	SP, SP, #16
0x2E66	0xF7FFFE4D  BL	11012
0x2E6A	0xF7FFFE35  BL	10968
0x2E6E	0xF000FA7B  BL	13160
0x2E72	0xF000F8E1  BL	12344
0x2E76	0xF000FA37  BL	13032
;main.c, 48 :: 		GPIO_Digital_Output(&GPIOE_BASE, _GPIO_PINMASK_15|_GPIO_PINMASK_12);
0x2E7A	0xF2490100  MOVW	R1, #36864
0x2E7E	0x485C    LDR	R0, [PC, #368]
0x2E80	0xF7FFFD6A  BL	_GPIO_Digital_Output+0
;main.c, 49 :: 		LD1=1;
0x2E84	0x2101    MOVS	R1, #1
0x2E86	0xB249    SXTB	R1, R1
0x2E88	0x485A    LDR	R0, [PC, #360]
0x2E8A	0x6001    STR	R1, [R0, #0]
;main.c, 50 :: 		initProg();
0x2E8C	0xF7FFFC38  BL	_initProg+0
;main.c, 52 :: 		LD1=1; LD2=1;
0x2E90	0x2101    MOVS	R1, #1
0x2E92	0xB249    SXTB	R1, R1
0x2E94	0x4857    LDR	R0, [PC, #348]
0x2E96	0x6001    STR	R1, [R0, #0]
0x2E98	0x4857    LDR	R0, [PC, #348]
0x2E9A	0x6001    STR	R1, [R0, #0]
;main.c, 53 :: 		TIM2_CR1.CEN = 1;
0x2E9C	0x4857    LDR	R0, [PC, #348]
0x2E9E	0x6001    STR	R1, [R0, #0]
;main.c, 54 :: 		TIM3_CR1.CEN = 1;
0x2EA0	0x4857    LDR	R0, [PC, #348]
0x2EA2	0x6001    STR	R1, [R0, #0]
;main.c, 55 :: 		showText("pocni");
0x2EA4	0x4857    LDR	R0, [PC, #348]
0x2EA6	0xF7FFFC9D  BL	_showText+0
;main.c, 56 :: 		sms();
0x2EAA	0xF7FFFCB3  BL	_sms+0
;main.c, 57 :: 		showText("kraj");
0x2EAE	0x4856    LDR	R0, [PC, #344]
0x2EB0	0xF7FFFC98  BL	_showText+0
;main.c, 58 :: 		TIM2_CR1.CEN = 0;
0x2EB4	0x2100    MOVS	R1, #0
0x2EB6	0xB249    SXTB	R1, R1
0x2EB8	0x4850    LDR	R0, [PC, #320]
0x2EBA	0x6001    STR	R1, [R0, #0]
;main.c, 59 :: 		TIM3_CR1.CEN = 0;
0x2EBC	0x4850    LDR	R0, [PC, #320]
0x2EBE	0x6001    STR	R1, [R0, #0]
;main.c, 60 :: 		while(1)
L_main2:
;main.c, 71 :: 		asm {WFI};
0x2EC0	0xBF30    WFI
;main.c, 72 :: 		TIM2_CR1.CEN = 1;
0x2EC2	0x2101    MOVS	R1, #1
0x2EC4	0xB249    SXTB	R1, R1
0x2EC6	0x484D    LDR	R0, [PC, #308]
0x2EC8	0x6001    STR	R1, [R0, #0]
;main.c, 73 :: 		TIM3_CR1.CEN = 1;
0x2ECA	0x484D    LDR	R0, [PC, #308]
0x2ECC	0x6001    STR	R1, [R0, #0]
;main.c, 74 :: 		showText("pocni");
0x2ECE	0x484F    LDR	R0, [PC, #316]
0x2ED0	0xF7FFFC88  BL	_showText+0
;main.c, 75 :: 		sms();
0x2ED4	0xF7FFFC9E  BL	_sms+0
;main.c, 76 :: 		showText("kraj");
0x2ED8	0x484D    LDR	R0, [PC, #308]
0x2EDA	0xF7FFFC83  BL	_showText+0
;main.c, 77 :: 		TIM2_CR1.CEN = 0;
0x2EDE	0x2100    MOVS	R1, #0
0x2EE0	0xB249    SXTB	R1, R1
0x2EE2	0x4846    LDR	R0, [PC, #280]
0x2EE4	0x6001    STR	R1, [R0, #0]
;main.c, 78 :: 		TIM3_CR1.CEN = 0;
0x2EE6	0x4846    LDR	R0, [PC, #280]
0x2EE8	0x6001    STR	R1, [R0, #0]
;main.c, 79 :: 		if(rtcBool==1)
0x2EEA	0x484A    LDR	R0, [PC, #296]
0x2EEC	0xF9900000  LDRSB	R0, [R0, #0]
0x2EF0	0x2801    CMP	R0, #1
0x2EF2	0xF040807B  BNE	L_main4
;main.c, 81 :: 		LD1=0; LD2=0;
0x2EF6	0x2100    MOVS	R1, #0
0x2EF8	0xB249    SXTB	R1, R1
0x2EFA	0x483E    LDR	R0, [PC, #248]
0x2EFC	0x9003    STR	R0, [SP, #12]
0x2EFE	0x6001    STR	R1, [R0, #0]
0x2F00	0x483D    LDR	R0, [PC, #244]
0x2F02	0x9002    STR	R0, [SP, #8]
0x2F04	0x6001    STR	R1, [R0, #0]
;main.c, 82 :: 		cnt=10;
0x2F06	0x210A    MOVS	R1, #10
0x2F08	0x4843    LDR	R0, [PC, #268]
0x2F0A	0x7001    STRB	R1, [R0, #0]
;main.c, 83 :: 		ok=0;
0x2F0C	0x2100    MOVS	R1, #0
0x2F0E	0x4843    LDR	R0, [PC, #268]
0x2F10	0x7001    STRB	R1, [R0, #0]
;main.c, 84 :: 		press=getPressure();
0x2F12	0xF7FFFC35  BL	_getPressure+0
0x2F16	0x4842    LDR	R0, [PC, #264]
0x2F18	0x9001    STR	R0, [SP, #4]
0x2F1A	0xED000A00  VSTR.32	S0, [R0, #0]
;main.c, 85 :: 		LD1=1; LD2=0;
0x2F1E	0x2201    MOVS	R2, #1
0x2F20	0xB252    SXTB	R2, R2
0x2F22	0x9803    LDR	R0, [SP, #12]
0x2F24	0x6002    STR	R2, [R0, #0]
0x2F26	0x2100    MOVS	R1, #0
0x2F28	0xB249    SXTB	R1, R1
0x2F2A	0x9802    LDR	R0, [SP, #8]
0x2F2C	0x6001    STR	R1, [R0, #0]
;main.c, 87 :: 		TIM2_CR1.CEN = 1;
0x2F2E	0x4833    LDR	R0, [PC, #204]
0x2F30	0x6002    STR	R2, [R0, #0]
;main.c, 88 :: 		TIM3_CR1.CEN = 1;
0x2F32	0x4833    LDR	R0, [PC, #204]
0x2F34	0x6002    STR	R2, [R0, #0]
;main.c, 90 :: 		temp=calcTemp();
0x2F36	0xF7FFFC89  BL	_calcTemp+0
0x2F3A	0x483A    LDR	R0, [PC, #232]
0x2F3C	0x9000    STR	R0, [SP, #0]
0x2F3E	0xED000A00  VSTR.32	S0, [R0, #0]
;main.c, 92 :: 		hum=calcHumTemp(1);
0x2F42	0x2001    MOVS	R0, #1
0x2F44	0xF7FFFAF2  BL	_calcHumTemp+0
0x2F48	0x4837    LDR	R0, [PC, #220]
0x2F4A	0xED000A00  VSTR.32	S0, [R0, #0]
;main.c, 93 :: 		dist=getDistance();
0x2F4E	0xF7FFF889  BL	_getDistance+0
0x2F52	0x4836    LDR	R0, [PC, #216]
0x2F54	0xED000A00  VSTR.32	S0, [R0, #0]
;main.c, 94 :: 		LD1=0; LD2=1;
0x2F58	0x2100    MOVS	R1, #0
0x2F5A	0xB249    SXTB	R1, R1
0x2F5C	0x9803    LDR	R0, [SP, #12]
0x2F5E	0x6001    STR	R1, [R0, #0]
0x2F60	0x2101    MOVS	R1, #1
0x2F62	0xB249    SXTB	R1, R1
0x2F64	0x9802    LDR	R0, [SP, #8]
0x2F66	0x6001    STR	R1, [R0, #0]
;main.c, 95 :: 		showTempLCD(temp,press);
0x2F68	0x9801    LDR	R0, [SP, #4]
0x2F6A	0xED500A00  VLDR.32	S1, [R0, #0]
0x2F6E	0x9800    LDR	R0, [SP, #0]
0x2F70	0xED100A00  VLDR.32	S0, [R0, #0]
0x2F74	0xF7FFFA9E  BL	_showTempLCD+0
;main.c, 96 :: 		ok=0;
0x2F78	0x2100    MOVS	R1, #0
0x2F7A	0x4828    LDR	R0, [PC, #160]
0x2F7C	0x7001    STRB	R1, [R0, #0]
;main.c, 97 :: 		while(ok==0 && cnt>0)
L_main5:
0x2F7E	0x4827    LDR	R0, [PC, #156]
0x2F80	0x7800    LDRB	R0, [R0, #0]
0x2F82	0x2800    CMP	R0, #0
0x2F84	0xD126    BNE	L__main11
0x2F86	0x4824    LDR	R0, [PC, #144]
0x2F88	0x7800    LDRB	R0, [R0, #0]
0x2F8A	0x2800    CMP	R0, #0
0x2F8C	0xD922    BLS	L__main10
L__main9:
;main.c, 99 :: 		ok=sendData(temp, hum, press,dist);
0x2F8E	0x4827    LDR	R0, [PC, #156]
0x2F90	0xED501A00  VLDR.32	S3, [R0, #0]
0x2F94	0x4822    LDR	R0, [PC, #136]
0x2F96	0xED101A00  VLDR.32	S2, [R0, #0]
0x2F9A	0x4823    LDR	R0, [PC, #140]
0x2F9C	0xED500A00  VLDR.32	S1, [R0, #0]
0x2FA0	0x4820    LDR	R0, [PC, #128]
0x2FA2	0xED100A00  VLDR.32	S0, [R0, #0]
0x2FA6	0xF7FFF891  BL	_sendData+0
0x2FAA	0x491C    LDR	R1, [PC, #112]
0x2FAC	0x7008    STRB	R0, [R1, #0]
;main.c, 100 :: 		showTempLCD(ok,cnt);
0x2FAE	0x491A    LDR	R1, [PC, #104]
0x2FB0	0x7809    LDRB	R1, [R1, #0]
0x2FB2	0xEE001A10  VMOV	S0, R1
0x2FB6	0xEEB80A40  VCVT.F32.U32	S0, S0
0x2FBA	0xEEF00A40  VMOV.F32	S1, S0
0x2FBE	0xEE000A10  VMOV	S0, R0
0x2FC2	0xEEB80A40  VCVT.F32.U32	S0, S0
0x2FC6	0xF7FFFA75  BL	_showTempLCD+0
;main.c, 101 :: 		cnt--;
0x2FCA	0x4913    LDR	R1, [PC, #76]
0x2FCC	0x7808    LDRB	R0, [R1, #0]
0x2FCE	0x1E40    SUBS	R0, R0, #1
0x2FD0	0x7008    STRB	R0, [R1, #0]
;main.c, 102 :: 		}
0x2FD2	0xE7D4    B	L_main5
;main.c, 97 :: 		while(ok==0 && cnt>0)
L__main11:
L__main10:
;main.c, 103 :: 		TIM2_CR1.CEN = 0;
0x2FD4	0x2100    MOVS	R1, #0
0x2FD6	0xB249    SXTB	R1, R1
0x2FD8	0x4808    LDR	R0, [PC, #32]
0x2FDA	0x6001    STR	R1, [R0, #0]
;main.c, 104 :: 		TIM3_CR1.CEN = 0;
0x2FDC	0x4808    LDR	R0, [PC, #32]
0x2FDE	0x6001    STR	R1, [R0, #0]
;main.c, 105 :: 		LD1=1; LD2=1;
0x2FE0	0x2101    MOVS	R1, #1
0x2FE2	0xB249    SXTB	R1, R1
0x2FE4	0x4803    LDR	R0, [PC, #12]
0x2FE6	0x6001    STR	R1, [R0, #0]
0x2FE8	0x4803    LDR	R0, [PC, #12]
0x2FEA	0x6001    STR	R1, [R0, #0]
;main.c, 106 :: 		}
L_main4:
;main.c, 107 :: 		}
0x2FEC	0xE768    B	L_main2
;main.c, 108 :: 		}
L_end_main:
L__main_end_loop:
0x2FEE	0xE7FE    B	L__main_end_loop
0x2FF0	0x10004002  	GPIOE_BASE+0
0x2FF4	0x02B04242  	ODR12_GPIOE_ODR_bit+0
0x2FF8	0x02BC4242  	ODR15_GPIOE_ODR_bit+0
0x2FFC	0x00004200  	TIM2_CR1+0
0x3000	0x80004200  	TIM3_CR1+0
0x3004	0x000B2000  	?lstr1_main+0
0x3008	0x00112000  	?lstr2_main+0
0x300C	0x00162000  	?lstr3_main+0
0x3010	0x001C2000  	?lstr4_main+0
0x3014	0x01912000  	_rtcBool+0
0x3018	0x01AE2000  	_cnt+0
0x301C	0x01AF2000  	_ok+0
0x3020	0x01B02000  	_press+0
0x3024	0x01B42000  	_temp+0
0x3028	0x01B82000  	_hum+0
0x302C	0x01BC2000  	_dist+0
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x2944	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x2946	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x294A	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x294E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x2952	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x2954	0xB001    ADD	SP, SP, #4
0x2956	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x2908	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x290A	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x290E	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x2912	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x2916	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x2918	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x291C	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x291E	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x2920	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x2922	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x2926	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x292A	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x292C	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x2930	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x2932	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x2934	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x2938	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x293C	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x293E	0xB001    ADD	SP, SP, #4
0x2940	0x4770    BX	LR
; end of ___FillZeros
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x2958	0xB081    SUB	SP, SP, #4
0x295A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x295E	0x4A04    LDR	R2, [PC, #16]
0x2960	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x2962	0xF7FEFD9B  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x2966	0xF8DDE000  LDR	LR, [SP, #0]
0x296A	0xB001    ADD	SP, SP, #4
0x296C	0x4770    BX	LR
0x296E	0xBF00    NOP
0x2970	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x149C	0xB084    SUB	SP, SP, #16
0x149E	0xF8CDE000  STR	LR, [SP, #0]
0x14A2	0xB28D    UXTH	R5, R1
0x14A4	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x14A6	0x4B86    LDR	R3, [PC, #536]
0x14A8	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x14AC	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x14AE	0x4618    MOV	R0, R3
0x14B0	0xF7FFFD36  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x14B4	0xF1B50FFF  CMP	R5, #255
0x14B8	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x14BA	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x14BC	0x4B81    LDR	R3, [PC, #516]
0x14BE	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x14C2	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x14C4	0x4B80    LDR	R3, [PC, #512]
0x14C6	0x429E    CMP	R6, R3
0x14C8	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x14CA	0xF2455355  MOVW	R3, #21845
0x14CE	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x14D2	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x14D4	0x1D3D    ADDS	R5, R7, #4
0x14D6	0x682C    LDR	R4, [R5, #0]
0x14D8	0xF06F03FF  MVN	R3, #255
0x14DC	0xEA040303  AND	R3, R4, R3, LSL #0
0x14E0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x14E2	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x14E6	0x682C    LDR	R4, [R5, #0]
0x14E8	0xF64F73FF  MOVW	R3, #65535
0x14EC	0xEA440303  ORR	R3, R4, R3, LSL #0
0x14F0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x14F2	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x14F4	0x2E42    CMP	R6, #66
0x14F6	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x14F8	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x14FA	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x14FC	0xF64F73FF  MOVW	R3, #65535
0x1500	0x429D    CMP	R5, R3
0x1502	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x1504	0x4B70    LDR	R3, [PC, #448]
0x1506	0x429E    CMP	R6, R3
0x1508	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x150A	0xF04F3355  MOV	R3, #1431655765
0x150E	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x1510	0x1D3C    ADDS	R4, R7, #4
0x1512	0x2300    MOVS	R3, #0
0x1514	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x1516	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x151A	0xF04F33FF  MOV	R3, #-1
0x151E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x1520	0xE0CA    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x1522	0x2E42    CMP	R6, #66
0x1524	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x1526	0x2300    MOVS	R3, #0
0x1528	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x152A	0xE0C5    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x152C	0xF0060301  AND	R3, R6, #1
0x1530	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x1532	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x1534	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x1536	0xF0060308  AND	R3, R6, #8
0x153A	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x153C	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x153E	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x1540	0xF0060304  AND	R3, R6, #4
0x1544	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x1546	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x1548	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x154A	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x154C	0xF4062301  AND	R3, R6, #528384
0x1550	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x1552	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x1554	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x1556	0xF4066300  AND	R3, R6, #2048
0x155A	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x155C	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x155E	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x1560	0xF4066380  AND	R3, R6, #1024
0x1564	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x1566	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x1568	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x156A	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x156C	0xF0060320  AND	R3, R6, #32
0x1570	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x1572	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x1574	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x1576	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x1578	0xF4067380  AND	R3, R6, #256
0x157C	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x157E	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x1580	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x1582	0xF0060380  AND	R3, R6, #128
0x1586	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x1588	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x158A	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x158C	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x158E	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x1592	0x9201    STR	R2, [SP, #4]
0x1594	0xFA1FF985  UXTH	R9, R5
0x1598	0x46B0    MOV	R8, R6
0x159A	0x4606    MOV	R6, R0
0x159C	0x4618    MOV	R0, R3
0x159E	0x460A    MOV	R2, R1
0x15A0	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x15A2	0xF1BA0F10  CMP	R10, #16
0x15A6	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x15AA	0xF04F0301  MOV	R3, #1
0x15AE	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x15B2	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x15B6	0x42A3    CMP	R3, R4
0x15B8	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x15BC	0xEA4F044A  LSL	R4, R10, #1
0x15C0	0xF04F0303  MOV	R3, #3
0x15C4	0x40A3    LSLS	R3, R4
0x15C6	0x43DC    MVN	R4, R3
0x15C8	0x683B    LDR	R3, [R7, #0]
0x15CA	0x4023    ANDS	R3, R4
0x15CC	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x15CE	0xEA4F034A  LSL	R3, R10, #1
0x15D2	0xFA06F403  LSL	R4, R6, R3
0x15D6	0x683B    LDR	R3, [R7, #0]
0x15D8	0x4323    ORRS	R3, R4
0x15DA	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x15DC	0xF008030C  AND	R3, R8, #12
0x15E0	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x15E2	0xF2070508  ADDW	R5, R7, #8
0x15E6	0xEA4F044A  LSL	R4, R10, #1
0x15EA	0xF04F0303  MOV	R3, #3
0x15EE	0x40A3    LSLS	R3, R4
0x15F0	0x43DC    MVN	R4, R3
0x15F2	0x682B    LDR	R3, [R5, #0]
0x15F4	0x4023    ANDS	R3, R4
0x15F6	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x15F8	0xF2070508  ADDW	R5, R7, #8
0x15FC	0xEA4F034A  LSL	R3, R10, #1
0x1600	0xFA02F403  LSL	R4, R2, R3
0x1604	0x682B    LDR	R3, [R5, #0]
0x1606	0x4323    ORRS	R3, R4
0x1608	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x160A	0x1D3D    ADDS	R5, R7, #4
0x160C	0xFA1FF48A  UXTH	R4, R10
0x1610	0xF04F0301  MOV	R3, #1
0x1614	0x40A3    LSLS	R3, R4
0x1616	0x43DC    MVN	R4, R3
0x1618	0x682B    LDR	R3, [R5, #0]
0x161A	0x4023    ANDS	R3, R4
0x161C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x161E	0x1D3D    ADDS	R5, R7, #4
0x1620	0xFA1FF48A  UXTH	R4, R10
0x1624	0xB28B    UXTH	R3, R1
0x1626	0xFA03F404  LSL	R4, R3, R4
0x162A	0xB2A4    UXTH	R4, R4
0x162C	0x682B    LDR	R3, [R5, #0]
0x162E	0x4323    ORRS	R3, R4
0x1630	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x1632	0xF207050C  ADDW	R5, R7, #12
0x1636	0xFA1FF38A  UXTH	R3, R10
0x163A	0x005C    LSLS	R4, R3, #1
0x163C	0xB2A4    UXTH	R4, R4
0x163E	0xF04F0303  MOV	R3, #3
0x1642	0x40A3    LSLS	R3, R4
0x1644	0x43DC    MVN	R4, R3
0x1646	0x682B    LDR	R3, [R5, #0]
0x1648	0x4023    ANDS	R3, R4
0x164A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x164C	0xF207050C  ADDW	R5, R7, #12
0x1650	0xEA4F034A  LSL	R3, R10, #1
0x1654	0xFA00F403  LSL	R4, R0, R3
0x1658	0x682B    LDR	R3, [R5, #0]
0x165A	0x4323    ORRS	R3, R4
0x165C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x165E	0xF0080308  AND	R3, R8, #8
0x1662	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x1664	0xF4080370  AND	R3, R8, #15728640
0x1668	0x0D1B    LSRS	R3, R3, #20
0x166A	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x166E	0xF1BA0F07  CMP	R10, #7
0x1672	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x1674	0xF2070324  ADDW	R3, R7, #36
0x1678	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x167A	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x167E	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x1680	0xF2070320  ADDW	R3, R7, #32
0x1684	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x1686	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x1688	0x00AC    LSLS	R4, R5, #2
0x168A	0xF04F030F  MOV	R3, #15
0x168E	0x40A3    LSLS	R3, R4
0x1690	0x43DC    MVN	R4, R3
0x1692	0x9B02    LDR	R3, [SP, #8]
0x1694	0x681B    LDR	R3, [R3, #0]
0x1696	0xEA030404  AND	R4, R3, R4, LSL #0
0x169A	0x9B02    LDR	R3, [SP, #8]
0x169C	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x169E	0xF89D400C  LDRB	R4, [SP, #12]
0x16A2	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x16A4	0x409C    LSLS	R4, R3
0x16A6	0x9B02    LDR	R3, [SP, #8]
0x16A8	0x681B    LDR	R3, [R3, #0]
0x16AA	0xEA430404  ORR	R4, R3, R4, LSL #0
0x16AE	0x9B02    LDR	R3, [SP, #8]
0x16B0	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x16B2	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x16B6	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x16B8	0xF8DDE000  LDR	LR, [SP, #0]
0x16BC	0xB004    ADD	SP, SP, #16
0x16BE	0x4770    BX	LR
0x16C0	0xFC00FFFF  	#-1024
0x16C4	0x0000FFFF  	#-65536
0x16C8	0x00140008  	#524308
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x0F20	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x0F22	0x491E    LDR	R1, [PC, #120]
0x0F24	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0F28	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x0F2A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x0F2C	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0F2E	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x0F30	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0F32	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x0F34	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0F36	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0F38	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0F3A	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0F3C	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0F3E	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0F40	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0F42	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0F44	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0F46	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0F48	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x0F4A	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0F4C	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x0F4E	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x0F52	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0F54	0x4912    LDR	R1, [PC, #72]
0x0F56	0x4288    CMP	R0, R1
0x0F58	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x0F5A	0x4912    LDR	R1, [PC, #72]
0x0F5C	0x4288    CMP	R0, R1
0x0F5E	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x0F60	0x4911    LDR	R1, [PC, #68]
0x0F62	0x4288    CMP	R0, R1
0x0F64	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x0F66	0x4911    LDR	R1, [PC, #68]
0x0F68	0x4288    CMP	R0, R1
0x0F6A	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x0F6C	0x4910    LDR	R1, [PC, #64]
0x0F6E	0x4288    CMP	R0, R1
0x0F70	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x0F72	0x4910    LDR	R1, [PC, #64]
0x0F74	0x4288    CMP	R0, R1
0x0F76	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x0F78	0x490F    LDR	R1, [PC, #60]
0x0F7A	0x4288    CMP	R0, R1
0x0F7C	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x0F7E	0x490F    LDR	R1, [PC, #60]
0x0F80	0x4288    CMP	R0, R1
0x0F82	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x0F84	0x490E    LDR	R1, [PC, #56]
0x0F86	0x4288    CMP	R0, R1
0x0F88	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0F8A	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x0F8C	0x490D    LDR	R1, [PC, #52]
0x0F8E	0x6809    LDR	R1, [R1, #0]
0x0F90	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0F94	0x490B    LDR	R1, [PC, #44]
0x0F96	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x0F98	0xB001    ADD	SP, SP, #4
0x0F9A	0x4770    BX	LR
0x0F9C	0xFC00FFFF  	#-1024
0x0FA0	0x00004002  	#1073872896
0x0FA4	0x04004002  	#1073873920
0x0FA8	0x08004002  	#1073874944
0x0FAC	0x0C004002  	#1073875968
0x0FB0	0x10004002  	#1073876992
0x0FB4	0x14004002  	#1073878016
0x0FB8	0x18004002  	#1073879040
0x0FBC	0x1C004002  	#1073880064
0x0FC0	0x20004002  	#1073881088
0x0FC4	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_initProg:
;main.c, 17 :: 		void initProg()
0x2700	0xB082    SUB	SP, SP, #8
0x2702	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 19 :: 		GPIO_Digital_Output(&GPIOE_BASE, _GPIO_PINMASK_15|_GPIO_PINMASK_12);
0x2706	0xF2490100  MOVW	R1, #36864
0x270A	0x4818    LDR	R0, [PC, #96]
0x270C	0xF000F924  BL	_GPIO_Digital_Output+0
;main.c, 20 :: 		InitTimerUs();
0x2710	0xF7FEFCFC  BL	_InitTimerUs+0
;main.c, 21 :: 		InitTimerMs();
0x2714	0xF7FFFBFE  BL	_InitTimerMs+0
;main.c, 23 :: 		TIM2_CR1.CEN = 1;
0x2718	0x2101    MOVS	R1, #1
0x271A	0xB249    SXTB	R1, R1
0x271C	0x4814    LDR	R0, [PC, #80]
0x271E	0x6001    STR	R1, [R0, #0]
;main.c, 24 :: 		TIM3_CR1.CEN = 1;
0x2720	0x4814    LDR	R0, [PC, #80]
0x2722	0x6001    STR	R1, [R0, #0]
;main.c, 25 :: 		initLCD();
0x2724	0xF7FFF9C4  BL	_initLCD+0
;main.c, 26 :: 		initUltrasonic();
0x2728	0xF7FFF9AE  BL	_initUltrasonic+0
;main.c, 27 :: 		LD1=0; LD2=1;
0x272C	0x2100    MOVS	R1, #0
0x272E	0xB249    SXTB	R1, R1
0x2730	0x4811    LDR	R0, [PC, #68]
0x2732	0x6001    STR	R1, [R0, #0]
0x2734	0x2101    MOVS	R1, #1
0x2736	0xB249    SXTB	R1, R1
0x2738	0x4810    LDR	R0, [PC, #64]
0x273A	0x9001    STR	R0, [SP, #4]
0x273C	0x6001    STR	R1, [R0, #0]
;main.c, 28 :: 		BME280_Init();
0x273E	0xF7FFF9D9  BL	_BME280_Init+0
;main.c, 29 :: 		LD1=0; LD2=0;
0x2742	0x2100    MOVS	R1, #0
0x2744	0xB249    SXTB	R1, R1
0x2746	0x480C    LDR	R0, [PC, #48]
0x2748	0x6001    STR	R1, [R0, #0]
0x274A	0x9801    LDR	R0, [SP, #4]
0x274C	0x6001    STR	R1, [R0, #0]
;main.c, 30 :: 		USART2_Init();
0x274E	0xF7FFFA4B  BL	_USART2_Init+0
;main.c, 31 :: 		RTCInit();
0x2752	0xF7FFFAC7  BL	_RTCInit+0
;main.c, 32 :: 		TIM2_CR1.CEN = 0;
0x2756	0x2100    MOVS	R1, #0
0x2758	0xB249    SXTB	R1, R1
0x275A	0x4805    LDR	R0, [PC, #20]
0x275C	0x6001    STR	R1, [R0, #0]
;main.c, 33 :: 		TIM3_CR1.CEN = 0;
0x275E	0x4805    LDR	R0, [PC, #20]
0x2760	0x6001    STR	R1, [R0, #0]
;main.c, 35 :: 		}
L_end_initProg:
0x2762	0xF8DDE000  LDR	LR, [SP, #0]
0x2766	0xB002    ADD	SP, SP, #8
0x2768	0x4770    BX	LR
0x276A	0xBF00    NOP
0x276C	0x10004002  	GPIOE_BASE+0
0x2770	0x00004200  	TIM2_CR1+0
0x2774	0x80004200  	TIM3_CR1+0
0x2778	0x02B04242  	ODR12_GPIOE_ODR_bit+0
0x277C	0x02BC4242  	ODR15_GPIOE_ODR_bit+0
; end of _initProg
_InitTimerUs:
;timer.c, 8 :: 		void InitTimerUs(){
0x110C	0xB081    SUB	SP, SP, #4
0x110E	0xF8CDE000  STR	LR, [SP, #0]
;timer.c, 9 :: 		RCC_APB1ENR.TIM2EN = 1;
0x1112	0x2101    MOVS	R1, #1
0x1114	0xB249    SXTB	R1, R1
0x1116	0x480F    LDR	R0, [PC, #60]
0x1118	0x6001    STR	R1, [R0, #0]
;timer.c, 10 :: 		TIM2_CR1.CEN = 0;
0x111A	0x2100    MOVS	R1, #0
0x111C	0xB249    SXTB	R1, R1
0x111E	0x480E    LDR	R0, [PC, #56]
0x1120	0x6001    STR	R1, [R0, #0]
;timer.c, 11 :: 		TIM2_PSC = 0;
0x1122	0x2100    MOVS	R1, #0
0x1124	0x480D    LDR	R0, [PC, #52]
0x1126	0x6001    STR	R1, [R0, #0]
;timer.c, 12 :: 		TIM2_ARR = 59;
0x1128	0x213B    MOVS	R1, #59
0x112A	0x480D    LDR	R0, [PC, #52]
0x112C	0x6001    STR	R1, [R0, #0]
;timer.c, 13 :: 		NVIC_IntEnable(IVT_INT_TIM2);
0x112E	0xF240002C  MOVW	R0, #44
0x1132	0xF7FFFF7F  BL	_NVIC_IntEnable+0
;timer.c, 14 :: 		NVIC_SetIntPriority(IVT_INT_TIM2, _NVIC_INT_PRIORITY_LVL1);
0x1136	0x2101    MOVS	R1, #1
0x1138	0x202C    MOVS	R0, #44
0x113A	0xF7FFFEB1  BL	_NVIC_SetIntPriority+0
;timer.c, 15 :: 		TIM2_DIER.UIE = 1;
0x113E	0x2101    MOVS	R1, #1
0x1140	0xB249    SXTB	R1, R1
0x1142	0x4808    LDR	R0, [PC, #32]
0x1144	0x6001    STR	R1, [R0, #0]
;timer.c, 16 :: 		tick_us=0;
0x1146	0x2100    MOVS	R1, #0
0x1148	0x4807    LDR	R0, [PC, #28]
0x114A	0x6001    STR	R1, [R0, #0]
;timer.c, 17 :: 		}
L_end_InitTimerUs:
0x114C	0xF8DDE000  LDR	LR, [SP, #0]
0x1150	0xB001    ADD	SP, SP, #4
0x1152	0x4770    BX	LR
0x1154	0x08004247  	RCC_APB1ENR+0
0x1158	0x00004200  	TIM2_CR1+0
0x115C	0x00284000  	TIM2_PSC+0
0x1160	0x002C4000  	TIM2_ARR+0
0x1164	0x01804200  	TIM2_DIER+0
0x1168	0x01D02000  	_tick_us+0
; end of _InitTimerUs
_NVIC_IntEnable:
;__Lib_System_4XX.c, 171 :: 		
; ivt start address is: 0 (R0)
0x1034	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 183 :: 		
0x1036	0x2804    CMP	R0, #4
0x1038	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 188 :: 		
0x103A	0x4919    LDR	R1, [PC, #100]
0x103C	0x6809    LDR	R1, [R1, #0]
0x103E	0xF4413280  ORR	R2, R1, #65536
0x1042	0x4917    LDR	R1, [PC, #92]
0x1044	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 189 :: 		
0x1046	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 190 :: 		
; ivt start address is: 0 (R0)
0x1048	0x2805    CMP	R0, #5
0x104A	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 195 :: 		
0x104C	0x4914    LDR	R1, [PC, #80]
0x104E	0x6809    LDR	R1, [R1, #0]
0x1050	0xF4413200  ORR	R2, R1, #131072
0x1054	0x4912    LDR	R1, [PC, #72]
0x1056	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 196 :: 		
0x1058	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 197 :: 		
; ivt start address is: 0 (R0)
0x105A	0x2806    CMP	R0, #6
0x105C	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 202 :: 		
0x105E	0x4910    LDR	R1, [PC, #64]
0x1060	0x6809    LDR	R1, [R1, #0]
0x1062	0xF4412280  ORR	R2, R1, #262144
0x1066	0x490E    LDR	R1, [PC, #56]
0x1068	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 203 :: 		
0x106A	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 204 :: 		
; ivt start address is: 0 (R0)
0x106C	0x280F    CMP	R0, #15
0x106E	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 209 :: 		
0x1070	0x490C    LDR	R1, [PC, #48]
0x1072	0x6809    LDR	R1, [R1, #0]
0x1074	0xF0410202  ORR	R2, R1, #2
0x1078	0x490A    LDR	R1, [PC, #40]
0x107A	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 210 :: 		
0x107C	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 211 :: 		
; ivt start address is: 0 (R0)
0x107E	0x2810    CMP	R0, #16
0x1080	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 216 :: 		
0x1082	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x1086	0x0961    LSRS	R1, R4, #5
0x1088	0x008A    LSLS	R2, R1, #2
0x108A	0x4907    LDR	R1, [PC, #28]
0x108C	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 217 :: 		
0x108E	0xF004021F  AND	R2, R4, #31
0x1092	0xF04F0101  MOV	R1, #1
0x1096	0x4091    LSLS	R1, R2
0x1098	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 218 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 219 :: 		
L_end_NVIC_IntEnable:
0x109A	0xB001    ADD	SP, SP, #4
0x109C	0x4770    BX	LR
0x109E	0xBF00    NOP
0x10A0	0xED24E000  	SCB_SHCRS+0
0x10A4	0xE010E000  	STK_CTRL+0
0x10A8	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_NVIC_SetIntPriority:
;__Lib_System_4XX.c, 233 :: 		
; priority start address is: 4 (R1)
; ivt start address is: 0 (R0)
0x0EA0	0xB081    SUB	SP, SP, #4
; priority end address is: 4 (R1)
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
; priority start address is: 4 (R1)
;__Lib_System_4XX.c, 237 :: 		
0x0EA2	0x280F    CMP	R0, #15
0x0EA4	0xD937    BLS	L_NVIC_SetIntPriority15
;__Lib_System_4XX.c, 238 :: 		
0x0EA6	0xF2A00410  SUBW	R4, R0, #16
0x0EAA	0xB224    SXTH	R4, R4
; ivt end address is: 0 (R0)
0x0EAC	0x10A2    ASRS	R2, R4, #2
0x0EAE	0xB212    SXTH	R2, R2
0x0EB0	0x0093    LSLS	R3, R2, #2
0x0EB2	0x4A1A    LDR	R2, [PC, #104]
0x0EB4	0x18D2    ADDS	R2, R2, R3
; p start address is: 0 (R0)
0x0EB6	0x4610    MOV	R0, R2
;__Lib_System_4XX.c, 239 :: 		
0x0EB8	0x2304    MOVS	R3, #4
0x0EBA	0xB21B    SXTH	R3, R3
0x0EBC	0xFB94F2F3  SDIV	R2, R4, R3
0x0EC0	0xFB034212  MLS	R2, R3, R2, R4
0x0EC4	0xB212    SXTH	R2, R2
0x0EC6	0x00D2    LSLS	R2, R2, #3
0x0EC8	0xB212    SXTH	R2, R2
0x0ECA	0x1D12    ADDS	R2, R2, #4
; shift start address is: 16 (R4)
0x0ECC	0xB2D4    UXTB	R4, R2
;__Lib_System_4XX.c, 240 :: 		
0x0ECE	0xF001020F  AND	R2, R1, #15
0x0ED2	0xB2D2    UXTB	R2, R2
0x0ED4	0xB17A    CBZ	R2, L_NVIC_SetIntPriority16
;__Lib_System_4XX.c, 241 :: 		
0x0ED6	0x220F    MOVS	R2, #15
0x0ED8	0xB212    SXTH	R2, R2
0x0EDA	0x40A2    LSLS	R2, R4
0x0EDC	0xB212    SXTH	R2, R2
0x0EDE	0x43D3    MVN	R3, R2
0x0EE0	0xB21B    SXTH	R3, R3
0x0EE2	0x6802    LDR	R2, [R0, #0]
0x0EE4	0x401A    ANDS	R2, R3
0x0EE6	0x6002    STR	R2, [R0, #0]
;__Lib_System_4XX.c, 242 :: 		
0x0EE8	0xB2CA    UXTB	R2, R1
; priority end address is: 4 (R1)
0x0EEA	0xFA02F304  LSL	R3, R2, R4
; shift end address is: 16 (R4)
0x0EEE	0x6802    LDR	R2, [R0, #0]
0x0EF0	0x431A    ORRS	R2, R3
0x0EF2	0x6002    STR	R2, [R0, #0]
; p end address is: 0 (R0)
;__Lib_System_4XX.c, 243 :: 		
0x0EF4	0xE00F    B	L_NVIC_SetIntPriority17
L_NVIC_SetIntPriority16:
;__Lib_System_4XX.c, 245 :: 		
; shift start address is: 16 (R4)
; p start address is: 0 (R0)
; priority start address is: 4 (R1)
0x0EF6	0x220F    MOVS	R2, #15
0x0EF8	0xB212    SXTH	R2, R2
0x0EFA	0x40A2    LSLS	R2, R4
0x0EFC	0xB212    SXTH	R2, R2
0x0EFE	0x43D3    MVN	R3, R2
0x0F00	0xB21B    SXTH	R3, R3
0x0F02	0x6802    LDR	R2, [R0, #0]
0x0F04	0x401A    ANDS	R2, R3
0x0F06	0x6002    STR	R2, [R0, #0]
;__Lib_System_4XX.c, 246 :: 		
0x0F08	0xB2CB    UXTB	R3, R1
; priority end address is: 4 (R1)
0x0F0A	0x1F22    SUBS	R2, R4, #4
0x0F0C	0xB212    SXTH	R2, R2
; shift end address is: 16 (R4)
0x0F0E	0x4093    LSLS	R3, R2
0x0F10	0x6802    LDR	R2, [R0, #0]
0x0F12	0x431A    ORRS	R2, R3
0x0F14	0x6002    STR	R2, [R0, #0]
; p end address is: 0 (R0)
;__Lib_System_4XX.c, 247 :: 		
L_NVIC_SetIntPriority17:
;__Lib_System_4XX.c, 248 :: 		
L_NVIC_SetIntPriority15:
;__Lib_System_4XX.c, 249 :: 		
L_end_NVIC_SetIntPriority:
0x0F16	0xB001    ADD	SP, SP, #4
0x0F18	0x4770    BX	LR
0x0F1A	0xBF00    NOP
0x0F1C	0xE400E000  	NVIC_IPR0+0
; end of _NVIC_SetIntPriority
_InitTimerMs:
;timer.c, 33 :: 		void InitTimerMs(){
0x1F14	0xB081    SUB	SP, SP, #4
0x1F16	0xF8CDE000  STR	LR, [SP, #0]
;timer.c, 34 :: 		RCC_APB1ENR.TIM3EN = 1;
0x1F1A	0x2101    MOVS	R1, #1
0x1F1C	0xB249    SXTB	R1, R1
0x1F1E	0x480E    LDR	R0, [PC, #56]
0x1F20	0x6001    STR	R1, [R0, #0]
;timer.c, 35 :: 		TIM3_CR1.CEN = 0;
0x1F22	0x2100    MOVS	R1, #0
0x1F24	0xB249    SXTB	R1, R1
0x1F26	0x480D    LDR	R0, [PC, #52]
0x1F28	0x6001    STR	R1, [R0, #0]
;timer.c, 36 :: 		TIM3_PSC = 0;
0x1F2A	0x2100    MOVS	R1, #0
0x1F2C	0x480C    LDR	R0, [PC, #48]
0x1F2E	0x6001    STR	R1, [R0, #0]
;timer.c, 37 :: 		TIM3_ARR = 59999;
0x1F30	0xF64E215F  MOVW	R1, #59999
0x1F34	0x480B    LDR	R0, [PC, #44]
0x1F36	0x6001    STR	R1, [R0, #0]
;timer.c, 38 :: 		NVIC_IntEnable(IVT_INT_TIM3);
0x1F38	0xF240002D  MOVW	R0, #45
0x1F3C	0xF7FFF87A  BL	_NVIC_IntEnable+0
;timer.c, 39 :: 		NVIC_SetIntPriority(IVT_INT_TIM3, _NVIC_INT_PRIORITY_LVL1);
0x1F40	0x2101    MOVS	R1, #1
0x1F42	0x202D    MOVS	R0, #45
0x1F44	0xF7FEFFAC  BL	_NVIC_SetIntPriority+0
;timer.c, 40 :: 		TIM3_DIER.UIE = 1;
0x1F48	0x2101    MOVS	R1, #1
0x1F4A	0xB249    SXTB	R1, R1
0x1F4C	0x4806    LDR	R0, [PC, #24]
0x1F4E	0x6001    STR	R1, [R0, #0]
;timer.c, 41 :: 		}
L_end_InitTimerMs:
0x1F50	0xF8DDE000  LDR	LR, [SP, #0]
0x1F54	0xB001    ADD	SP, SP, #4
0x1F56	0x4770    BX	LR
0x1F58	0x08044247  	RCC_APB1ENR+0
0x1F5C	0x80004200  	TIM3_CR1+0
0x1F60	0x04284000  	TIM3_PSC+0
0x1F64	0x042C4000  	TIM3_ARR+0
0x1F68	0x81804200  	TIM3_DIER+0
; end of _InitTimerMs
_initLCD:
;lcd.c, 38 :: 		void initLCD()
0x1AB0	0xB081    SUB	SP, SP, #4
0x1AB2	0xF8CDE000  STR	LR, [SP, #0]
;lcd.c, 40 :: 		GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0  | _GPIO_PINMASK_1);
0x1AB6	0x2103    MOVS	R1, #3
0x1AB8	0x480A    LDR	R0, [PC, #40]
0x1ABA	0xF000FF4D  BL	_GPIO_Digital_Output+0
;lcd.c, 41 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_10 | _GPIO_PINMASK_11);
0x1ABE	0xF6404100  MOVW	R1, #3072
0x1AC2	0x4809    LDR	R0, [PC, #36]
0x1AC4	0xF000FF48  BL	_GPIO_Digital_Output+0
;lcd.c, 42 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_13);
0x1AC8	0xF2420100  MOVW	R1, #8192
0x1ACC	0x4807    LDR	R0, [PC, #28]
0x1ACE	0xF000FF43  BL	_GPIO_Digital_Output+0
;lcd.c, 43 :: 		GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_7);
0x1AD2	0xF2400180  MOVW	R1, #128
0x1AD6	0x4806    LDR	R0, [PC, #24]
0x1AD8	0xF000FF3E  BL	_GPIO_Digital_Output+0
;lcd.c, 44 :: 		}
L_end_initLCD:
0x1ADC	0xF8DDE000  LDR	LR, [SP, #0]
0x1AE0	0xB001    ADD	SP, SP, #4
0x1AE2	0x4770    BX	LR
0x1AE4	0x00004002  	GPIOA_BASE+0
0x1AE8	0x04004002  	GPIOB_BASE+0
0x1AEC	0x08004002  	GPIOC_BASE+0
0x1AF0	0x0C004002  	GPIOD_BASE+0
; end of _initLCD
_initUltrasonic:
;ultrasonic.c, 7 :: 		void initUltrasonic() {
0x1A88	0xB081    SUB	SP, SP, #4
0x1A8A	0xF8CDE000  STR	LR, [SP, #0]
;ultrasonic.c, 8 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_14);
0x1A8E	0xF2440100  MOVW	R1, #16384
0x1A92	0x4806    LDR	R0, [PC, #24]
0x1A94	0xF000FF60  BL	_GPIO_Digital_Output+0
;ultrasonic.c, 9 :: 		GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_15);
0x1A98	0xF2480100  MOVW	R1, #32768
0x1A9C	0x4803    LDR	R0, [PC, #12]
0x1A9E	0xF7FFF9F3  BL	_GPIO_Digital_Input+0
;ultrasonic.c, 10 :: 		}
L_end_initUltrasonic:
0x1AA2	0xF8DDE000  LDR	LR, [SP, #0]
0x1AA6	0xB001    ADD	SP, SP, #4
0x1AA8	0x4770    BX	LR
0x1AAA	0xBF00    NOP
0x1AAC	0x04004002  	GPIOB_BASE+0
; end of _initUltrasonic
_GPIO_Digital_Input:
;__Lib_GPIO_32F4xx.c, 237 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0E88	0xB081    SUB	SP, SP, #4
0x0E8A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 238 :: 		
0x0E8E	0xF04F0242  MOV	R2, #66
0x0E92	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0E94	0xF000FB02  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 239 :: 		
L_end_GPIO_Digital_Input:
0x0E98	0xF8DDE000  LDR	LR, [SP, #0]
0x0E9C	0xB001    ADD	SP, SP, #4
0x0E9E	0x4770    BX	LR
; end of _GPIO_Digital_Input
_BME280_Init:
;bme280.c, 65 :: 		void BME280_Init() {
0x1AF4	0xB081    SUB	SP, SP, #4
0x1AF6	0xF8CDE000  STR	LR, [SP, #0]
;bme280.c, 67 :: 		I2C3_Init_Advanced(100000, &_GPIO_MODULE_I2C3_PA8_PC9);
0x1AFA	0x492B    LDR	R1, [PC, #172]
0x1AFC	0x482B    LDR	R0, [PC, #172]
0x1AFE	0xF7FFFA63  BL	_I2C3_Init_Advanced+0
;bme280.c, 68 :: 		NVIC_SetIntPriority(IVT_INT_I2C3_EV, _NVIC_INT_PRIORITY_LVL0);
0x1B02	0x2100    MOVS	R1, #0
0x1B04	0x2058    MOVS	R0, #88
0x1B06	0xF7FFF9CB  BL	_NVIC_SetIntPriority+0
;bme280.c, 69 :: 		NVIC_SetIntPriority(IVT_INT_I2C3_ER, _NVIC_INT_PRIORITY_LVL0);
0x1B0A	0x2100    MOVS	R1, #0
0x1B0C	0x2059    MOVS	R0, #89
0x1B0E	0xF7FFF9C7  BL	_NVIC_SetIntPriority+0
;bme280.c, 73 :: 		dig_T1 = BME_Read_DigU(BME280_REG_DIG_T1);
0x1B12	0x2088    MOVS	R0, #136
0x1B14	0xF7FFFA66  BL	_BME_Read_DigU+0
0x1B18	0x4925    LDR	R1, [PC, #148]
0x1B1A	0x8008    STRH	R0, [R1, #0]
;bme280.c, 74 :: 		dig_T2 = BME_Read_DigS(BME280_REG_DIG_T2);
0x1B1C	0x208A    MOVS	R0, #138
0x1B1E	0xF7FFF953  BL	_BME_Read_DigS+0
0x1B22	0x4924    LDR	R1, [PC, #144]
0x1B24	0x8008    STRH	R0, [R1, #0]
;bme280.c, 75 :: 		dig_T3 = BME_Read_DigS(BME280_REG_DIG_T3);
0x1B26	0x208C    MOVS	R0, #140
0x1B28	0xF7FFF94E  BL	_BME_Read_DigS+0
0x1B2C	0x4922    LDR	R1, [PC, #136]
0x1B2E	0x8008    STRH	R0, [R1, #0]
;bme280.c, 77 :: 		dig_P1 = BME_Read_DigU(BME280_REG_DIG_P1);
0x1B30	0x208E    MOVS	R0, #142
0x1B32	0xF7FFFA57  BL	_BME_Read_DigU+0
0x1B36	0x4921    LDR	R1, [PC, #132]
0x1B38	0x8008    STRH	R0, [R1, #0]
;bme280.c, 78 :: 		dig_P2 = BME_Read_DigS(BME280_REG_DIG_P2);
0x1B3A	0x2090    MOVS	R0, #144
0x1B3C	0xF7FFF944  BL	_BME_Read_DigS+0
0x1B40	0x491F    LDR	R1, [PC, #124]
0x1B42	0x8008    STRH	R0, [R1, #0]
;bme280.c, 79 :: 		dig_P3 = BME_Read_DigS(BME280_REG_DIG_P3);
0x1B44	0x2092    MOVS	R0, #146
0x1B46	0xF7FFF93F  BL	_BME_Read_DigS+0
0x1B4A	0x491E    LDR	R1, [PC, #120]
0x1B4C	0x8008    STRH	R0, [R1, #0]
;bme280.c, 80 :: 		dig_P4 = BME_Read_DigS(BME280_REG_DIG_P4);
0x1B4E	0x2094    MOVS	R0, #148
0x1B50	0xF7FFF93A  BL	_BME_Read_DigS+0
0x1B54	0x491C    LDR	R1, [PC, #112]
0x1B56	0x8008    STRH	R0, [R1, #0]
;bme280.c, 81 :: 		dig_P5 = BME_Read_DigS(BME280_REG_DIG_P5);
0x1B58	0x2096    MOVS	R0, #150
0x1B5A	0xF7FFF935  BL	_BME_Read_DigS+0
0x1B5E	0x491B    LDR	R1, [PC, #108]
0x1B60	0x8008    STRH	R0, [R1, #0]
;bme280.c, 82 :: 		dig_P6 = BME_Read_DigS(BME280_REG_DIG_P6);
0x1B62	0x2098    MOVS	R0, #152
0x1B64	0xF7FFF930  BL	_BME_Read_DigS+0
0x1B68	0x4919    LDR	R1, [PC, #100]
0x1B6A	0x8008    STRH	R0, [R1, #0]
;bme280.c, 83 :: 		dig_P7 = BME_Read_DigS(BME280_REG_DIG_P7);
0x1B6C	0x209A    MOVS	R0, #154
0x1B6E	0xF7FFF92B  BL	_BME_Read_DigS+0
0x1B72	0x4918    LDR	R1, [PC, #96]
0x1B74	0x8008    STRH	R0, [R1, #0]
;bme280.c, 84 :: 		dig_P8 = BME_Read_DigS(BME280_REG_DIG_P8);
0x1B76	0x209C    MOVS	R0, #156
0x1B78	0xF7FFF926  BL	_BME_Read_DigS+0
0x1B7C	0x4916    LDR	R1, [PC, #88]
0x1B7E	0x8008    STRH	R0, [R1, #0]
;bme280.c, 85 :: 		dig_P9 = BME_Read_DigS(BME280_REG_DIG_P9);
0x1B80	0x209E    MOVS	R0, #158
0x1B82	0xF7FFF921  BL	_BME_Read_DigS+0
0x1B86	0x4915    LDR	R1, [PC, #84]
0x1B88	0x8008    STRH	R0, [R1, #0]
;bme280.c, 87 :: 		data_[0] = BME280_REG_CONTROL;
0x1B8A	0x21F4    MOVS	R1, #244
0x1B8C	0x4814    LDR	R0, [PC, #80]
0x1B8E	0x7001    STRB	R1, [R0, #0]
;bme280.c, 88 :: 		data_[1] = BME280_REG_PRESSIRE_CONFIG_DATA;
0x1B90	0x21B7    MOVS	R1, #183
0x1B92	0x4814    LDR	R0, [PC, #80]
0x1B94	0x7001    STRB	R1, [R0, #0]
;bme280.c, 89 :: 		BME_Write(2);
0x1B96	0x2002    MOVS	R0, #2
0x1B98	0xB200    SXTH	R0, R0
0x1B9A	0xF7FFF901  BL	_BME_Write+0
;bme280.c, 90 :: 		}
L_end_BME280_Init:
0x1B9E	0xF8DDE000  LDR	LR, [SP, #0]
0x1BA2	0xB001    ADD	SP, SP, #4
0x1BA4	0x4770    BX	LR
0x1BA6	0xBF00    NOP
0x1BA8	0x32700000  	__GPIO_MODULE_I2C3_PA8_PC9+0
0x1BAC	0x86A00001  	#100000
0x1BB0	0x01A82000  	_dig_T1+0
0x1BB4	0x01AA2000  	_dig_T2+0
0x1BB8	0x01AC2000  	_dig_T3+0
0x1BBC	0x01A02000  	_dig_P1+0
0x1BC0	0x019E2000  	_dig_P2+0
0x1BC4	0x019C2000  	_dig_P3+0
0x1BC8	0x019A2000  	_dig_P4+0
0x1BCC	0x01982000  	_dig_P5+0
0x1BD0	0x01922000  	_dig_P6+0
0x1BD4	0x01A62000  	_dig_P7+0
0x1BD8	0x01A42000  	_dig_P8+0
0x1BDC	0x01A22000  	_dig_P9+0
0x1BE0	0x017D2000  	_data_+0
0x1BE4	0x017E2000  	_data_+1
; end of _BME280_Init
_I2C3_Init_Advanced:
;__Lib_I2C_123.c, 362 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x0FC8	0xB081    SUB	SP, SP, #4
0x0FCA	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_123.c, 363 :: 		
0x0FCE	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x0FD0	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x0FD2	0x4803    LDR	R0, [PC, #12]
0x0FD4	0xF7FFFBF6  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_123.c, 364 :: 		
L_end_I2C3_Init_Advanced:
0x0FD8	0xF8DDE000  LDR	LR, [SP, #0]
0x0FDC	0xB001    ADD	SP, SP, #4
0x0FDE	0x4770    BX	LR
0x0FE0	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_123.c, 380 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x07C4	0xB088    SUB	SP, SP, #32
0x07C6	0xF8CDE000  STR	LR, [SP, #0]
0x07CA	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_123.c, 382 :: 		
;__Lib_I2C_123.c, 388 :: 		
0x07CC	0x4B5E    LDR	R3, [PC, #376]
0x07CE	0x4298    CMP	R0, R3
0x07D0	0xD10D    BNE	L_I2Cx_Init_Advanced61
;__Lib_I2C_123.c, 389 :: 		
0x07D2	0x2401    MOVS	R4, #1
0x07D4	0xB264    SXTB	R4, R4
0x07D6	0x4B5D    LDR	R3, [PC, #372]
0x07D8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 390 :: 		
0x07DA	0x4C5D    LDR	R4, [PC, #372]
0x07DC	0x4B5D    LDR	R3, [PC, #372]
0x07DE	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 391 :: 		
0x07E0	0x4C5D    LDR	R4, [PC, #372]
0x07E2	0x4B5E    LDR	R3, [PC, #376]
0x07E4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 392 :: 		
0x07E6	0x4C5E    LDR	R4, [PC, #376]
0x07E8	0x4B5E    LDR	R3, [PC, #376]
0x07EA	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 393 :: 		
0x07EC	0xE020    B	L_I2Cx_Init_Advanced62
L_I2Cx_Init_Advanced61:
;__Lib_I2C_123.c, 394 :: 		
0x07EE	0x4B5E    LDR	R3, [PC, #376]
0x07F0	0x4298    CMP	R0, R3
0x07F2	0xD10D    BNE	L_I2Cx_Init_Advanced63
;__Lib_I2C_123.c, 395 :: 		
0x07F4	0x2401    MOVS	R4, #1
0x07F6	0xB264    SXTB	R4, R4
0x07F8	0x4B5C    LDR	R3, [PC, #368]
0x07FA	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 396 :: 		
0x07FC	0x4C5C    LDR	R4, [PC, #368]
0x07FE	0x4B55    LDR	R3, [PC, #340]
0x0800	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 397 :: 		
0x0802	0x4C5C    LDR	R4, [PC, #368]
0x0804	0x4B55    LDR	R3, [PC, #340]
0x0806	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 398 :: 		
0x0808	0x4C5B    LDR	R4, [PC, #364]
0x080A	0x4B56    LDR	R3, [PC, #344]
0x080C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 399 :: 		
0x080E	0xE00F    B	L_I2Cx_Init_Advanced64
L_I2Cx_Init_Advanced63:
0x0810	0x4B5A    LDR	R3, [PC, #360]
0x0812	0x4298    CMP	R0, R3
0x0814	0xD10C    BNE	L_I2Cx_Init_Advanced65
;__Lib_I2C_123.c, 400 :: 		
0x0816	0x2401    MOVS	R4, #1
0x0818	0xB264    SXTB	R4, R4
0x081A	0x4B59    LDR	R3, [PC, #356]
0x081C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 401 :: 		
0x081E	0x4C59    LDR	R4, [PC, #356]
0x0820	0x4B4C    LDR	R3, [PC, #304]
0x0822	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 402 :: 		
0x0824	0x4C58    LDR	R4, [PC, #352]
0x0826	0x4B4D    LDR	R3, [PC, #308]
0x0828	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 403 :: 		
0x082A	0x4C58    LDR	R4, [PC, #352]
0x082C	0x4B4D    LDR	R3, [PC, #308]
0x082E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 404 :: 		
L_I2Cx_Init_Advanced65:
L_I2Cx_Init_Advanced64:
L_I2Cx_Init_Advanced62:
;__Lib_I2C_123.c, 405 :: 		
0x0830	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x0832	0x9002    STR	R0, [SP, #8]
0x0834	0x4610    MOV	R0, R2
0x0836	0xF7FFFF47  BL	_GPIO_Alternate_Function_Enable+0
0x083A	0x9802    LDR	R0, [SP, #8]
0x083C	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_123.c, 410 :: 		
0x083E	0x1D03    ADDS	R3, R0, #4
0x0840	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_123.c, 412 :: 		
0x0842	0xB29C    UXTH	R4, R3
0x0844	0xF06F033F  MVN	R3, #63
0x0848	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x084C	0xB29D    UXTH	R5, R3
;__Lib_I2C_123.c, 414 :: 		
0x084E	0xAB03    ADD	R3, SP, #12
0x0850	0x9001    STR	R0, [SP, #4]
0x0852	0x4618    MOV	R0, R3
0x0854	0xF7FFFEF6  BL	_RCC_GetClocksFrequency+0
0x0858	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_123.c, 415 :: 		
; pclk1 start address is: 28 (R7)
0x085A	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_123.c, 417 :: 		
0x085C	0x9C05    LDR	R4, [SP, #20]
0x085E	0x4B4C    LDR	R3, [PC, #304]
0x0860	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x0864	0xB299    UXTH	R1, R3
;__Lib_I2C_123.c, 418 :: 		
0x0866	0xB29B    UXTH	R3, R3
0x0868	0xEA450403  ORR	R4, R5, R3, LSL #0
0x086C	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_123.c, 420 :: 		
0x086E	0x1D03    ADDS	R3, R0, #4
0x0870	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 424 :: 		
0x0872	0x2400    MOVS	R4, #0
0x0874	0x6803    LDR	R3, [R0, #0]
0x0876	0xF3640300  BFI	R3, R4, #0, #1
0x087A	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 427 :: 		
; tmpreg start address is: 8 (R2)
0x087C	0x2200    MOVS	R2, #0
;__Lib_I2C_123.c, 430 :: 		
0x087E	0x4B45    LDR	R3, [PC, #276]
0x0880	0x429E    CMP	R6, R3
0x0882	0xD812    BHI	L_I2Cx_Init_Advanced66
;__Lib_I2C_123.c, 433 :: 		
0x0884	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x0886	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x088A	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 435 :: 		
0x088C	0x2C04    CMP	R4, #4
0x088E	0xD202    BCS	L__I2Cx_Init_Advanced72
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 438 :: 		
; result start address is: 12 (R3)
0x0890	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x0892	0x461C    MOV	R4, R3
;__Lib_I2C_123.c, 439 :: 		
0x0894	0xE7FF    B	L_I2Cx_Init_Advanced67
L__I2Cx_Init_Advanced72:
;__Lib_I2C_123.c, 435 :: 		
;__Lib_I2C_123.c, 439 :: 		
L_I2Cx_Init_Advanced67:
;__Lib_I2C_123.c, 441 :: 		
; result start address is: 16 (R4)
0x0896	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x089A	0xB29A    UXTH	R2, R3
;__Lib_I2C_123.c, 443 :: 		
0x089C	0xF2000420  ADDW	R4, R0, #32
0x08A0	0x1C4B    ADDS	R3, R1, #1
0x08A2	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x08A4	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_123.c, 444 :: 		
0x08A6	0xB291    UXTH	R1, R2
0x08A8	0xE03F    B	L_I2Cx_Init_Advanced68
L_I2Cx_Init_Advanced66:
;__Lib_I2C_123.c, 449 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x08AA	0x2303    MOVS	R3, #3
0x08AC	0xFB06F403  MUL	R4, R6, R3
0x08B0	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x08B4	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_123.c, 452 :: 		
0x08B8	0x2319    MOVS	R3, #25
0x08BA	0xFB06F503  MUL	R5, R6, R3
0x08BE	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x08C2	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_123.c, 454 :: 		
0x08C6	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_123.c, 456 :: 		
0x08CA	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_123.c, 458 :: 		
0x08CE	0x1B3C    SUB	R4, R7, R4
0x08D0	0x1AFB    SUB	R3, R7, R3
0x08D2	0x429C    CMP	R4, R3
0x08D4	0xD205    BCS	L_I2Cx_Init_Advanced69
;__Lib_I2C_123.c, 459 :: 		
0x08D6	0x2303    MOVS	R3, #3
0x08D8	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x08DA	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x08DE	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 460 :: 		
; result end address is: 16 (R4)
0x08E0	0xE006    B	L_I2Cx_Init_Advanced70
L_I2Cx_Init_Advanced69:
;__Lib_I2C_123.c, 462 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x08E2	0x2319    MOVS	R3, #25
0x08E4	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x08E6	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x08EA	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 463 :: 		
0x08EC	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 464 :: 		
L_I2Cx_Init_Advanced70:
;__Lib_I2C_123.c, 467 :: 		
; result start address is: 16 (R4)
0x08F0	0xF64073FF  MOVW	R3, #4095
0x08F4	0xEA040303  AND	R3, R4, R3, LSL #0
0x08F8	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced73
;__Lib_I2C_123.c, 470 :: 		
0x08FA	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 471 :: 		
0x08FE	0xE7FF    B	L_I2Cx_Init_Advanced71
L__I2Cx_Init_Advanced73:
;__Lib_I2C_123.c, 467 :: 		
;__Lib_I2C_123.c, 471 :: 		
L_I2Cx_Init_Advanced71:
;__Lib_I2C_123.c, 473 :: 		
; result start address is: 16 (R4)
0x0900	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x0904	0xB29B    UXTH	R3, R3
0x0906	0x431A    ORRS	R2, R3
0x0908	0xB292    UXTH	R2, R2
;__Lib_I2C_123.c, 475 :: 		
0x090A	0xF2000520  ADDW	R5, R0, #32
0x090E	0xF240132C  MOVW	R3, #300
0x0912	0xFB01F403  MUL	R4, R1, R3
0x0916	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x0918	0xF24033E8  MOVW	R3, #1000
0x091C	0xFBB4F3F3  UDIV	R3, R4, R3
0x0920	0xB29B    UXTH	R3, R3
0x0922	0x1C5B    ADDS	R3, R3, #1
0x0924	0xB29B    UXTH	R3, R3
0x0926	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x0928	0xB291    UXTH	R1, R2
;__Lib_I2C_123.c, 476 :: 		
L_I2Cx_Init_Advanced68:
;__Lib_I2C_123.c, 478 :: 		
; tmpreg start address is: 4 (R1)
0x092A	0xF200031C  ADDW	R3, R0, #28
0x092E	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_123.c, 480 :: 		
0x0930	0x2300    MOVS	R3, #0
0x0932	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 481 :: 		
0x0934	0x2401    MOVS	R4, #1
0x0936	0x6803    LDR	R3, [R0, #0]
0x0938	0xF3640300  BFI	R3, R4, #0, #1
0x093C	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 482 :: 		
L_end_I2Cx_Init_Advanced:
0x093E	0xF8DDE000  LDR	LR, [SP, #0]
0x0942	0xB008    ADD	SP, SP, #32
0x0944	0x4770    BX	LR
0x0946	0xBF00    NOP
0x0948	0x54004000  	I2C1_CR1+0
0x094C	0x08544247  	RCC_APB1ENR+0
0x0950	0xFFFFFFFF  	_I2C1_Start+0
0x0954	0x0AE42000  	_I2C_Start_Ptr+0
0x0958	0xFFFFFFFF  	_I2C1_Read+0
0x095C	0x0AE82000  	_I2C_Read_Ptr+0
0x0960	0xFFFFFFFF  	_I2C1_Write+0
0x0964	0x0AEC2000  	_I2C_Write_Ptr+0
0x0968	0x58004000  	I2C2_CR1+0
0x096C	0x08584247  	RCC_APB1ENR+0
0x0970	0xFFFFFFFF  	_I2C2_Start+0
0x0974	0xFFFFFFFF  	_I2C2_Read+0
0x0978	0xFFFFFFFF  	_I2C2_Write+0
0x097C	0x5C004000  	I2C3_CR1+0
0x0980	0x085C4247  	RCC_APB1ENR+0
0x0984	0x09BD0000  	_I2C3_Start+0
0x0988	0x09990000  	_I2C3_Read+0
0x098C	0x09D50000  	_I2C3_Write+0
0x0990	0x4240000F  	#1000000
0x0994	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 389 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0644	0xB082    SUB	SP, SP, #8
0x0646	0xF8CDE000  STR	LR, [SP, #0]
0x064A	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 391 :: 		
;__Lib_System_4XX.c, 393 :: 		
0x064C	0x4619    MOV	R1, R3
0x064E	0x9101    STR	R1, [SP, #4]
0x0650	0xF7FFFDC2  BL	_Get_Fosc_kHz+0
0x0654	0xF24031E8  MOVW	R1, #1000
0x0658	0xFB00F201  MUL	R2, R0, R1
0x065C	0x9901    LDR	R1, [SP, #4]
0x065E	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 396 :: 		
0x0660	0x4917    LDR	R1, [PC, #92]
0x0662	0x6809    LDR	R1, [R1, #0]
0x0664	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 397 :: 		
0x0668	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 398 :: 		
0x066A	0x4916    LDR	R1, [PC, #88]
0x066C	0x1889    ADDS	R1, R1, R2
0x066E	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0670	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 400 :: 		
0x0672	0x1D1A    ADDS	R2, R3, #4
0x0674	0x6819    LDR	R1, [R3, #0]
0x0676	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0678	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 403 :: 		
0x067A	0x4911    LDR	R1, [PC, #68]
0x067C	0x6809    LDR	R1, [R1, #0]
0x067E	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 404 :: 		
0x0682	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 405 :: 		
0x0684	0x490F    LDR	R1, [PC, #60]
0x0686	0x1889    ADDS	R1, R1, R2
0x0688	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x068A	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 407 :: 		
0x068C	0xF2030208  ADDW	R2, R3, #8
0x0690	0x1D19    ADDS	R1, R3, #4
0x0692	0x6809    LDR	R1, [R1, #0]
0x0694	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0696	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 410 :: 		
0x0698	0x4909    LDR	R1, [PC, #36]
0x069A	0x6809    LDR	R1, [R1, #0]
0x069C	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 411 :: 		
0x06A0	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 412 :: 		
0x06A2	0x4908    LDR	R1, [PC, #32]
0x06A4	0x1889    ADDS	R1, R1, R2
0x06A6	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x06A8	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 414 :: 		
0x06AA	0xF203020C  ADDW	R2, R3, #12
0x06AE	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x06B0	0x6809    LDR	R1, [R1, #0]
0x06B2	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x06B4	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 415 :: 		
L_end_RCC_GetClocksFrequency:
0x06B6	0xF8DDE000  LDR	LR, [SP, #0]
0x06BA	0xB002    ADD	SP, SP, #8
0x06BC	0x4770    BX	LR
0x06BE	0xBF00    NOP
0x06C0	0x38084002  	RCC_CFGR+0
0x06C4	0x016D2000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x01D8	0x4801    LDR	R0, [PC, #4]
0x01DA	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x01DC	0x4770    BX	LR
0x01DE	0xBF00    NOP
0x01E0	0x0AE02000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x06C8	0xB083    SUB	SP, SP, #12
0x06CA	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x06CE	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x06D0	0x00A1    LSLS	R1, R4, #2
0x06D2	0x1841    ADDS	R1, R0, R1
0x06D4	0x6809    LDR	R1, [R1, #0]
0x06D6	0xF1B13FFF  CMP	R1, #-1
0x06DA	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x06DC	0xF2000134  ADDW	R1, R0, #52
0x06E0	0x00A3    LSLS	R3, R4, #2
0x06E2	0x18C9    ADDS	R1, R1, R3
0x06E4	0x6809    LDR	R1, [R1, #0]
0x06E6	0x460A    MOV	R2, R1
0x06E8	0x18C1    ADDS	R1, R0, R3
0x06EA	0x6809    LDR	R1, [R1, #0]
0x06EC	0x9001    STR	R0, [SP, #4]
0x06EE	0xF8AD4008  STRH	R4, [SP, #8]
0x06F2	0x4608    MOV	R0, R1
0x06F4	0x4611    MOV	R1, R2
0x06F6	0xF7FFFD75  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x06FA	0xF8BD4008  LDRH	R4, [SP, #8]
0x06FE	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x0700	0x1C64    ADDS	R4, R4, #1
0x0702	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x0704	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0706	0xF8DDE000  LDR	LR, [SP, #0]
0x070A	0xB003    ADD	SP, SP, #12
0x070C	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x01E4	0xB083    SUB	SP, SP, #12
0x01E6	0xF8CDE000  STR	LR, [SP, #0]
0x01EA	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x01EC	0xF00403FF  AND	R3, R4, #255
0x01F0	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x01F2	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x01F4	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x01F8	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x01FA	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x01FC	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x0200	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x0202	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x0204	0x4A2D    LDR	R2, [PC, #180]
0x0206	0x9202    STR	R2, [SP, #8]
0x0208	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x020A	0x4A2D    LDR	R2, [PC, #180]
0x020C	0x9202    STR	R2, [SP, #8]
0x020E	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x0210	0x4A2C    LDR	R2, [PC, #176]
0x0212	0x9202    STR	R2, [SP, #8]
0x0214	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x0216	0x4A2C    LDR	R2, [PC, #176]
0x0218	0x9202    STR	R2, [SP, #8]
0x021A	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x021C	0x4A2B    LDR	R2, [PC, #172]
0x021E	0x9202    STR	R2, [SP, #8]
0x0220	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x0222	0x4A2B    LDR	R2, [PC, #172]
0x0224	0x9202    STR	R2, [SP, #8]
0x0226	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x0228	0x4A2A    LDR	R2, [PC, #168]
0x022A	0x9202    STR	R2, [SP, #8]
0x022C	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x022E	0x4A2A    LDR	R2, [PC, #168]
0x0230	0x9202    STR	R2, [SP, #8]
0x0232	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x0234	0x4A29    LDR	R2, [PC, #164]
0x0236	0x9202    STR	R2, [SP, #8]
0x0238	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x023A	0x2800    CMP	R0, #0
0x023C	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x023E	0x2801    CMP	R0, #1
0x0240	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x0242	0x2802    CMP	R0, #2
0x0244	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x0246	0x2803    CMP	R0, #3
0x0248	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x024A	0x2804    CMP	R0, #4
0x024C	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x024E	0x2805    CMP	R0, #5
0x0250	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x0252	0x2806    CMP	R0, #6
0x0254	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x0256	0x2807    CMP	R0, #7
0x0258	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x025A	0x2808    CMP	R0, #8
0x025C	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x025E	0x2201    MOVS	R2, #1
0x0260	0xB212    SXTH	R2, R2
0x0262	0xFA02F20C  LSL	R2, R2, R12
0x0266	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x026A	0x9802    LDR	R0, [SP, #8]
0x026C	0x460A    MOV	R2, R1
0x026E	0xF8BD1004  LDRH	R1, [SP, #4]
0x0272	0xF001F913  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x0276	0x9A02    LDR	R2, [SP, #8]
0x0278	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x027C	0xF1BC0F07  CMP	R12, #7
0x0280	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x0282	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x0284	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x0286	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x028A	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x028C	0x9101    STR	R1, [SP, #4]
0x028E	0x4601    MOV	R1, R0
0x0290	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x0292	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x0294	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x0296	0x0083    LSLS	R3, R0, #2
0x0298	0xF04F020F  MOV	R2, #15
0x029C	0x409A    LSLS	R2, R3
0x029E	0x43D3    MVN	R3, R2
0x02A0	0x680A    LDR	R2, [R1, #0]
0x02A2	0x401A    ANDS	R2, R3
0x02A4	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x02A6	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x02A8	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x02AC	0x680A    LDR	R2, [R1, #0]
0x02AE	0x431A    ORRS	R2, R3
0x02B0	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x02B2	0xF8DDE000  LDR	LR, [SP, #0]
0x02B6	0xB003    ADD	SP, SP, #12
0x02B8	0x4770    BX	LR
0x02BA	0xBF00    NOP
0x02BC	0x00004002  	#1073872896
0x02C0	0x04004002  	#1073873920
0x02C4	0x08004002  	#1073874944
0x02C8	0x0C004002  	#1073875968
0x02CC	0x10004002  	#1073876992
0x02D0	0x14004002  	#1073878016
0x02D4	0x18004002  	#1073879040
0x02D8	0x1C004002  	#1073880064
0x02DC	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_BME_Read_DigU:
;bme280.c, 51 :: 		uint16_t BME_Read_DigU(uint8_t reg) {
; reg start address is: 0 (R0)
0x0FE4	0xB081    SUB	SP, SP, #4
0x0FE6	0xF8CDE000  STR	LR, [SP, #0]
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
;bme280.c, 53 :: 		data_[0] = reg;
0x0FEA	0x490F    LDR	R1, [PC, #60]
0x0FEC	0x7008    STRB	R0, [R1, #0]
; reg end address is: 0 (R0)
;bme280.c, 54 :: 		I2C3_Start();
0x0FEE	0xF7FFFCE5  BL	_I2C3_Start+0
;bme280.c, 55 :: 		I2C3_Write(BME280_ADDRESS, data_, 1, END_MODE_RESTART);
0x0FF2	0xF2400300  MOVW	R3, #0
0x0FF6	0x2201    MOVS	R2, #1
0x0FF8	0x490B    LDR	R1, [PC, #44]
0x0FFA	0x2076    MOVS	R0, #118
0x0FFC	0xF7FFFCEA  BL	_I2C3_Write+0
;bme280.c, 56 :: 		I2C3_Read(BME280_ADDRESS, output, 2, END_MODE_STOP);
0x1000	0xF2400301  MOVW	R3, #1
0x1004	0x2202    MOVS	R2, #2
0x1006	0x4909    LDR	R1, [PC, #36]
0x1008	0x2076    MOVS	R0, #118
0x100A	0xF7FFFCC5  BL	_I2C3_Read+0
;bme280.c, 57 :: 		result = output[1];
0x100E	0x4908    LDR	R1, [PC, #32]
; result start address is: 0 (R0)
0x1010	0x7808    LDRB	R0, [R1, #0]
;bme280.c, 58 :: 		result <<= 8;
0x1012	0x0202    LSLS	R2, R0, #8
0x1014	0xB292    UXTH	R2, R2
; result end address is: 0 (R0)
;bme280.c, 59 :: 		result |= output[0];
0x1016	0x4905    LDR	R1, [PC, #20]
0x1018	0x7809    LDRB	R1, [R1, #0]
0x101A	0xEA420101  ORR	R1, R2, R1, LSL #0
;bme280.c, 60 :: 		return result;
0x101E	0xB288    UXTH	R0, R1
;bme280.c, 61 :: 		}
L_end_BME_Read_DigU:
0x1020	0xF8DDE000  LDR	LR, [SP, #0]
0x1024	0xB001    ADD	SP, SP, #4
0x1026	0x4770    BX	LR
0x1028	0x017D2000  	_data_+0
0x102C	0x01872000  	_output+0
0x1030	0x01882000  	_output+1
; end of _BME_Read_DigU
_I2C3_Start:
;__Lib_I2C_123.c, 354 :: 		
0x09BC	0xB081    SUB	SP, SP, #4
0x09BE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_123.c, 355 :: 		
0x09C2	0x4803    LDR	R0, [PC, #12]
0x09C4	0xF7FFFEA4  BL	_I2Cx_Start+0
;__Lib_I2C_123.c, 356 :: 		
L_end_I2C3_Start:
0x09C8	0xF8DDE000  LDR	LR, [SP, #0]
0x09CC	0xB001    ADD	SP, SP, #4
0x09CE	0x4770    BX	LR
0x09D0	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Start
_I2Cx_Start:
;__Lib_I2C_123.c, 157 :: 		
; I2C_BASE start address is: 0 (R0)
0x0710	0xB081    SUB	SP, SP, #4
0x0712	0xF8CDE000  STR	LR, [SP, #0]
0x0716	0x4604    MOV	R4, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 16 (R4)
;__Lib_I2C_123.c, 158 :: 		
0x0718	0x4620    MOV	R0, R4
0x071A	0xF7FFFD4F  BL	__Lib_I2C_123_I2Cx_Wait_For_Idle+0
;__Lib_I2C_123.c, 161 :: 		
0x071E	0x2201    MOVS	R2, #1
0x0720	0x6821    LDR	R1, [R4, #0]
0x0722	0xF3622108  BFI	R1, R2, #8, #1
0x0726	0x6021    STR	R1, [R4, #0]
;__Lib_I2C_123.c, 163 :: 		
0x0728	0xF2040114  ADDW	R1, R4, #20
0x072C	0x680A    LDR	R2, [R1, #0]
0x072E	0xF3C22140  UBFX	R1, R2, #9, #1
0x0732	0xB111    CBZ	R1, L_I2Cx_Start2
; I2C_BASE end address is: 16 (R4)
;__Lib_I2C_123.c, 164 :: 		
0x0734	0xF64F70FF  MOVW	R0, #65535
0x0738	0xE006    B	L_end_I2Cx_Start
;__Lib_I2C_123.c, 165 :: 		
L_I2Cx_Start2:
;__Lib_I2C_123.c, 166 :: 		
; I2C_BASE start address is: 16 (R4)
L_I2Cx_Start3:
; I2C_BASE end address is: 16 (R4)
; I2C_BASE start address is: 16 (R4)
0x073A	0x4905    LDR	R1, [PC, #20]
0x073C	0x4620    MOV	R0, R4
0x073E	0xF7FFFDCF  BL	_ChekXForEvent+0
0x0742	0xB900    CBNZ	R0, L_I2Cx_Start4
;__Lib_I2C_123.c, 167 :: 		
; I2C_BASE end address is: 16 (R4)
0x0744	0xE7F9    B	L_I2Cx_Start3
L_I2Cx_Start4:
;__Lib_I2C_123.c, 168 :: 		
0x0746	0x2000    MOVS	R0, #0
;__Lib_I2C_123.c, 169 :: 		
L_end_I2Cx_Start:
0x0748	0xF8DDE000  LDR	LR, [SP, #0]
0x074C	0xB001    ADD	SP, SP, #4
0x074E	0x4770    BX	LR
0x0750	0x00010003  	#196609
; end of _I2Cx_Start
__Lib_I2C_123_I2Cx_Wait_For_Idle:
;__Lib_I2C_123.c, 147 :: 		
; I2C_BASE start address is: 0 (R0)
0x01BC	0xB081    SUB	SP, SP, #4
0x01BE	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
0x01C2	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 148 :: 		
L___Lib_I2C_123_I2Cx_Wait_For_Idle0:
; I2C_BASE start address is: 12 (R3)
0x01C4	0x4618    MOV	R0, R3
0x01C6	0xF7FFFFED  BL	_I2Cx_Is_Idle+0
0x01CA	0xB900    CBNZ	R0, L___Lib_I2C_123_I2Cx_Wait_For_Idle1
;__Lib_I2C_123.c, 149 :: 		
; I2C_BASE end address is: 12 (R3)
0x01CC	0xE7FA    B	L___Lib_I2C_123_I2Cx_Wait_For_Idle0
L___Lib_I2C_123_I2Cx_Wait_For_Idle1:
;__Lib_I2C_123.c, 150 :: 		
L_end_I2Cx_Wait_For_Idle:
0x01CE	0xF8DDE000  LDR	LR, [SP, #0]
0x01D2	0xB001    ADD	SP, SP, #4
0x01D4	0x4770    BX	LR
; end of __Lib_I2C_123_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_123.c, 142 :: 		
; I2C_BASE start address is: 0 (R0)
0x01A4	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_123.c, 143 :: 		
0x01A6	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x01AA	0x680A    LDR	R2, [R1, #0]
0x01AC	0xF3C20140  UBFX	R1, R2, #1, #1
0x01B0	0xF0810101  EOR	R1, R1, #1
0x01B4	0xB2C9    UXTB	R1, R1
0x01B6	0xB2C8    UXTB	R0, R1
;__Lib_I2C_123.c, 144 :: 		
L_end_I2Cx_Is_Idle:
0x01B8	0xB001    ADD	SP, SP, #4
0x01BA	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_123.c, 152 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x02E0	0xB081    SUB	SP, SP, #4
0x02E2	0xF8CDE000  STR	LR, [SP, #0]
0x02E6	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_123.c, 153 :: 		
; I2C_BASE end address is: 0 (R0)
0x02E8	0xF7FFFF4E  BL	_I2Cx_Get_Status+0
0x02EC	0xEA000203  AND	R2, R0, R3, LSL #0
0x02F0	0x429A    CMP	R2, R3
0x02F2	0xF2400200  MOVW	R2, #0
0x02F6	0xD100    BNE	L__ChekXForEvent82
0x02F8	0x2201    MOVS	R2, #1
L__ChekXForEvent82:
; Event end address is: 12 (R3)
0x02FA	0xB2D0    UXTB	R0, R2
;__Lib_I2C_123.c, 154 :: 		
L_end_ChekXForEvent:
0x02FC	0xF8DDE000  LDR	LR, [SP, #0]
0x0300	0xB001    ADD	SP, SP, #4
0x0302	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_123.c, 129 :: 		
; I2C_BASE start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_123.c, 132 :: 		
0x018A	0xF2000114  ADDW	R1, R0, #20
0x018E	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_123.c, 133 :: 		
0x0190	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0194	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_123.c, 135 :: 		
0x0196	0x0409    LSLS	R1, R1, #16
0x0198	0xEA420101  ORR	R1, R2, R1, LSL #0
0x019C	0x4608    MOV	R0, R1
;__Lib_I2C_123.c, 136 :: 		
L_end_I2Cx_Get_Status:
0x019E	0xB001    ADD	SP, SP, #4
0x01A0	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C3_Write:
;__Lib_I2C_123.c, 374 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x09D4	0xB081    SUB	SP, SP, #4
0x09D6	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 375 :: 		
0x09DA	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x09DC	0x4613    MOV	R3, R2
0x09DE	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x09E0	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x09E2	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x09E4	0xF7FFFC8E  BL	_I2Cx_Write+0
0x09E8	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 376 :: 		
L_end_I2C3_Write:
0x09EA	0xF8DDE000  LDR	LR, [SP, #0]
0x09EE	0xB001    ADD	SP, SP, #4
0x09F0	0x4770    BX	LR
0x09F2	0xBF00    NOP
0x09F4	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Write
_I2Cx_Write:
;__Lib_I2C_123.c, 175 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0304	0xB081    SUB	SP, SP, #4
0x0306	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x030A	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_123.c, 177 :: 		
0x030C	0xF2000510  ADDW	R5, R0, #16
0x0310	0x004C    LSLS	R4, R1, #1
0x0312	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x0314	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
0x0316	0x4634    MOV	R4, R6
0x0318	0x4606    MOV	R6, R0
0x031A	0x4690    MOV	R8, R2
0x031C	0x461F    MOV	R7, R3
;__Lib_I2C_123.c, 178 :: 		
L_I2Cx_Write5:
; END_mode start address is: 16 (R4)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
0x031E	0x4922    LDR	R1, [PC, #136]
0x0320	0x4630    MOV	R0, R6
0x0322	0xF7FFFFDD  BL	_ChekXForEvent+0
0x0326	0xB900    CBNZ	R0, L_I2Cx_Write6
;__Lib_I2C_123.c, 179 :: 		
0x0328	0xE7F9    B	L_I2Cx_Write5
L_I2Cx_Write6:
;__Lib_I2C_123.c, 180 :: 		
; i start address is: 0 (R0)
0x032A	0x2000    MOVS	R0, #0
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 16 (R4)
; I2C_BASE end address is: 24 (R6)
0x032C	0x4621    MOV	R1, R4
L_I2Cx_Write7:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x032E	0x1E7C    SUBS	R4, R7, #1
0x0330	0x42A0    CMP	R0, R4
0x0332	0xD212    BCS	L_I2Cx_Write8
;__Lib_I2C_123.c, 181 :: 		
0x0334	0xF2060510  ADDW	R5, R6, #16
0x0338	0xEB080400  ADD	R4, R8, R0, LSL #0
0x033C	0x7824    LDRB	R4, [R4, #0]
0x033E	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x0340	0x4681    MOV	R9, R0
0x0342	0x460D    MOV	R5, R1
;__Lib_I2C_123.c, 182 :: 		
L_I2Cx_Write10:
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 36 (R9)
0x0344	0x4919    LDR	R1, [PC, #100]
0x0346	0x4630    MOV	R0, R6
0x0348	0xF7FFFFCA  BL	_ChekXForEvent+0
0x034C	0xB900    CBNZ	R0, L_I2Cx_Write11
;__Lib_I2C_123.c, 183 :: 		
0x034E	0xE7F9    B	L_I2Cx_Write10
L_I2Cx_Write11:
;__Lib_I2C_123.c, 180 :: 		
0x0350	0xF1090401  ADD	R4, R9, #1
; i end address is: 36 (R9)
; i start address is: 0 (R0)
0x0354	0x4620    MOV	R0, R4
;__Lib_I2C_123.c, 184 :: 		
0x0356	0x4629    MOV	R1, R5
; END_mode end address is: 20 (R5)
; count end address is: 28 (R7)
0x0358	0xE7E9    B	L_I2Cx_Write7
L_I2Cx_Write8:
;__Lib_I2C_123.c, 186 :: 		
; END_mode start address is: 4 (R1)
0x035A	0xF2060510  ADDW	R5, R6, #16
0x035E	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x0362	0x7824    LDRB	R4, [R4, #0]
0x0364	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x0366	0x460C    MOV	R4, R1
;__Lib_I2C_123.c, 187 :: 		
L_I2Cx_Write12:
; END_mode start address is: 16 (R4)
; I2C_BASE start address is: 24 (R6)
0x0368	0x4911    LDR	R1, [PC, #68]
0x036A	0x4630    MOV	R0, R6
0x036C	0xF7FFFFB8  BL	_ChekXForEvent+0
0x0370	0xB900    CBNZ	R0, L_I2Cx_Write13
;__Lib_I2C_123.c, 188 :: 		
0x0372	0xE7F9    B	L_I2Cx_Write12
L_I2Cx_Write13:
;__Lib_I2C_123.c, 189 :: 		
0x0374	0x2C01    CMP	R4, #1
0x0376	0xD105    BNE	L_I2Cx_Write14
; END_mode end address is: 16 (R4)
;__Lib_I2C_123.c, 190 :: 		
0x0378	0x2501    MOVS	R5, #1
0x037A	0x6834    LDR	R4, [R6, #0]
0x037C	0xF3652449  BFI	R4, R5, #9, #1
0x0380	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x0382	0xE00B    B	L_I2Cx_Write15
L_I2Cx_Write14:
;__Lib_I2C_123.c, 192 :: 		
; I2C_BASE start address is: 24 (R6)
0x0384	0x2501    MOVS	R5, #1
0x0386	0x6834    LDR	R4, [R6, #0]
0x0388	0xF3652408  BFI	R4, R5, #8, #1
0x038C	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x038E	0x4634    MOV	R4, R6
;__Lib_I2C_123.c, 193 :: 		
L_I2Cx_Write16:
; I2C_BASE start address is: 16 (R4)
0x0390	0x4908    LDR	R1, [PC, #32]
0x0392	0x4620    MOV	R0, R4
0x0394	0xF7FFFFA4  BL	_ChekXForEvent+0
0x0398	0xB900    CBNZ	R0, L_I2Cx_Write17
;__Lib_I2C_123.c, 194 :: 		
; I2C_BASE end address is: 16 (R4)
0x039A	0xE7F9    B	L_I2Cx_Write16
L_I2Cx_Write17:
;__Lib_I2C_123.c, 195 :: 		
L_I2Cx_Write15:
;__Lib_I2C_123.c, 196 :: 		
0x039C	0x2000    MOVS	R0, #0
;__Lib_I2C_123.c, 197 :: 		
L_end_I2Cx_Write:
0x039E	0xF8DDE000  LDR	LR, [SP, #0]
0x03A2	0xB001    ADD	SP, SP, #4
0x03A4	0x4770    BX	LR
0x03A6	0xBF00    NOP
0x03A8	0x00820007  	#458882
0x03AC	0x00800007  	#458880
0x03B0	0x00840007  	#458884
0x03B4	0x00010003  	#196609
; end of _I2Cx_Write
_I2C3_Read:
;__Lib_I2C_123.c, 370 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0998	0xB081    SUB	SP, SP, #4
0x099A	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 371 :: 		
0x099E	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x09A0	0x4613    MOV	R3, R2
0x09A2	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x09A4	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x09A6	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x09A8	0xF7FFFD06  BL	_I2Cx_Read+0
0x09AC	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 372 :: 		
L_end_I2C3_Read:
0x09AE	0xF8DDE000  LDR	LR, [SP, #0]
0x09B2	0xB001    ADD	SP, SP, #4
0x09B4	0x4770    BX	LR
0x09B6	0xBF00    NOP
0x09B8	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Read
_I2Cx_Read:
;__Lib_I2C_123.c, 201 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x03B8	0xB082    SUB	SP, SP, #8
0x03BA	0xF8CDE000  STR	LR, [SP, #0]
0x03BE	0x461F    MOV	R7, R3
0x03C0	0xB2CB    UXTB	R3, R1
0x03C2	0x4601    MOV	R1, R0
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 12 (R3)
; buf start address is: 8 (R2)
; count start address is: 28 (R7)
; END_mode start address is: 24 (R6)
0x03C4	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_123.c, 203 :: 		
; i start address is: 32 (R8)
0x03C6	0xF04F0800  MOV	R8, #0
;__Lib_I2C_123.c, 204 :: 		
0x03CA	0xE129    B	L_I2Cx_Read18
; count end address is: 28 (R7)
;__Lib_I2C_123.c, 205 :: 		
L_I2Cx_Read20:
;__Lib_I2C_123.c, 206 :: 		
0x03CC	0xF2010510  ADDW	R5, R1, #16
0x03D0	0x005C    LSLS	R4, R3, #1
0x03D2	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x03D4	0xF0440401  ORR	R4, R4, #1
0x03D8	0xB2A4    UXTH	R4, R4
0x03DA	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
; i end address is: 32 (R8)
0x03DC	0x4633    MOV	R3, R6
0x03DE	0x4616    MOV	R6, R2
0x03E0	0x4642    MOV	R2, R8
;__Lib_I2C_123.c, 207 :: 		
L_I2Cx_Read21:
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x03E2	0xF2010414  ADDW	R4, R1, #20
0x03E6	0x6825    LDR	R5, [R4, #0]
0x03E8	0xF3C50440  UBFX	R4, R5, #1, #1
0x03EC	0xB904    CBNZ	R4, L_I2Cx_Read22
;__Lib_I2C_123.c, 208 :: 		
0x03EE	0xE7F8    B	L_I2Cx_Read21
L_I2Cx_Read22:
;__Lib_I2C_123.c, 209 :: 		
0x03F0	0x2500    MOVS	R5, #0
0x03F2	0x680C    LDR	R4, [R1, #0]
0x03F4	0xF365248A  BFI	R4, R5, #10, #1
0x03F8	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 210 :: 		
0x03FA	0xF2010414  ADDW	R4, R1, #20
0x03FE	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_123.c, 211 :: 		
0x0400	0xBF00    NOP
;__Lib_I2C_123.c, 212 :: 		
0x0402	0xF2010418  ADDW	R4, R1, #24
0x0406	0x6824    LDR	R4, [R4, #0]
0x0408	0x0424    LSLS	R4, R4, #16
0x040A	0xEA400404  ORR	R4, R0, R4, LSL #0
0x040E	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_123.c, 213 :: 		
0x0410	0x2B01    CMP	R3, #1
0x0412	0xD105    BNE	L_I2Cx_Read23
;__Lib_I2C_123.c, 214 :: 		
0x0414	0x2501    MOVS	R5, #1
0x0416	0x680C    LDR	R4, [R1, #0]
0x0418	0xF3652449  BFI	R4, R5, #9, #1
0x041C	0x600C    STR	R4, [R1, #0]
0x041E	0xE004    B	L_I2Cx_Read24
L_I2Cx_Read23:
;__Lib_I2C_123.c, 216 :: 		
0x0420	0x2501    MOVS	R5, #1
0x0422	0x680C    LDR	R4, [R1, #0]
0x0424	0xF3652408  BFI	R4, R5, #8, #1
0x0428	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 217 :: 		
L_I2Cx_Read24:
;__Lib_I2C_123.c, 218 :: 		
0x042A	0x4690    MOV	R8, R2
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
0x042C	0x461F    MOV	R7, R3
0x042E	0x4634    MOV	R4, R6
0x0430	0x460E    MOV	R6, R1
L_I2Cx_Read25:
; i end address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 16 (R4)
; END_mode start address is: 28 (R7)
; i start address is: 32 (R8)
0x0432	0x4981    LDR	R1, [PC, #516]
0x0434	0x4630    MOV	R0, R6
0x0436	0xF7FFFF53  BL	_ChekXForEvent+0
0x043A	0xB900    CBNZ	R0, L_I2Cx_Read26
;__Lib_I2C_123.c, 219 :: 		
0x043C	0xE7F9    B	L_I2Cx_Read25
L_I2Cx_Read26:
;__Lib_I2C_123.c, 220 :: 		
0x043E	0xEB040508  ADD	R5, R4, R8, LSL #0
; buf end address is: 16 (R4)
; i end address is: 32 (R8)
0x0442	0xF2060410  ADDW	R4, R6, #16
0x0446	0x6824    LDR	R4, [R4, #0]
0x0448	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 221 :: 		
0x044A	0x2F01    CMP	R7, #1
0x044C	0xD107    BNE	L_I2Cx_Read27
; I2C_BASE end address is: 24 (R6)
; END_mode end address is: 28 (R7)
0x044E	0x4630    MOV	R0, R6
;__Lib_I2C_123.c, 222 :: 		
L_I2Cx_Read28:
; I2C_BASE start address is: 0 (R0)
0x0450	0x6805    LDR	R5, [R0, #0]
0x0452	0xF3C52440  UBFX	R4, R5, #9, #1
0x0456	0x2C00    CMP	R4, #0
0x0458	0xD100    BNE	L_I2Cx_Read29
;__Lib_I2C_123.c, 223 :: 		
; I2C_BASE end address is: 0 (R0)
0x045A	0xE7F9    B	L_I2Cx_Read28
L_I2Cx_Read29:
;__Lib_I2C_123.c, 224 :: 		
0x045C	0xE006    B	L_I2Cx_Read30
L_I2Cx_Read27:
;__Lib_I2C_123.c, 226 :: 		
; I2C_BASE start address is: 24 (R6)
0x045E	0x4630    MOV	R0, R6
L_I2Cx_Read31:
; I2C_BASE end address is: 24 (R6)
; I2C_BASE start address is: 0 (R0)
0x0460	0x6805    LDR	R5, [R0, #0]
0x0462	0xF3C52400  UBFX	R4, R5, #8, #1
0x0466	0x2C00    CMP	R4, #0
0x0468	0xD100    BNE	L_I2Cx_Read32
;__Lib_I2C_123.c, 227 :: 		
; I2C_BASE end address is: 0 (R0)
0x046A	0xE7F9    B	L_I2Cx_Read31
L_I2Cx_Read32:
;__Lib_I2C_123.c, 228 :: 		
L_I2Cx_Read30:
;__Lib_I2C_123.c, 229 :: 		
0x046C	0xE0DF    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 231 :: 		
L_I2Cx_Read33:
;__Lib_I2C_123.c, 232 :: 		
; i start address is: 32 (R8)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; slave_address start address is: 12 (R3)
0x046E	0x2501    MOVS	R5, #1
0x0470	0x680C    LDR	R4, [R1, #0]
0x0472	0xF365248A  BFI	R4, R5, #10, #1
0x0476	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 233 :: 		
0x0478	0x2501    MOVS	R5, #1
0x047A	0x680C    LDR	R4, [R1, #0]
0x047C	0xF36524CB  BFI	R4, R5, #11, #1
0x0480	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 234 :: 		
0x0482	0xF2010510  ADDW	R5, R1, #16
0x0486	0x005C    LSLS	R4, R3, #1
0x0488	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x048A	0xF0440401  ORR	R4, R4, #1
0x048E	0xB2A4    UXTH	R4, R4
0x0490	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
; i end address is: 32 (R8)
0x0492	0x4643    MOV	R3, R8
;__Lib_I2C_123.c, 235 :: 		
L_I2Cx_Read34:
; i start address is: 12 (R3)
; END_mode start address is: 24 (R6)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0494	0xF2010414  ADDW	R4, R1, #20
0x0498	0x6825    LDR	R5, [R4, #0]
0x049A	0xF3C50440  UBFX	R4, R5, #1, #1
0x049E	0xB904    CBNZ	R4, L_I2Cx_Read35
;__Lib_I2C_123.c, 236 :: 		
0x04A0	0xE7F8    B	L_I2Cx_Read34
L_I2Cx_Read35:
;__Lib_I2C_123.c, 237 :: 		
0x04A2	0xF2010414  ADDW	R4, R1, #20
0x04A6	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_123.c, 238 :: 		
0x04A8	0xBF00    NOP
;__Lib_I2C_123.c, 239 :: 		
0x04AA	0xF2010418  ADDW	R4, R1, #24
0x04AE	0x6824    LDR	R4, [R4, #0]
0x04B0	0x0424    LSLS	R4, R4, #16
0x04B2	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_123.c, 240 :: 		
0x04B4	0x2500    MOVS	R5, #0
0x04B6	0x680C    LDR	R4, [R1, #0]
0x04B8	0xF365248A  BFI	R4, R5, #10, #1
0x04BC	0x600C    STR	R4, [R1, #0]
; i end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x04BE	0x9601    STR	R6, [SP, #4]
0x04C0	0x461E    MOV	R6, R3
0x04C2	0x9B01    LDR	R3, [SP, #4]
;__Lib_I2C_123.c, 241 :: 		
L_I2Cx_Read36:
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x04C4	0xF2010414  ADDW	R4, R1, #20
0x04C8	0x6825    LDR	R5, [R4, #0]
0x04CA	0xF3C50480  UBFX	R4, R5, #2, #1
0x04CE	0xB904    CBNZ	R4, L_I2Cx_Read37
;__Lib_I2C_123.c, 242 :: 		
0x04D0	0xE7F8    B	L_I2Cx_Read36
L_I2Cx_Read37:
;__Lib_I2C_123.c, 243 :: 		
0x04D2	0x2B01    CMP	R3, #1
0x04D4	0xD105    BNE	L_I2Cx_Read38
;__Lib_I2C_123.c, 244 :: 		
0x04D6	0x2501    MOVS	R5, #1
0x04D8	0x680C    LDR	R4, [R1, #0]
0x04DA	0xF3652449  BFI	R4, R5, #9, #1
0x04DE	0x600C    STR	R4, [R1, #0]
0x04E0	0xE004    B	L_I2Cx_Read39
L_I2Cx_Read38:
;__Lib_I2C_123.c, 246 :: 		
0x04E2	0x2501    MOVS	R5, #1
0x04E4	0x680C    LDR	R4, [R1, #0]
0x04E6	0xF3652408  BFI	R4, R5, #8, #1
0x04EA	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 247 :: 		
L_I2Cx_Read39:
;__Lib_I2C_123.c, 248 :: 		
0x04EC	0x1995    ADDS	R5, R2, R6
0x04EE	0xF2010410  ADDW	R4, R1, #16
0x04F2	0x6824    LDR	R4, [R4, #0]
0x04F4	0x702C    STRB	R4, [R5, #0]
0x04F6	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_123.c, 249 :: 		
0x04F8	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x04FA	0xF2010410  ADDW	R4, R1, #16
0x04FE	0x6824    LDR	R4, [R4, #0]
0x0500	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 250 :: 		
0x0502	0x2B01    CMP	R3, #1
0x0504	0xD106    BNE	L_I2Cx_Read40
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_123.c, 251 :: 		
L_I2Cx_Read41:
; I2C_BASE start address is: 4 (R1)
0x0506	0x680D    LDR	R5, [R1, #0]
0x0508	0xF3C52440  UBFX	R4, R5, #9, #1
0x050C	0xB904    CBNZ	R4, L_I2Cx_Read42
;__Lib_I2C_123.c, 252 :: 		
0x050E	0xE7FA    B	L_I2Cx_Read41
L_I2Cx_Read42:
;__Lib_I2C_123.c, 253 :: 		
0x0510	0x4608    MOV	R0, R1
0x0512	0xE005    B	L_I2Cx_Read43
L_I2Cx_Read40:
;__Lib_I2C_123.c, 255 :: 		
L_I2Cx_Read44:
; I2C_BASE end address is: 4 (R1)
; I2C_BASE start address is: 4 (R1)
0x0514	0x680D    LDR	R5, [R1, #0]
0x0516	0xF3C52400  UBFX	R4, R5, #8, #1
0x051A	0xB904    CBNZ	R4, L_I2Cx_Read45
;__Lib_I2C_123.c, 256 :: 		
0x051C	0xE7FA    B	L_I2Cx_Read44
L_I2Cx_Read45:
;__Lib_I2C_123.c, 257 :: 		
0x051E	0x4608    MOV	R0, R1
L_I2Cx_Read43:
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_123.c, 259 :: 		
; I2C_BASE start address is: 0 (R0)
0x0520	0x2500    MOVS	R5, #0
0x0522	0x6804    LDR	R4, [R0, #0]
0x0524	0xF36524CB  BFI	R4, R5, #11, #1
0x0528	0x6004    STR	R4, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 261 :: 		
0x052A	0xE080    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 263 :: 		
L_I2Cx_Read46:
;__Lib_I2C_123.c, 264 :: 		
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; count start address is: 28 (R7)
; slave_address start address is: 12 (R3)
0x052C	0x2501    MOVS	R5, #1
0x052E	0x680C    LDR	R4, [R1, #0]
0x0530	0xF365248A  BFI	R4, R5, #10, #1
0x0534	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 265 :: 		
0x0536	0xF2010510  ADDW	R5, R1, #16
0x053A	0x005C    LSLS	R4, R3, #1
0x053C	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x053E	0xF0440401  ORR	R4, R4, #1
0x0542	0xB2A4    UXTH	R4, R4
0x0544	0x602C    STR	R4, [R5, #0]
; count end address is: 28 (R7)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x0546	0x460D    MOV	R5, R1
0x0548	0x4614    MOV	R4, R2
0x054A	0x46B9    MOV	R9, R7
0x054C	0x46B0    MOV	R8, R6
;__Lib_I2C_123.c, 266 :: 		
L_I2Cx_Read47:
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 16 (R4)
; I2C_BASE start address is: 20 (R5)
0x054E	0x493B    LDR	R1, [PC, #236]
0x0550	0x4628    MOV	R0, R5
0x0552	0xF7FFFEC5  BL	_ChekXForEvent+0
0x0556	0xB900    CBNZ	R0, L_I2Cx_Read48
;__Lib_I2C_123.c, 267 :: 		
0x0558	0xE7F9    B	L_I2Cx_Read47
L_I2Cx_Read48:
;__Lib_I2C_123.c, 268 :: 		
; i start address is: 4 (R1)
0x055A	0x2100    MOVS	R1, #0
; END_mode end address is: 32 (R8)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 20 (R5)
; buf end address is: 16 (R4)
0x055C	0x4623    MOV	R3, R4
0x055E	0x462A    MOV	R2, R5
;__Lib_I2C_123.c, 269 :: 		
L_I2Cx_Read49:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x0560	0xF1A90403  SUB	R4, R9, #3
0x0564	0x42A1    CMP	R1, R4
0x0566	0xD214    BCS	L_I2Cx_Read50
; buf end address is: 12 (R3)
; END_mode end address is: 32 (R8)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
0x0568	0x468A    MOV	R10, R1
0x056A	0x4617    MOV	R7, R2
0x056C	0x461E    MOV	R6, R3
;__Lib_I2C_123.c, 270 :: 		
L_I2Cx_Read51:
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x056E	0x4932    LDR	R1, [PC, #200]
0x0570	0x4638    MOV	R0, R7
0x0572	0xF7FFFEB5  BL	_ChekXForEvent+0
0x0576	0xB900    CBNZ	R0, L_I2Cx_Read52
;__Lib_I2C_123.c, 271 :: 		
0x0578	0xE7F9    B	L_I2Cx_Read51
L_I2Cx_Read52:
;__Lib_I2C_123.c, 272 :: 		
0x057A	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x057E	0xF2070410  ADDW	R4, R7, #16
0x0582	0x6824    LDR	R4, [R4, #0]
0x0584	0x702C    STRB	R4, [R5, #0]
0x0586	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x058A	0x4621    MOV	R1, R4
;__Lib_I2C_123.c, 273 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x058C	0x4633    MOV	R3, R6
0x058E	0x463A    MOV	R2, R7
0x0590	0xE7E6    B	L_I2Cx_Read49
L_I2Cx_Read50:
;__Lib_I2C_123.c, 274 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x0592	0x9301    STR	R3, [SP, #4]
; END_mode end address is: 32 (R8)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
0x0594	0x460B    MOV	R3, R1
0x0596	0x4616    MOV	R6, R2
0x0598	0x4642    MOV	R2, R8
0x059A	0x9901    LDR	R1, [SP, #4]
L_I2Cx_Read53:
; buf end address is: 12 (R3)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x059C	0xF2060414  ADDW	R4, R6, #20
0x05A0	0x6825    LDR	R5, [R4, #0]
0x05A2	0xF3C50480  UBFX	R4, R5, #2, #1
0x05A6	0xB904    CBNZ	R4, L_I2Cx_Read54
;__Lib_I2C_123.c, 275 :: 		
0x05A8	0xE7F8    B	L_I2Cx_Read53
L_I2Cx_Read54:
;__Lib_I2C_123.c, 276 :: 		
0x05AA	0x2500    MOVS	R5, #0
0x05AC	0x6834    LDR	R4, [R6, #0]
0x05AE	0xF365248A  BFI	R4, R5, #10, #1
0x05B2	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_123.c, 277 :: 		
0x05B4	0x18CD    ADDS	R5, R1, R3
0x05B6	0xF2060410  ADDW	R4, R6, #16
0x05BA	0x6824    LDR	R4, [R4, #0]
0x05BC	0x702C    STRB	R4, [R5, #0]
0x05BE	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
; END_mode end address is: 8 (R2)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x05C0	0x4613    MOV	R3, R2
0x05C2	0x4602    MOV	R2, R0
;__Lib_I2C_123.c, 278 :: 		
L_I2Cx_Read55:
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 12 (R3)
0x05C4	0xF2060414  ADDW	R4, R6, #20
0x05C8	0x6825    LDR	R5, [R4, #0]
0x05CA	0xF3C50480  UBFX	R4, R5, #2, #1
0x05CE	0xB904    CBNZ	R4, L_I2Cx_Read56
;__Lib_I2C_123.c, 279 :: 		
0x05D0	0xE7F8    B	L_I2Cx_Read55
L_I2Cx_Read56:
;__Lib_I2C_123.c, 280 :: 		
0x05D2	0x2B01    CMP	R3, #1
0x05D4	0xD107    BNE	L_I2Cx_Read57
; END_mode end address is: 12 (R3)
;__Lib_I2C_123.c, 281 :: 		
0x05D6	0x2501    MOVS	R5, #1
0x05D8	0x6834    LDR	R4, [R6, #0]
0x05DA	0xF3652449  BFI	R4, R5, #9, #1
0x05DE	0x6034    STR	R4, [R6, #0]
0x05E0	0x4610    MOV	R0, R2
0x05E2	0x4632    MOV	R2, R6
0x05E4	0xE010    B	L_I2Cx_Read58
L_I2Cx_Read57:
;__Lib_I2C_123.c, 283 :: 		
0x05E6	0x2501    MOVS	R5, #1
0x05E8	0x6834    LDR	R4, [R6, #0]
0x05EA	0xF3652408  BFI	R4, R5, #8, #1
0x05EE	0x6034    STR	R4, [R6, #0]
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x05F0	0x4635    MOV	R5, R6
0x05F2	0x4616    MOV	R6, R2
0x05F4	0x460C    MOV	R4, R1
;__Lib_I2C_123.c, 284 :: 		
L_I2Cx_Read59:
; buf start address is: 16 (R4)
; I2C_BASE start address is: 20 (R5)
; i start address is: 24 (R6)
0x05F6	0x4912    LDR	R1, [PC, #72]
0x05F8	0x4628    MOV	R0, R5
0x05FA	0xF7FFFE71  BL	_ChekXForEvent+0
0x05FE	0xB900    CBNZ	R0, L_I2Cx_Read60
;__Lib_I2C_123.c, 285 :: 		
0x0600	0xE7F9    B	L_I2Cx_Read59
L_I2Cx_Read60:
;__Lib_I2C_123.c, 286 :: 		
0x0602	0x4621    MOV	R1, R4
; i end address is: 24 (R6)
; buf end address is: 16 (R4)
0x0604	0x462A    MOV	R2, R5
0x0606	0x4630    MOV	R0, R6
L_I2Cx_Read58:
; I2C_BASE end address is: 20 (R5)
;__Lib_I2C_123.c, 287 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x0608	0x180D    ADDS	R5, R1, R0
0x060A	0xF2020410  ADDW	R4, R2, #16
0x060E	0x6824    LDR	R4, [R4, #0]
0x0610	0x702C    STRB	R4, [R5, #0]
0x0612	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_123.c, 288 :: 		
0x0614	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x0616	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x061A	0x6824    LDR	R4, [R4, #0]
0x061C	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 289 :: 		
0x061E	0xE006    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 291 :: 		
L_I2Cx_Read18:
; i start address is: 32 (R8)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; count start address is: 28 (R7)
; slave_address start address is: 12 (R3)
0x0620	0x2F01    CMP	R7, #1
0x0622	0xF43FAED3  BEQ	L_I2Cx_Read20
0x0626	0x2F02    CMP	R7, #2
0x0628	0xF43FAF21  BEQ	L_I2Cx_Read33
; i end address is: 32 (R8)
0x062C	0xE77E    B	L_I2Cx_Read46
; slave_address end address is: 12 (R3)
; count end address is: 28 (R7)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read19:
;__Lib_I2C_123.c, 292 :: 		
L_end_I2Cx_Read:
0x062E	0xF8DDE000  LDR	LR, [SP, #0]
0x0632	0xB002    ADD	SP, SP, #8
0x0634	0x4770    BX	LR
0x0636	0xBF00    NOP
0x0638	0x00400003  	#196672
0x063C	0x00020003  	#196610
0x0640	0x00010003  	#196609
; end of _I2Cx_Read
_BME_Read_DigS:
;bme280.c, 39 :: 		int16_t BME_Read_DigS(uint8_t reg) {
; reg start address is: 0 (R0)
0x0DC8	0xB081    SUB	SP, SP, #4
0x0DCA	0xF8CDE000  STR	LR, [SP, #0]
; reg end address is: 0 (R0)
; reg start address is: 0 (R0)
;bme280.c, 41 :: 		data_[0] = reg;
0x0DCE	0x490F    LDR	R1, [PC, #60]
0x0DD0	0x7008    STRB	R0, [R1, #0]
; reg end address is: 0 (R0)
;bme280.c, 42 :: 		I2C3_Start();
0x0DD2	0xF7FFFDF3  BL	_I2C3_Start+0
;bme280.c, 43 :: 		I2C3_Write(BME280_ADDRESS, data_, 1, END_MODE_RESTART);
0x0DD6	0xF2400300  MOVW	R3, #0
0x0DDA	0x2201    MOVS	R2, #1
0x0DDC	0x490B    LDR	R1, [PC, #44]
0x0DDE	0x2076    MOVS	R0, #118
0x0DE0	0xF7FFFDF8  BL	_I2C3_Write+0
;bme280.c, 44 :: 		I2C3_Read(BME280_ADDRESS, output, 2, END_MODE_STOP);
0x0DE4	0xF2400301  MOVW	R3, #1
0x0DE8	0x2202    MOVS	R2, #2
0x0DEA	0x4909    LDR	R1, [PC, #36]
0x0DEC	0x2076    MOVS	R0, #118
0x0DEE	0xF7FFFDD3  BL	_I2C3_Read+0
;bme280.c, 45 :: 		result = output[1];
0x0DF2	0x4908    LDR	R1, [PC, #32]
; result start address is: 0 (R0)
0x0DF4	0x7808    LDRB	R0, [R1, #0]
;bme280.c, 46 :: 		result <<= 8;
0x0DF6	0x0202    LSLS	R2, R0, #8
0x0DF8	0xB212    SXTH	R2, R2
; result end address is: 0 (R0)
;bme280.c, 47 :: 		result |= output[0];
0x0DFA	0x4905    LDR	R1, [PC, #20]
0x0DFC	0x7809    LDRB	R1, [R1, #0]
0x0DFE	0xEA420101  ORR	R1, R2, R1, LSL #0
;bme280.c, 48 :: 		return result;
0x0E02	0xB208    SXTH	R0, R1
;bme280.c, 49 :: 		}
L_end_BME_Read_DigS:
0x0E04	0xF8DDE000  LDR	LR, [SP, #0]
0x0E08	0xB001    ADD	SP, SP, #4
0x0E0A	0x4770    BX	LR
0x0E0C	0x017D2000  	_data_+0
0x0E10	0x01872000  	_output+0
0x0E14	0x01882000  	_output+1
; end of _BME_Read_DigS
_BME_Write:
;bme280.c, 25 :: 		void BME_Write( int len) {
; len start address is: 0 (R0)
0x0DA0	0xB081    SUB	SP, SP, #4
0x0DA2	0xF8CDE000  STR	LR, [SP, #0]
0x0DA6	0xB205    SXTH	R5, R0
; len end address is: 0 (R0)
; len start address is: 20 (R5)
;bme280.c, 26 :: 		I2C3_Start();
0x0DA8	0xF7FFFE08  BL	_I2C3_Start+0
;bme280.c, 27 :: 		I2C3_Write(BME280_ADDRESS, data_, len, END_MODE_STOP);
0x0DAC	0xF2400301  MOVW	R3, #1
0x0DB0	0xB22A    SXTH	R2, R5
; len end address is: 20 (R5)
0x0DB2	0x4904    LDR	R1, [PC, #16]
0x0DB4	0x2076    MOVS	R0, #118
0x0DB6	0xF7FFFE0D  BL	_I2C3_Write+0
;bme280.c, 28 :: 		}
L_end_BME_Write:
0x0DBA	0xF8DDE000  LDR	LR, [SP, #0]
0x0DBE	0xB001    ADD	SP, SP, #4
0x0DC0	0x4770    BX	LR
0x0DC2	0xBF00    NOP
0x0DC4	0x017D2000  	_data_+0
; end of _BME_Write
_USART2_Init:
;uart.c, 9 :: 		void USART2_Init()
0x1BE8	0xB081    SUB	SP, SP, #4
0x1BEA	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 12 :: 		RCC_AHB1ENR |= _GPIOD_CLOCK_ENABLE; //Enable PORTD Clock
0x1BEE	0x482C    LDR	R0, [PC, #176]
0x1BF0	0x6800    LDR	R0, [R0, #0]
0x1BF2	0xF0400108  ORR	R1, R0, #8
0x1BF6	0x482A    LDR	R0, [PC, #168]
0x1BF8	0x6001    STR	R1, [R0, #0]
;uart.c, 13 :: 		RCC_APB1ENR |= _USART_CLOCK_ENABLE; //Enable USART Clock
0x1BFA	0x482A    LDR	R0, [PC, #168]
0x1BFC	0x6800    LDR	R0, [R0, #0]
0x1BFE	0xF4403100  ORR	R1, R0, #131072
0x1C02	0x4828    LDR	R0, [PC, #160]
0x1C04	0x6001    STR	R1, [R0, #0]
;uart.c, 14 :: 		my_Delay_ms(_UART_INIT_DELAY);
0x1C06	0x200A    MOVS	R0, #10
0x1C08	0xF7FFF8BE  BL	_my_Delay_ms+0
;uart.c, 17 :: 		GPIOD_MODER |= _GPIOD_PIN6_MODE_AF | _GPIOD_PIN5_MODE_AF; //GPIOD Mode: Alternate Function
0x1C0C	0x4826    LDR	R0, [PC, #152]
0x1C0E	0x6800    LDR	R0, [R0, #0]
0x1C10	0xF4405120  ORR	R1, R0, #10240
0x1C14	0x4824    LDR	R0, [PC, #144]
0x1C16	0x6001    STR	R1, [R0, #0]
;uart.c, 18 :: 		GPIOD_OSPEEDR |= _GPIOD_PIN6_OSPEED_VERYHIGH | _GPIOD_PIN5_OSPEED_VERYHIGH; //GPIOD OSpeed: Very High Speed
0x1C18	0x4824    LDR	R0, [PC, #144]
0x1C1A	0x6800    LDR	R0, [R0, #0]
0x1C1C	0xF4405170  ORR	R1, R0, #15360
0x1C20	0x4822    LDR	R0, [PC, #136]
0x1C22	0x6001    STR	R1, [R0, #0]
;uart.c, 19 :: 		GPIOD_AFRL |= _GPIOD_PIN6_AF_USART2 | _GPIOD_PIN5_AF_USART2; //GPIOD AlternateFunction: USART2
0x1C24	0x4822    LDR	R0, [PC, #136]
0x1C26	0x6800    LDR	R0, [R0, #0]
0x1C28	0xF04061EE  ORR	R1, R0, #124780544
0x1C2C	0x4820    LDR	R0, [PC, #128]
0x1C2E	0x6001    STR	R1, [R0, #0]
;uart.c, 20 :: 		NVIC_IPR9 |= _NVIC_INT_USART2_PRIORITY_0;
0x1C30	0x4820    LDR	R0, [PC, #128]
0x1C32	0x6801    LDR	R1, [R0, #0]
0x1C34	0x481F    LDR	R0, [PC, #124]
0x1C36	0x6001    STR	R1, [R0, #0]
;uart.c, 21 :: 		NVIC_ISER1 |= _NVIC_INT_USART2;
0x1C38	0x481F    LDR	R0, [PC, #124]
0x1C3A	0x6800    LDR	R0, [R0, #0]
0x1C3C	0xF0400140  ORR	R1, R0, #64
0x1C40	0x481D    LDR	R0, [PC, #116]
0x1C42	0x6001    STR	R1, [R0, #0]
;uart.c, 22 :: 		USART2_BRR |= _USART_BAUD_RATE;
0x1C44	0x481D    LDR	R0, [PC, #116]
0x1C46	0x6801    LDR	R1, [R0, #0]
0x1C48	0x481D    LDR	R0, [PC, #116]
0x1C4A	0x4301    ORRS	R1, R0
0x1C4C	0x481B    LDR	R0, [PC, #108]
0x1C4E	0x6001    STR	R1, [R0, #0]
;uart.c, 23 :: 		USART2_CR1 |= _USART_ENABLE | _USART_RXNEIE | _USART_TE | _USART_RE;
0x1C50	0x481C    LDR	R0, [PC, #112]
0x1C52	0x6801    LDR	R1, [R0, #0]
0x1C54	0xF242002C  MOVW	R0, #8236
0x1C58	0x4301    ORRS	R1, R0
0x1C5A	0x481A    LDR	R0, [PC, #104]
0x1C5C	0x6001    STR	R1, [R0, #0]
;uart.c, 24 :: 		my_Delay_ms(_UART_INIT_DELAY);
0x1C5E	0x200A    MOVS	R0, #10
0x1C60	0xF7FFF892  BL	_my_Delay_ms+0
;uart.c, 25 :: 		NVIC_SetIntPriority(IVT_INT_USART2, _NVIC_INT_PRIORITY_LVL0);
0x1C64	0x2100    MOVS	R1, #0
0x1C66	0x2036    MOVS	R0, #54
0x1C68	0xF7FFF91A  BL	_NVIC_SetIntPriority+0
;uart.c, 28 :: 		receiveUART.flag = 0;
0x1C6C	0x2100    MOVS	R1, #0
0x1C6E	0x4816    LDR	R0, [PC, #88]
0x1C70	0x7001    STRB	R1, [R0, #0]
;uart.c, 29 :: 		receiveUART.bufferPointerWrite = 0;
0x1C72	0x2100    MOVS	R1, #0
0x1C74	0x4815    LDR	R0, [PC, #84]
0x1C76	0x8001    STRH	R1, [R0, #0]
;uart.c, 30 :: 		receiveUART.bufferPointerRead = 0;
0x1C78	0x2100    MOVS	R1, #0
0x1C7A	0x4815    LDR	R0, [PC, #84]
0x1C7C	0x8001    STRH	R1, [R0, #0]
;uart.c, 31 :: 		receiveUART.msgCount=0;
0x1C7E	0x2100    MOVS	R1, #0
0x1C80	0x4814    LDR	R0, [PC, #80]
0x1C82	0x8001    STRH	R1, [R0, #0]
;uart.c, 32 :: 		transmitUART.flag = 0;
0x1C84	0x2100    MOVS	R1, #0
0x1C86	0x4814    LDR	R0, [PC, #80]
0x1C88	0x7001    STRB	R1, [R0, #0]
;uart.c, 33 :: 		transmitUART.byteCount = 0;
0x1C8A	0x2100    MOVS	R1, #0
0x1C8C	0x4813    LDR	R0, [PC, #76]
0x1C8E	0x8001    STRH	R1, [R0, #0]
;uart.c, 34 :: 		transmitUART.bufferPointer = 0;
0x1C90	0x2100    MOVS	R1, #0
0x1C92	0x4813    LDR	R0, [PC, #76]
0x1C94	0x8001    STRH	R1, [R0, #0]
;uart.c, 35 :: 		}
L_end_USART2_Init:
0x1C96	0xF8DDE000  LDR	LR, [SP, #0]
0x1C9A	0xB001    ADD	SP, SP, #4
0x1C9C	0x4770    BX	LR
0x1C9E	0xBF00    NOP
0x1CA0	0x38304002  	RCC_AHB1ENR+0
0x1CA4	0x38404002  	RCC_APB1ENR+0
0x1CA8	0x0C004002  	GPIOD_MODER+0
0x1CAC	0x0C084002  	GPIOD_OSPEEDR+0
0x1CB0	0x0C204002  	GPIOD_AFRL+0
0x1CB4	0xE424E000  	NVIC_IPR9+0
0x1CB8	0xE104E000  	NVIC_ISER1+0
0x1CBC	0x44084000  	USART2_BRR+0
0x1CC0	0x0C350000  	#3125
0x1CC4	0x440C4000  	USART2_CR1+0
0x1CC8	0x01D42000  	_receiveUART+0
0x1CCC	0x01D82000  	_receiveUART+4
0x1CD0	0x01DA2000  	_receiveUART+6
0x1CD4	0x01D62000  	_receiveUART+2
0x1CD8	0x05C42000  	_transmitUART+0
0x1CDC	0x05C62000  	_transmitUART+2
0x1CE0	0x05C82000  	_transmitUART+4
; end of _USART2_Init
_my_Delay_ms:
;timer.c, 49 :: 		void my_Delay_ms(uint32_t num)
; num start address is: 0 (R0)
; num end address is: 0 (R0)
; num start address is: 0 (R0)
;timer.c, 51 :: 		tick_ms=0;
0x0D88	0x2200    MOVS	R2, #0
0x0D8A	0x4904    LDR	R1, [PC, #16]
0x0D8C	0x600A    STR	R2, [R1, #0]
; num end address is: 0 (R0)
;timer.c, 52 :: 		while(tick_ms<num);
L_my_Delay_ms4:
; num start address is: 0 (R0)
0x0D8E	0x4903    LDR	R1, [PC, #12]
0x0D90	0x6809    LDR	R1, [R1, #0]
0x0D92	0x4281    CMP	R1, R0
0x0D94	0xD200    BCS	L_my_Delay_ms5
; num end address is: 0 (R0)
0x0D96	0xE7FA    B	L_my_Delay_ms4
L_my_Delay_ms5:
;timer.c, 53 :: 		}
L_end_my_Delay_ms:
0x0D98	0x4770    BX	LR
0x0D9A	0xBF00    NOP
0x0D9C	0x01CC2000  	_tick_ms+0
; end of _my_Delay_ms
_RTCInit:
;timer.c, 55 :: 		void RTCInit(void) {
0x1CE4	0xB081    SUB	SP, SP, #4
0x1CE6	0xF8CDE000  STR	LR, [SP, #0]
;timer.c, 56 :: 		RCC_APB1ENR.PWREN = 1; // Enable RTC clock
0x1CEA	0x2101    MOVS	R1, #1
0x1CEC	0xB249    SXTB	R1, R1
0x1CEE	0x482E    LDR	R0, [PC, #184]
0x1CF0	0x6001    STR	R1, [R0, #0]
;timer.c, 57 :: 		PWR_CR.DBP = 1; // Allow access to RTC
0x1CF2	0x482E    LDR	R0, [PC, #184]
0x1CF4	0x6001    STR	R1, [R0, #0]
;timer.c, 58 :: 		RTC_WPR = 0xCA; // Unlock write protection
0x1CF6	0x21CA    MOVS	R1, #202
0x1CF8	0x482D    LDR	R0, [PC, #180]
0x1CFA	0x6001    STR	R1, [R0, #0]
;timer.c, 59 :: 		RTC_WPR = 0x53;
0x1CFC	0x2153    MOVS	R1, #83
0x1CFE	0x482C    LDR	R0, [PC, #176]
0x1D00	0x6001    STR	R1, [R0, #0]
;timer.c, 60 :: 		if (RCC_BDCR.RTCEN==0) { // if RTC is disabled,
0x1D02	0x492C    LDR	R1, [PC, #176]
0x1D04	0x6808    LDR	R0, [R1, #0]
0x1D06	0xB938    CBNZ	R0, L_RTCInit6
;timer.c, 61 :: 		RCC_BDCR = 0x00010000; // Reset the backup domain
0x1D08	0xF44F3180  MOV	R1, #65536
0x1D0C	0x482A    LDR	R0, [PC, #168]
0x1D0E	0x6001    STR	R1, [R0, #0]
;timer.c, 62 :: 		RCC_BDCR = 0x00008101; // Set RTCEN, select LSE, set LSEON
0x1D10	0xF2481101  MOVW	R1, #33025
0x1D14	0x4828    LDR	R0, [PC, #160]
0x1D16	0x6001    STR	R1, [R0, #0]
;timer.c, 63 :: 		}
L_RTCInit6:
;timer.c, 64 :: 		while (RTC_ISR.RSF!=1) // Wait for RTC APB registers synchronization
L_RTCInit7:
0x1D18	0x4928    LDR	R1, [PC, #160]
0x1D1A	0x6808    LDR	R0, [R1, #0]
0x1D1C	0xB900    CBNZ	R0, L_RTCInit8
;timer.c, 65 :: 		;
0x1D1E	0xE7FB    B	L_RTCInit7
L_RTCInit8:
;timer.c, 66 :: 		while (RCC_BDCR.LSERDY!=1) // Wait till LSE is ready
L_RTCInit9:
0x1D20	0x4927    LDR	R1, [PC, #156]
0x1D22	0x6808    LDR	R0, [R1, #0]
0x1D24	0xB900    CBNZ	R0, L_RTCInit10
;timer.c, 67 :: 		;
0x1D26	0xE7FB    B	L_RTCInit9
L_RTCInit10:
;timer.c, 69 :: 		EXTI_IMR.MR22 = 1; // Set EXTI22 for wake-up timer
0x1D28	0x2101    MOVS	R1, #1
0x1D2A	0xB249    SXTB	R1, R1
0x1D2C	0x4825    LDR	R0, [PC, #148]
0x1D2E	0x6001    STR	R1, [R0, #0]
;timer.c, 70 :: 		EXTI_RTSR.TR22 = 1;
0x1D30	0x4825    LDR	R0, [PC, #148]
0x1D32	0x6001    STR	R1, [R0, #0]
;timer.c, 71 :: 		RTC_CR.WUTE = 0; // Stop wake-up timer, to access it
0x1D34	0x2100    MOVS	R1, #0
0x1D36	0xB249    SXTB	R1, R1
0x1D38	0x4824    LDR	R0, [PC, #144]
0x1D3A	0x6001    STR	R1, [R0, #0]
;timer.c, 72 :: 		while (RTC_ISR.WUTWF!=1) // Wait for wake-up timer access
L_RTCInit11:
0x1D3C	0x4924    LDR	R1, [PC, #144]
0x1D3E	0x6808    LDR	R0, [R1, #0]
0x1D40	0xB900    CBNZ	R0, L_RTCInit12
;timer.c, 73 :: 		;
0x1D42	0xE7FB    B	L_RTCInit11
L_RTCInit12:
;timer.c, 74 :: 		RTC_CR.WUTIE = 1; // Enable wake-up timer interrupt
0x1D44	0x2201    MOVS	R2, #1
0x1D46	0xB252    SXTB	R2, R2
0x1D48	0x4822    LDR	R0, [PC, #136]
0x1D4A	0x6002    STR	R2, [R0, #0]
;timer.c, 75 :: 		RTC_WUTR = _RTC_TIME; // Set timer period in seconds
0x1D4C	0x215A    MOVS	R1, #90
0x1D4E	0x4822    LDR	R0, [PC, #136]
0x1D50	0x6001    STR	R1, [R0, #0]
;timer.c, 76 :: 		RTC_CR |= (0x00000004); // Clear WUCKSEL, to select LSE as clock
0x1D52	0x4822    LDR	R0, [PC, #136]
0x1D54	0x6800    LDR	R0, [R0, #0]
0x1D56	0xF0400104  ORR	R1, R0, #4
0x1D5A	0x4820    LDR	R0, [PC, #128]
0x1D5C	0x6001    STR	R1, [R0, #0]
;timer.c, 77 :: 		RTC_CR.WUTE = 1; // Enable wake-up timer
0x1D5E	0x481B    LDR	R0, [PC, #108]
0x1D60	0x6002    STR	R2, [R0, #0]
;timer.c, 79 :: 		RTC_ISR |= 0x00000080; // Enter initialization mode, bit 7
0x1D62	0x481F    LDR	R0, [PC, #124]
0x1D64	0x6800    LDR	R0, [R0, #0]
0x1D66	0xF0400180  ORR	R1, R0, #128
0x1D6A	0x481D    LDR	R0, [PC, #116]
0x1D6C	0x6001    STR	R1, [R0, #0]
;timer.c, 80 :: 		while (RTC_ISR.INITF!=1) // Confirm status, bit 6
L_RTCInit13:
0x1D6E	0x491D    LDR	R1, [PC, #116]
0x1D70	0x6808    LDR	R0, [R1, #0]
0x1D72	0xB900    CBNZ	R0, L_RTCInit14
;timer.c, 81 :: 		;
0x1D74	0xE7FB    B	L_RTCInit13
L_RTCInit14:
;timer.c, 86 :: 		RTC_ISR &= ~0x00000080; // Exit initialization mode
0x1D76	0x481A    LDR	R0, [PC, #104]
0x1D78	0x6800    LDR	R0, [R0, #0]
0x1D7A	0xF000017F  AND	R1, R0, #127
0x1D7E	0x4818    LDR	R0, [PC, #96]
0x1D80	0x6001    STR	R1, [R0, #0]
;timer.c, 88 :: 		RTC_WPR = 0xFF; // Lock write protect
0x1D82	0x21FF    MOVS	R1, #255
0x1D84	0x480A    LDR	R0, [PC, #40]
0x1D86	0x6001    STR	R1, [R0, #0]
;timer.c, 89 :: 		PWR_CR.DBP = 0; // Inhibit RTC access
0x1D88	0x2100    MOVS	R1, #0
0x1D8A	0xB249    SXTB	R1, R1
0x1D8C	0x4807    LDR	R0, [PC, #28]
0x1D8E	0x6001    STR	R1, [R0, #0]
;timer.c, 90 :: 		NVIC_IntEnable(IVT_INT_RTC_WKUP); // Enable RTC wake up interrupt
0x1D90	0xF2400013  MOVW	R0, #19
0x1D94	0xF7FFF94E  BL	_NVIC_IntEnable+0
;timer.c, 91 :: 		NVIC_SetIntPriority(IVT_INT_RTC_WKUP, _NVIC_INT_PRIORITY_LVL2);
0x1D98	0x2102    MOVS	R1, #2
0x1D9A	0x2013    MOVS	R0, #19
0x1D9C	0xF7FFF880  BL	_NVIC_SetIntPriority+0
;timer.c, 92 :: 		}
L_end_RTCInit:
0x1DA0	0xF8DDE000  LDR	LR, [SP, #0]
0x1DA4	0xB001    ADD	SP, SP, #4
0x1DA6	0x4770    BX	LR
0x1DA8	0x08704247  	RCC_APB1ENR+0
0x1DAC	0x0020420E  	PWR_CR+0
0x1DB0	0x28244000  	RTC_WPR+0
0x1DB4	0x0E3C4247  	RCC_BDCR+0
0x1DB8	0x38704002  	RCC_BDCR+0
0x1DBC	0x01944205  	RTC_ISR+0
0x1DC0	0x0E044247  	RCC_BDCR+0
0x1DC4	0x80584227  	EXTI_IMR+0
0x1DC8	0x81584227  	EXTI_RTSR+0
0x1DCC	0x01284205  	RTC_CR+0
0x1DD0	0x01884205  	RTC_ISR+0
0x1DD4	0x01384205  	RTC_CR+0
0x1DD8	0x28144000  	RTC_WUTR+0
0x1DDC	0x28084000  	RTC_CR+0
0x1DE0	0x280C4000  	RTC_ISR+0
0x1DE4	0x01984205  	RTC_ISR+0
; end of _RTCInit
_showText:
;lcd.c, 28 :: 		void showText(uint8_t* text)
0x27E4	0xB082    SUB	SP, SP, #8
0x27E6	0xF8CDE000  STR	LR, [SP, #0]
0x27EA	0x9001    STR	R0, [SP, #4]
;lcd.c, 30 :: 		Lcd_Init();
0x27EC	0xF7FFF826  BL	_Lcd_Init+0
;lcd.c, 31 :: 		My_Delay_ms(DELAY_LCD);
0x27F0	0x2064    MOVS	R0, #100
0x27F2	0xF7FEFAC9  BL	_my_Delay_ms+0
;lcd.c, 32 :: 		Lcd_Cmd(_LCD_CLEAR);
0x27F6	0x2001    MOVS	R0, #1
0x27F8	0xF7FFFBB8  BL	_Lcd_Cmd+0
;lcd.c, 33 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x27FC	0x200C    MOVS	R0, #12
0x27FE	0xF7FFFBB5  BL	_Lcd_Cmd+0
;lcd.c, 35 :: 		Lcd_Out(1,1,text);
0x2802	0x9A01    LDR	R2, [SP, #4]
0x2804	0x2101    MOVS	R1, #1
0x2806	0x2001    MOVS	R0, #1
0x2808	0xF7FFFAEE  BL	_Lcd_Out+0
;lcd.c, 36 :: 		}
L_end_showText:
0x280C	0xF8DDE000  LDR	LR, [SP, #0]
0x2810	0xB002    ADD	SP, SP, #8
0x2812	0x4770    BX	LR
; end of _showText
_Lcd_Init:
;__Lib_Lcd.c, 77 :: 		
0x183C	0xB086    SUB	SP, SP, #24
0x183E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Lcd.c, 80 :: 		
0x1842	0xF6400014  MOVW	R0, #lo_addr(LCD_EN+0)
;__Lib_Lcd.c, 81 :: 		
0x1846	0xF2C40002  MOVT	R0, #hi_addr(LCD_EN+0)
;__Lib_Lcd.c, 82 :: 		
0x184A	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 83 :: 		
0x184E	0xEA4F3141  LSL	R1, R1, BitPos(LCD_EN+0)
;__Lib_Lcd.c, 85 :: 		
0x1852	0x4A85    LDR	R2, [PC, #532]
0x1854	0xB289    UXTH	R1, R1
0x1856	0xF7FFFE21  BL	_GPIO_Config+0
;__Lib_Lcd.c, 88 :: 		
0x185A	0xF6404014  MOVW	R0, #lo_addr(LCD_RS+0)
;__Lib_Lcd.c, 89 :: 		
0x185E	0xF2C40002  MOVT	R0, #hi_addr(LCD_RS+0)
;__Lib_Lcd.c, 90 :: 		
0x1862	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 91 :: 		
0x1866	0xEA4F11C1  LSL	R1, R1, BitPos(LCD_RS+0)
;__Lib_Lcd.c, 93 :: 		
0x186A	0x4A7F    LDR	R2, [PC, #508]
0x186C	0xB289    UXTH	R1, R1
0x186E	0xF7FFFE15  BL	_GPIO_Config+0
;__Lib_Lcd.c, 96 :: 		
0x1872	0xF2400014  MOVW	R0, #lo_addr(LCD_D4+0)
;__Lib_Lcd.c, 97 :: 		
0x1876	0xF2C40002  MOVT	R0, #hi_addr(LCD_D4+0)
;__Lib_Lcd.c, 98 :: 		
0x187A	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 99 :: 		
0x187E	0xEA4F0141  LSL	R1, R1, BitPos(LCD_D4+0)
;__Lib_Lcd.c, 101 :: 		
0x1882	0x4A79    LDR	R2, [PC, #484]
0x1884	0xB289    UXTH	R1, R1
0x1886	0xF7FFFE09  BL	_GPIO_Config+0
;__Lib_Lcd.c, 104 :: 		
0x188A	0xF2400014  MOVW	R0, #lo_addr(LCD_D5+0)
;__Lib_Lcd.c, 105 :: 		
0x188E	0xF2C40002  MOVT	R0, #hi_addr(LCD_D5+0)
;__Lib_Lcd.c, 106 :: 		
0x1892	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 107 :: 		
0x1896	0xEA4F0101  LSL	R1, R1, BitPos(LCD_D5+0)
;__Lib_Lcd.c, 109 :: 		
0x189A	0x4A73    LDR	R2, [PC, #460]
0x189C	0xB289    UXTH	R1, R1
0x189E	0xF7FFFDFD  BL	_GPIO_Config+0
;__Lib_Lcd.c, 112 :: 		
0x18A2	0xF2404014  MOVW	R0, #lo_addr(LCD_D6+0)
;__Lib_Lcd.c, 113 :: 		
0x18A6	0xF2C40002  MOVT	R0, #hi_addr(LCD_D6+0)
;__Lib_Lcd.c, 114 :: 		
0x18AA	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 115 :: 		
0x18AE	0xEA4F2181  LSL	R1, R1, BitPos(LCD_D6+0)
;__Lib_Lcd.c, 117 :: 		
0x18B2	0x4A6D    LDR	R2, [PC, #436]
0x18B4	0xB289    UXTH	R1, R1
0x18B6	0xF7FFFDF1  BL	_GPIO_Config+0
;__Lib_Lcd.c, 120 :: 		
0x18BA	0xF2404014  MOVW	R0, #lo_addr(LCD_D7+0)
;__Lib_Lcd.c, 121 :: 		
0x18BE	0xF2C40002  MOVT	R0, #hi_addr(LCD_D7+0)
;__Lib_Lcd.c, 122 :: 		
0x18C2	0xF04F0101  MOV	R1, #1
;__Lib_Lcd.c, 123 :: 		
0x18C6	0xEA4F21C1  LSL	R1, R1, BitPos(LCD_D7+0)
;__Lib_Lcd.c, 125 :: 		
0x18CA	0x4A67    LDR	R2, [PC, #412]
0x18CC	0xB289    UXTH	R1, R1
0x18CE	0xF7FFFDE5  BL	_GPIO_Config+0
;__Lib_Lcd.c, 127 :: 		
0x18D2	0x2100    MOVS	R1, #0
0x18D4	0xB249    SXTB	R1, R1
0x18D6	0x4865    LDR	R0, [PC, #404]
0x18D8	0x9005    STR	R0, [SP, #20]
0x18DA	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 128 :: 		
0x18DC	0x4864    LDR	R0, [PC, #400]
0x18DE	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 129 :: 		
0x18E0	0x4864    LDR	R0, [PC, #400]
0x18E2	0x9004    STR	R0, [SP, #16]
0x18E4	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 130 :: 		
0x18E6	0x4864    LDR	R0, [PC, #400]
0x18E8	0x9003    STR	R0, [SP, #12]
0x18EA	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 131 :: 		
0x18EC	0x4863    LDR	R0, [PC, #396]
0x18EE	0x9002    STR	R0, [SP, #8]
0x18F0	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 132 :: 		
0x18F2	0x4863    LDR	R0, [PC, #396]
0x18F4	0x9001    STR	R0, [SP, #4]
0x18F6	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 134 :: 		
0x18F8	0xF7FFFA8E  BL	_Delay_5500us+0
;__Lib_Lcd.c, 135 :: 		
0x18FC	0xF7FFFA8C  BL	_Delay_5500us+0
;__Lib_Lcd.c, 136 :: 		
0x1900	0xF7FFFA8A  BL	_Delay_5500us+0
;__Lib_Lcd.c, 139 :: 		
0x1904	0x2101    MOVS	R1, #1
0x1906	0xB249    SXTB	R1, R1
0x1908	0x485C    LDR	R0, [PC, #368]
0x190A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 140 :: 		
0x190C	0x9801    LDR	R0, [SP, #4]
0x190E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 141 :: 		
0x1910	0x9805    LDR	R0, [SP, #20]
0x1912	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 142 :: 		
0x1914	0xF7FFFAAC  BL	_Delay_1us+0
;__Lib_Lcd.c, 143 :: 		
0x1918	0x2100    MOVS	R1, #0
0x191A	0xB249    SXTB	R1, R1
0x191C	0x4853    LDR	R0, [PC, #332]
0x191E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 144 :: 		
0x1920	0xF7FFFA7A  BL	_Delay_5500us+0
;__Lib_Lcd.c, 146 :: 		
0x1924	0x2101    MOVS	R1, #1
0x1926	0xB249    SXTB	R1, R1
0x1928	0x4850    LDR	R0, [PC, #320]
0x192A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 147 :: 		
0x192C	0xF7FFFAA0  BL	_Delay_1us+0
;__Lib_Lcd.c, 148 :: 		
0x1930	0x2100    MOVS	R1, #0
0x1932	0xB249    SXTB	R1, R1
0x1934	0x484D    LDR	R0, [PC, #308]
0x1936	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 149 :: 		
0x1938	0xF7FFFA6E  BL	_Delay_5500us+0
;__Lib_Lcd.c, 151 :: 		
0x193C	0x2101    MOVS	R1, #1
0x193E	0xB249    SXTB	R1, R1
0x1940	0x484A    LDR	R0, [PC, #296]
0x1942	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 152 :: 		
0x1944	0xF7FFFA94  BL	_Delay_1us+0
;__Lib_Lcd.c, 153 :: 		
0x1948	0x2100    MOVS	R1, #0
0x194A	0xB249    SXTB	R1, R1
0x194C	0x4847    LDR	R0, [PC, #284]
0x194E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 154 :: 		
0x1950	0xF7FFFA62  BL	_Delay_5500us+0
;__Lib_Lcd.c, 157 :: 		
0x1954	0x2100    MOVS	R1, #0
0x1956	0xB249    SXTB	R1, R1
0x1958	0x4849    LDR	R0, [PC, #292]
0x195A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 158 :: 		
0x195C	0x2101    MOVS	R1, #1
0x195E	0xB249    SXTB	R1, R1
0x1960	0x9805    LDR	R0, [SP, #20]
0x1962	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 159 :: 		
0x1964	0xF7FFFA84  BL	_Delay_1us+0
;__Lib_Lcd.c, 160 :: 		
0x1968	0x2100    MOVS	R1, #0
0x196A	0xB249    SXTB	R1, R1
0x196C	0x483F    LDR	R0, [PC, #252]
0x196E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 161 :: 		
0x1970	0xF7FFFA52  BL	_Delay_5500us+0
;__Lib_Lcd.c, 164 :: 		
0x1974	0x2101    MOVS	R1, #1
0x1976	0xB249    SXTB	R1, R1
0x1978	0x483C    LDR	R0, [PC, #240]
0x197A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 165 :: 		
0x197C	0xF7FFFA78  BL	_Delay_1us+0
;__Lib_Lcd.c, 166 :: 		
0x1980	0x2100    MOVS	R1, #0
0x1982	0xB249    SXTB	R1, R1
0x1984	0x4839    LDR	R0, [PC, #228]
0x1986	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 168 :: 		
0x1988	0x9802    LDR	R0, [SP, #8]
0x198A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 169 :: 		
0x198C	0x2101    MOVS	R1, #1
0x198E	0xB249    SXTB	R1, R1
0x1990	0x9804    LDR	R0, [SP, #16]
0x1992	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 170 :: 		
0x1994	0x9805    LDR	R0, [SP, #20]
0x1996	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 171 :: 		
0x1998	0xF7FFFA6A  BL	_Delay_1us+0
;__Lib_Lcd.c, 172 :: 		
0x199C	0x2100    MOVS	R1, #0
0x199E	0xB249    SXTB	R1, R1
0x19A0	0x4832    LDR	R0, [PC, #200]
0x19A2	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 173 :: 		
0x19A4	0xF7FFFA38  BL	_Delay_5500us+0
;__Lib_Lcd.c, 176 :: 		
0x19A8	0x2100    MOVS	R1, #0
0x19AA	0xB249    SXTB	R1, R1
0x19AC	0x4831    LDR	R0, [PC, #196]
0x19AE	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 177 :: 		
0x19B0	0x2101    MOVS	R1, #1
0x19B2	0xB249    SXTB	R1, R1
0x19B4	0x9801    LDR	R0, [SP, #4]
0x19B6	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 178 :: 		
0x19B8	0x9805    LDR	R0, [SP, #20]
0x19BA	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 179 :: 		
0x19BC	0xF7FFFA58  BL	_Delay_1us+0
;__Lib_Lcd.c, 180 :: 		
0x19C0	0x2100    MOVS	R1, #0
0x19C2	0xB249    SXTB	R1, R1
0x19C4	0x4829    LDR	R0, [PC, #164]
0x19C6	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 182 :: 		
0x19C8	0x9801    LDR	R0, [SP, #4]
0x19CA	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 183 :: 		
0x19CC	0x2101    MOVS	R1, #1
0x19CE	0xB249    SXTB	R1, R1
0x19D0	0x9805    LDR	R0, [SP, #20]
0x19D2	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 184 :: 		
0x19D4	0xF7FFFA4C  BL	_Delay_1us+0
;__Lib_Lcd.c, 185 :: 		
0x19D8	0x2100    MOVS	R1, #0
0x19DA	0xB249    SXTB	R1, R1
0x19DC	0x4823    LDR	R0, [PC, #140]
0x19DE	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 186 :: 		
0x19E0	0xF7FFFA1A  BL	_Delay_5500us+0
;__Lib_Lcd.c, 189 :: 		
0x19E4	0x2101    MOVS	R1, #1
0x19E6	0xB249    SXTB	R1, R1
0x19E8	0x4820    LDR	R0, [PC, #128]
0x19EA	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 190 :: 		
0x19EC	0xF7FFFA40  BL	_Delay_1us+0
;__Lib_Lcd.c, 191 :: 		
0x19F0	0x2100    MOVS	R1, #0
0x19F2	0xB249    SXTB	R1, R1
0x19F4	0x481D    LDR	R0, [PC, #116]
0x19F6	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 193 :: 		
0x19F8	0x2101    MOVS	R1, #1
0x19FA	0xB249    SXTB	R1, R1
0x19FC	0x9801    LDR	R0, [SP, #4]
0x19FE	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 194 :: 		
0x1A00	0x9805    LDR	R0, [SP, #20]
0x1A02	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 195 :: 		
0x1A04	0xF7FFFA34  BL	_Delay_1us+0
;__Lib_Lcd.c, 196 :: 		
0x1A08	0x2100    MOVS	R1, #0
0x1A0A	0xB249    SXTB	R1, R1
0x1A0C	0x4817    LDR	R0, [PC, #92]
0x1A0E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 197 :: 		
0x1A10	0xF7FFFA02  BL	_Delay_5500us+0
;__Lib_Lcd.c, 200 :: 		
0x1A14	0x2100    MOVS	R1, #0
0x1A16	0xB249    SXTB	R1, R1
0x1A18	0x4819    LDR	R0, [PC, #100]
0x1A1A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 201 :: 		
0x1A1C	0x2101    MOVS	R1, #1
0x1A1E	0xB249    SXTB	R1, R1
0x1A20	0x9805    LDR	R0, [SP, #20]
0x1A22	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 202 :: 		
0x1A24	0xF7FFFA24  BL	_Delay_1us+0
;__Lib_Lcd.c, 203 :: 		
0x1A28	0x2100    MOVS	R1, #0
0x1A2A	0xB249    SXTB	R1, R1
0x1A2C	0x480F    LDR	R0, [PC, #60]
0x1A2E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 205 :: 		
0x1A30	0x2101    MOVS	R1, #1
0x1A32	0xB249    SXTB	R1, R1
0x1A34	0x9804    LDR	R0, [SP, #16]
0x1A36	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 206 :: 		
0x1A38	0x9803    LDR	R0, [SP, #12]
0x1A3A	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 207 :: 		
0x1A3C	0x9802    LDR	R0, [SP, #8]
0x1A3E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 208 :: 		
0x1A40	0x9801    LDR	R0, [SP, #4]
0x1A42	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 209 :: 		
0x1A44	0x9805    LDR	R0, [SP, #20]
0x1A46	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 210 :: 		
0x1A48	0xF7FFFA12  BL	_Delay_1us+0
;__Lib_Lcd.c, 211 :: 		
0x1A4C	0x2100    MOVS	R1, #0
0x1A4E	0xB249    SXTB	R1, R1
0x1A50	0x4806    LDR	R0, [PC, #24]
0x1A52	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 213 :: 		
0x1A54	0xF7FFF9E0  BL	_Delay_5500us+0
;__Lib_Lcd.c, 215 :: 		
0x1A58	0x2101    MOVS	R1, #1
0x1A5A	0xB249    SXTB	R1, R1
0x1A5C	0x4809    LDR	R0, [PC, #36]
0x1A5E	0x6001    STR	R1, [R0, #0]
;__Lib_Lcd.c, 216 :: 		
L_end_Lcd_Init:
0x1A60	0xF8DDE000  LDR	LR, [SP, #0]
0x1A64	0xB006    ADD	SP, SP, #24
0x1A66	0x4770    BX	LR
0x1A68	0x00140008  	#524308
0x1A6C	0x02B44241  	LCD_EN+0
0x1A70	0x829C4241  	LCD_RS+0
0x1A74	0x82AC4240  	LCD_D7+0
0x1A78	0x82A84240  	LCD_D6+0
0x1A7C	0x02804240  	LCD_D5+0
0x1A80	0x02844240  	LCD_D4+0
0x1A84	0x39202200  	__Lib_Lcd_cmd_status+0
; end of _Lcd_Init
_Delay_5500us:
;__Lib_Delays.c, 37 :: 		void Delay_5500us() {
;__Lib_Delays.c, 38 :: 		Delay_us(5500);
0x0E18	0xF645375E  MOVW	R7, #23390
0x0E1C	0xF2C00703  MOVT	R7, #3
L_Delay_5500us12:
0x0E20	0x1E7F    SUBS	R7, R7, #1
0x0E22	0xD1FD    BNE	L_Delay_5500us12
0x0E24	0xBF00    NOP
0x0E26	0xBF00    NOP
0x0E28	0xBF00    NOP
0x0E2A	0xBF00    NOP
0x0E2C	0xBF00    NOP
;__Lib_Delays.c, 39 :: 		}
L_end_Delay_5500us:
0x0E2E	0x4770    BX	LR
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x0E70	0xF2400726  MOVW	R7, #38
0x0E74	0xF2C00700  MOVT	R7, #0
L_Delay_1us0:
0x0E78	0x1E7F    SUBS	R7, R7, #1
0x0E7A	0xD1FD    BNE	L_Delay_1us0
0x0E7C	0xBF00    NOP
0x0E7E	0xBF00    NOP
0x0E80	0xBF00    NOP
0x0E82	0xBF00    NOP
0x0E84	0xBF00    NOP
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x0E86	0x4770    BX	LR
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c, 11 :: 		
; out_char start address is: 0 (R0)
0x1F6C	0xB088    SUB	SP, SP, #32
0x1F6E	0xF8CDE000  STR	LR, [SP, #0]
; out_char end address is: 0 (R0)
; out_char start address is: 0 (R0)
;__Lib_Lcd.c, 13 :: 		
0x1F72	0xF3C012C0  UBFX	R2, R0, #7, #1
0x1F76	0x4929    LDR	R1, [PC, #164]
0x1F78	0x9107    STR	R1, [SP, #28]
0x1F7A	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 14 :: 		
0x1F7C	0xF3C01280  UBFX	R2, R0, #6, #1
0x1F80	0x4927    LDR	R1, [PC, #156]
0x1F82	0x9106    STR	R1, [SP, #24]
0x1F84	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 15 :: 		
0x1F86	0xF3C01240  UBFX	R2, R0, #5, #1
0x1F8A	0x4926    LDR	R1, [PC, #152]
0x1F8C	0x9105    STR	R1, [SP, #20]
0x1F8E	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 16 :: 		
0x1F90	0xF3C01200  UBFX	R2, R0, #4, #1
0x1F94	0x4924    LDR	R1, [PC, #144]
0x1F96	0x9104    STR	R1, [SP, #16]
0x1F98	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 18 :: 		
0x1F9A	0x4A24    LDR	R2, [PC, #144]
0x1F9C	0x9203    STR	R2, [SP, #12]
0x1F9E	0x6811    LDR	R1, [R2, #0]
0x1FA0	0xF0810201  EOR	R2, R1, #1
0x1FA4	0x4922    LDR	R1, [PC, #136]
0x1FA6	0x9102    STR	R1, [SP, #8]
0x1FA8	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 21 :: 		
0x1FAA	0x2201    MOVS	R2, #1
0x1FAC	0xB252    SXTB	R2, R2
0x1FAE	0x4921    LDR	R1, [PC, #132]
0x1FB0	0x9101    STR	R1, [SP, #4]
0x1FB2	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 22 :: 		
0x1FB4	0xF7FEFF5C  BL	_Delay_1us+0
;__Lib_Lcd.c, 23 :: 		
0x1FB8	0x2200    MOVS	R2, #0
0x1FBA	0xB252    SXTB	R2, R2
0x1FBC	0x491D    LDR	R1, [PC, #116]
0x1FBE	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 26 :: 		
0x1FC0	0xF3C002C0  UBFX	R2, R0, #3, #1
0x1FC4	0x9907    LDR	R1, [SP, #28]
0x1FC6	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 27 :: 		
0x1FC8	0xF3C00280  UBFX	R2, R0, #2, #1
0x1FCC	0x9906    LDR	R1, [SP, #24]
0x1FCE	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 28 :: 		
0x1FD0	0xF3C00240  UBFX	R2, R0, #1, #1
0x1FD4	0x9905    LDR	R1, [SP, #20]
0x1FD6	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 29 :: 		
0x1FD8	0xF3C00200  UBFX	R2, R0, #0, #1
; out_char end address is: 0 (R0)
0x1FDC	0x9904    LDR	R1, [SP, #16]
0x1FDE	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 31 :: 		
0x1FE0	0x9903    LDR	R1, [SP, #12]
0x1FE2	0x460A    MOV	R2, R1
0x1FE4	0x6811    LDR	R1, [R2, #0]
0x1FE6	0xF0810201  EOR	R2, R1, #1
0x1FEA	0x9902    LDR	R1, [SP, #8]
0x1FEC	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 33 :: 		
0x1FEE	0x2201    MOVS	R2, #1
0x1FF0	0xB252    SXTB	R2, R2
0x1FF2	0x9901    LDR	R1, [SP, #4]
0x1FF4	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 34 :: 		
0x1FF6	0xF7FEFF3B  BL	_Delay_1us+0
;__Lib_Lcd.c, 35 :: 		
0x1FFA	0x2200    MOVS	R2, #0
0x1FFC	0xB252    SXTB	R2, R2
0x1FFE	0x490D    LDR	R1, [PC, #52]
0x2000	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 37 :: 		
0x2002	0x9903    LDR	R1, [SP, #12]
0x2004	0x460A    MOV	R2, R1
0x2006	0x6811    LDR	R1, [R2, #0]
0x2008	0xB111    CBZ	R1, L_Lcd_Cmd0
;__Lib_Lcd.c, 38 :: 		
0x200A	0xF7FEFF05  BL	_Delay_5500us+0
0x200E	0xE001    B	L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c, 40 :: 		
0x2010	0xF7FEFF22  BL	_Delay_50us+0
L_Lcd_Cmd1:
;__Lib_Lcd.c, 41 :: 		
L_end_Lcd_Cmd:
0x2014	0xF8DDE000  LDR	LR, [SP, #0]
0x2018	0xB008    ADD	SP, SP, #32
0x201A	0x4770    BX	LR
0x201C	0x82AC4240  	LCD_D7+0
0x2020	0x82A84240  	LCD_D6+0
0x2024	0x02804240  	LCD_D5+0
0x2028	0x02844240  	LCD_D4+0
0x202C	0x39202200  	__Lib_Lcd_cmd_status+0
0x2030	0x829C4241  	LCD_RS+0
0x2034	0x02B44241  	LCD_EN+0
; end of _Lcd_Cmd
_Delay_50us:
;__Lib_Delays.c, 25 :: 		void Delay_50us() {
;__Lib_Delays.c, 26 :: 		Delay_us(50);
0x0E58	0xF24077CE  MOVW	R7, #1998
0x0E5C	0xF2C00700  MOVT	R7, #0
L_Delay_50us6:
0x0E60	0x1E7F    SUBS	R7, R7, #1
0x0E62	0xD1FD    BNE	L_Delay_50us6
0x0E64	0xBF00    NOP
0x0E66	0xBF00    NOP
0x0E68	0xBF00    NOP
0x0E6A	0xBF00    NOP
0x0E6C	0xBF00    NOP
;__Lib_Delays.c, 27 :: 		}
L_end_Delay_50us:
0x0E6E	0x4770    BX	LR
; end of _Delay_50us
_Lcd_Out:
;__Lib_Lcd.c, 218 :: 		
; text start address is: 8 (R2)
; column start address is: 4 (R1)
; row start address is: 0 (R0)
0x1DE8	0xB081    SUB	SP, SP, #4
0x1DEA	0xF8CDE000  STR	LR, [SP, #0]
0x1DEE	0x4615    MOV	R5, R2
; text end address is: 8 (R2)
; column end address is: 4 (R1)
; row end address is: 0 (R0)
; row start address is: 0 (R0)
; column start address is: 4 (R1)
; text start address is: 20 (R5)
;__Lib_Lcd.c, 221 :: 		
0x1DF0	0xE009    B	L_Lcd_Out11
; row end address is: 0 (R0)
;__Lib_Lcd.c, 222 :: 		
L_Lcd_Out13:
; row start address is: 0 (R0)
0x1DF2	0x2080    MOVS	R0, #128
; row end address is: 0 (R0)
0x1DF4	0xE010    B	L_Lcd_Out12
;__Lib_Lcd.c, 223 :: 		
L_Lcd_Out14:
; row start address is: 0 (R0)
0x1DF6	0x20C0    MOVS	R0, #192
; row end address is: 0 (R0)
0x1DF8	0xE00E    B	L_Lcd_Out12
;__Lib_Lcd.c, 224 :: 		
L_Lcd_Out15:
; row start address is: 0 (R0)
0x1DFA	0x2094    MOVS	R0, #148
; row end address is: 0 (R0)
0x1DFC	0xE00C    B	L_Lcd_Out12
;__Lib_Lcd.c, 225 :: 		
L_Lcd_Out16:
; row start address is: 0 (R0)
0x1DFE	0x20D4    MOVS	R0, #212
; row end address is: 0 (R0)
0x1E00	0xE00A    B	L_Lcd_Out12
;__Lib_Lcd.c, 226 :: 		
L_Lcd_Out17:
; row start address is: 0 (R0)
0x1E02	0x2080    MOVS	R0, #128
;__Lib_Lcd.c, 227 :: 		
0x1E04	0xE008    B	L_Lcd_Out12
L_Lcd_Out11:
0x1E06	0x2801    CMP	R0, #1
0x1E08	0xD0F3    BEQ	L_Lcd_Out13
0x1E0A	0x2802    CMP	R0, #2
0x1E0C	0xD0F3    BEQ	L_Lcd_Out14
0x1E0E	0x2803    CMP	R0, #3
0x1E10	0xD0F3    BEQ	L_Lcd_Out15
0x1E12	0x2804    CMP	R0, #4
0x1E14	0xD0F3    BEQ	L_Lcd_Out16
; row end address is: 0 (R0)
0x1E16	0xE7F4    B	L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c, 228 :: 		
; row start address is: 0 (R0)
0x1E18	0x1E4B    SUBS	R3, R1, #1
0x1E1A	0xB21B    SXTH	R3, R3
; column end address is: 4 (R1)
0x1E1C	0x18C3    ADDS	R3, R0, R3
; row end address is: 0 (R0)
;__Lib_Lcd.c, 230 :: 		
0x1E1E	0xB2D8    UXTB	R0, R3
0x1E20	0xF000F8A4  BL	_Lcd_Cmd+0
;__Lib_Lcd.c, 231 :: 		
0x1E24	0x2400    MOVS	R4, #0
0x1E26	0xB264    SXTB	R4, R4
0x1E28	0x4B0B    LDR	R3, [PC, #44]
0x1E2A	0x601C    STR	R4, [R3, #0]
;__Lib_Lcd.c, 232 :: 		
; i start address is: 0 (R0)
0x1E2C	0x2000    MOVS	R0, #0
; text end address is: 20 (R5)
; i end address is: 0 (R0)
0x1E2E	0x462C    MOV	R4, R5
0x1E30	0xB2C5    UXTB	R5, R0
;__Lib_Lcd.c, 233 :: 		
L_Lcd_Out18:
; i start address is: 20 (R5)
; text start address is: 16 (R4)
0x1E32	0x1963    ADDS	R3, R4, R5
0x1E34	0x781B    LDRB	R3, [R3, #0]
0x1E36	0xB13B    CBZ	R3, L_Lcd_Out19
;__Lib_Lcd.c, 234 :: 		
0x1E38	0x1963    ADDS	R3, R4, R5
0x1E3A	0x781B    LDRB	R3, [R3, #0]
0x1E3C	0xB2D8    UXTB	R0, R3
0x1E3E	0xF7FEFFF7  BL	_Lcd_Chr_CP+0
0x1E42	0x1C6D    ADDS	R5, R5, #1
0x1E44	0xB2ED    UXTB	R5, R5
; text end address is: 16 (R4)
; i end address is: 20 (R5)
0x1E46	0xE7F4    B	L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c, 235 :: 		
0x1E48	0x2401    MOVS	R4, #1
0x1E4A	0xB264    SXTB	R4, R4
0x1E4C	0x4B02    LDR	R3, [PC, #8]
0x1E4E	0x601C    STR	R4, [R3, #0]
;__Lib_Lcd.c, 236 :: 		
L_end_Lcd_Out:
0x1E50	0xF8DDE000  LDR	LR, [SP, #0]
0x1E54	0xB001    ADD	SP, SP, #4
0x1E56	0x4770    BX	LR
0x1E58	0x39202200  	__Lib_Lcd_cmd_status+0
; end of _Lcd_Out
_Lcd_Chr_CP:
;__Lib_Lcd.c, 43 :: 		
; out_char start address is: 0 (R0)
0x0E30	0xB081    SUB	SP, SP, #4
0x0E32	0xF8CDE000  STR	LR, [SP, #0]
; out_char end address is: 0 (R0)
; out_char start address is: 0 (R0)
;__Lib_Lcd.c, 45 :: 		
0x0E36	0x2200    MOVS	R2, #0
0x0E38	0xB252    SXTB	R2, R2
0x0E3A	0x4906    LDR	R1, [PC, #24]
0x0E3C	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 46 :: 		
; out_char end address is: 0 (R0)
0x0E3E	0xF001F895  BL	_Lcd_Cmd+0
;__Lib_Lcd.c, 47 :: 		
0x0E42	0x2201    MOVS	R2, #1
0x0E44	0xB252    SXTB	R2, R2
0x0E46	0x4903    LDR	R1, [PC, #12]
0x0E48	0x600A    STR	R2, [R1, #0]
;__Lib_Lcd.c, 48 :: 		
L_end_Lcd_Chr_CP:
0x0E4A	0xF8DDE000  LDR	LR, [SP, #0]
0x0E4E	0xB001    ADD	SP, SP, #4
0x0E50	0x4770    BX	LR
0x0E52	0xBF00    NOP
0x0E54	0x39202200  	__Lib_Lcd_cmd_status+0
; end of _Lcd_Chr_CP
_sms:
;uart.c, 142 :: 		void sms(){
0x2814	0xB081    SUB	SP, SP, #4
0x2816	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 143 :: 		USART2_Send_Text("AT+CMGL=\"ALL\"\r\n");
0x281A	0x4809    LDR	R0, [PC, #36]
0x281C	0xF7FFFB30  BL	_USART2_Send_Text+0
;uart.c, 144 :: 		receive_SMS();
0x2820	0xF7FFFC0A  BL	_receive_SMS+0
;uart.c, 145 :: 		while(receivedFlag==1)
L_sms18:
0x2824	0x4807    LDR	R0, [PC, #28]
0x2826	0x7800    LDRB	R0, [R0, #0]
0x2828	0x2801    CMP	R0, #1
0x282A	0xD102    BNE	L_sms19
;uart.c, 146 :: 		receive_SMS();
0x282C	0xF7FFFC04  BL	_receive_SMS+0
0x2830	0xE7F8    B	L_sms18
L_sms19:
;uart.c, 147 :: 		USART2_Send_Text("AT+CMGD=1,4\r\n");
0x2832	0x4805    LDR	R0, [PC, #20]
0x2834	0xF7FFFB24  BL	_USART2_Send_Text+0
;uart.c, 148 :: 		}
L_end_sms:
0x2838	0xF8DDE000  LDR	LR, [SP, #0]
0x283C	0xB001    ADD	SP, SP, #4
0x283E	0x4770    BX	LR
0x2840	0x00222000  	?lstr1_uart+0
0x2844	0x00212000  	_receivedFlag+0
0x2848	0x00322000  	?lstr2_uart+0
; end of _sms
_USART2_Send_Text:
;uart.c, 150 :: 		void USART2_Send_Text(uint8_t* input)
; input start address is: 0 (R0)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
0x1E80	0x4603    MOV	R3, R0
; input end address is: 0 (R0)
;uart.c, 154 :: 		while(transmitUART.flag == 1);  //BusyWait for transmit register to get empty
L_USART2_Send_Text20:
; input start address is: 12 (R3)
0x1E82	0x491E    LDR	R1, [PC, #120]
0x1E84	0x7809    LDRB	R1, [R1, #0]
0x1E86	0x2901    CMP	R1, #1
0x1E88	0xD100    BNE	L_USART2_Send_Text21
0x1E8A	0xE7FA    B	L_USART2_Send_Text20
L_USART2_Send_Text21:
;uart.c, 156 :: 		transmitUART.byteCount = 0;
0x1E8C	0x2200    MOVS	R2, #0
0x1E8E	0x491C    LDR	R1, [PC, #112]
0x1E90	0x800A    STRH	R2, [R1, #0]
;uart.c, 157 :: 		input_Char = *input;
0x1E92	0x7818    LDRB	R0, [R3, #0]
; input_Char start address is: 0 (R0)
; input end address is: 12 (R3)
; input_Char end address is: 0 (R0)
;uart.c, 158 :: 		while((input_Char>=0x20 && input_Char<=0x7E) || input_Char==0x09 || input_Char==0x0A || input_Char==0x0D)
L_USART2_Send_Text22:
; input_Char start address is: 0 (R0)
; input start address is: 12 (R3)
0x1E94	0x2820    CMP	R0, #32
0x1E96	0xD302    BCC	L__USART2_Send_Text92
0x1E98	0x287E    CMP	R0, #126
0x1E9A	0xD800    BHI	L__USART2_Send_Text91
0x1E9C	0xE006    B	L__USART2_Send_Text89
L__USART2_Send_Text92:
L__USART2_Send_Text91:
0x1E9E	0x2809    CMP	R0, #9
0x1EA0	0xD004    BEQ	L__USART2_Send_Text95
0x1EA2	0x280A    CMP	R0, #10
0x1EA4	0xD002    BEQ	L__USART2_Send_Text94
0x1EA6	0x280D    CMP	R0, #13
0x1EA8	0xD000    BEQ	L__USART2_Send_Text93
; input end address is: 12 (R3)
; input_Char end address is: 0 (R0)
0x1EAA	0xE00E    B	L_USART2_Send_Text23
L__USART2_Send_Text89:
; input_Char start address is: 0 (R0)
; input start address is: 12 (R3)
L__USART2_Send_Text95:
L__USART2_Send_Text94:
L__USART2_Send_Text93:
;uart.c, 160 :: 		transmitUART.buffer[transmitUART.byteCount] = input_Char;
0x1EAC	0x4914    LDR	R1, [PC, #80]
0x1EAE	0x880A    LDRH	R2, [R1, #0]
0x1EB0	0x4914    LDR	R1, [PC, #80]
0x1EB2	0x1889    ADDS	R1, R1, R2
0x1EB4	0x7008    STRB	R0, [R1, #0]
; input_Char end address is: 0 (R0)
;uart.c, 161 :: 		++input;
0x1EB6	0x1C59    ADDS	R1, R3, #1
0x1EB8	0x460B    MOV	R3, R1
;uart.c, 162 :: 		input_Char = *input;
0x1EBA	0x7809    LDRB	R1, [R1, #0]
; input_Char start address is: 0 (R0)
0x1EBC	0xB2C8    UXTB	R0, R1
;uart.c, 163 :: 		++transmitUART.byteCount;
0x1EBE	0x4910    LDR	R1, [PC, #64]
0x1EC0	0x8809    LDRH	R1, [R1, #0]
0x1EC2	0x1C4A    ADDS	R2, R1, #1
0x1EC4	0x490E    LDR	R1, [PC, #56]
0x1EC6	0x800A    STRH	R2, [R1, #0]
;uart.c, 164 :: 		}
; input end address is: 12 (R3)
; input_Char end address is: 0 (R0)
0x1EC8	0xE7E4    B	L_USART2_Send_Text22
L_USART2_Send_Text23:
;uart.c, 166 :: 		transmitUART.bufferPointer = 0;
0x1ECA	0x2200    MOVS	R2, #0
0x1ECC	0x490E    LDR	R1, [PC, #56]
0x1ECE	0x800A    STRH	R2, [R1, #0]
;uart.c, 168 :: 		transmitUART.flag = 1;
0x1ED0	0x2201    MOVS	R2, #1
0x1ED2	0x490A    LDR	R1, [PC, #40]
0x1ED4	0x700A    STRB	R2, [R1, #0]
;uart.c, 169 :: 		USART2_DR = transmitUART.buffer[transmitUART.bufferPointer++];
0x1ED6	0x490C    LDR	R1, [PC, #48]
0x1ED8	0x880A    LDRH	R2, [R1, #0]
0x1EDA	0x490A    LDR	R1, [PC, #40]
0x1EDC	0x1889    ADDS	R1, R1, R2
0x1EDE	0x780A    LDRB	R2, [R1, #0]
0x1EE0	0x490A    LDR	R1, [PC, #40]
0x1EE2	0x600A    STR	R2, [R1, #0]
0x1EE4	0x4908    LDR	R1, [PC, #32]
0x1EE6	0x8809    LDRH	R1, [R1, #0]
0x1EE8	0x1C4A    ADDS	R2, R1, #1
0x1EEA	0x4907    LDR	R1, [PC, #28]
0x1EEC	0x800A    STRH	R2, [R1, #0]
;uart.c, 170 :: 		USART2_CR1 |= _USART_TXEIE;
0x1EEE	0x4908    LDR	R1, [PC, #32]
0x1EF0	0x6809    LDR	R1, [R1, #0]
0x1EF2	0xF0410280  ORR	R2, R1, #128
0x1EF6	0x4906    LDR	R1, [PC, #24]
0x1EF8	0x600A    STR	R2, [R1, #0]
;uart.c, 171 :: 		}
L_end_USART2_Send_Text:
0x1EFA	0x4770    BX	LR
0x1EFC	0x05C42000  	_transmitUART+0
0x1F00	0x05C62000  	_transmitUART+2
0x1F04	0x05CA2000  	_transmitUART+6
0x1F08	0x05C82000  	_transmitUART+4
0x1F0C	0x44044000  	USART2_DR+0
0x1F10	0x440C4000  	USART2_CR1+0
; end of _USART2_Send_Text
_receive_SMS:
;uart.c, 112 :: 		void receive_SMS()
0x2038	0xB086    SUB	SP, SP, #24
0x203A	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 114 :: 		USART2_Receive();
0x203E	0xF7FEFE4D  BL	_USART2_Receive+0
;uart.c, 115 :: 		my_Delay_ms(_TIMER_UART);
0x2042	0xF64030B8  MOVW	R0, #3000
0x2046	0xF7FEFE9F  BL	_my_Delay_ms+0
;uart.c, 116 :: 		if(receivedFlag==1)// && receivedTxt[0]=='+' && receivedTxt[1]=='C' &&   receivedTxt[2]=='M' && receivedTxt[3]=='G' && receivedTxt[4]=='L' && receivedTxt[5]==':')
0x204A	0x4805    LDR	R0, [PC, #20]
0x204C	0x7800    LDRB	R0, [R0, #0]
0x204E	0x2801    CMP	R0, #1
0x2050	0xD102    BNE	L_receive_SMS17
;uart.c, 118 :: 		int pos=0;
;uart.c, 119 :: 		int numQuote=0;
;uart.c, 121 :: 		int posNum=0;
;uart.c, 137 :: 		sendSMS(number);
0x2052	0xA801    ADD	R0, SP, #4
0x2054	0xF7FEFD34  BL	_sendSMS+0
;uart.c, 138 :: 		}
L_receive_SMS17:
;uart.c, 140 :: 		}
L_end_receive_SMS:
0x2058	0xF8DDE000  LDR	LR, [SP, #0]
0x205C	0xB006    ADD	SP, SP, #24
0x205E	0x4770    BX	LR
0x2060	0x00212000  	_receivedFlag+0
; end of _receive_SMS
_USART2_Receive:
;uart.c, 71 :: 		void USART2_Receive()
0x0CDC	0xB081    SUB	SP, SP, #4
0x0CDE	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 74 :: 		if(receiveUART.msgCount>0)
0x0CE2	0x4824    LDR	R0, [PC, #144]
0x0CE4	0x8800    LDRH	R0, [R0, #0]
0x0CE6	0x2800    CMP	R0, #0
0x0CE8	0xD93C    BLS	L_USART2_Receive6
;uart.c, 76 :: 		current=0;
; current start address is: 12 (R3)
0x0CEA	0x2300    MOVS	R3, #0
;uart.c, 77 :: 		receiveUART.msgCount--;
0x0CEC	0x4821    LDR	R0, [PC, #132]
0x0CEE	0x8800    LDRH	R0, [R0, #0]
0x0CF0	0x1E41    SUBS	R1, R0, #1
0x0CF2	0x4820    LDR	R0, [PC, #128]
0x0CF4	0x8001    STRH	R1, [R0, #0]
; current end address is: 12 (R3)
;uart.c, 78 :: 		while(receiveUART.buffer[receiveUART.bufferPointerRead]!=0x0A)
L_USART2_Receive7:
; current start address is: 12 (R3)
0x0CF6	0x4820    LDR	R0, [PC, #128]
0x0CF8	0x8801    LDRH	R1, [R0, #0]
0x0CFA	0x4820    LDR	R0, [PC, #128]
0x0CFC	0x1840    ADDS	R0, R0, R1
0x0CFE	0x7800    LDRB	R0, [R0, #0]
0x0D00	0x280A    CMP	R0, #10
0x0D02	0xD016    BEQ	L_USART2_Receive8
;uart.c, 80 :: 		receivedTxt[current]=receiveUART.buffer[receiveUART.bufferPointerRead++];
0x0D04	0x481E    LDR	R0, [PC, #120]
0x0D06	0x18C2    ADDS	R2, R0, R3
0x0D08	0x481B    LDR	R0, [PC, #108]
0x0D0A	0x8801    LDRH	R1, [R0, #0]
0x0D0C	0x481B    LDR	R0, [PC, #108]
0x0D0E	0x1840    ADDS	R0, R0, R1
0x0D10	0x7800    LDRB	R0, [R0, #0]
0x0D12	0x7010    STRB	R0, [R2, #0]
0x0D14	0x4818    LDR	R0, [PC, #96]
0x0D16	0x8800    LDRH	R0, [R0, #0]
0x0D18	0x1C41    ADDS	R1, R0, #1
0x0D1A	0x4817    LDR	R0, [PC, #92]
0x0D1C	0x8001    STRH	R1, [R0, #0]
;uart.c, 81 :: 		current++;
0x0D1E	0x1C5B    ADDS	R3, R3, #1
;uart.c, 82 :: 		if(receiveUART.bufferPointerRead==1000)
0x0D20	0x4815    LDR	R0, [PC, #84]
0x0D22	0x8800    LDRH	R0, [R0, #0]
0x0D24	0xF5B07F7A  CMP	R0, #1000
0x0D28	0xD102    BNE	L_USART2_Receive9
;uart.c, 83 :: 		receiveUART.bufferPointerRead=0;
0x0D2A	0x2100    MOVS	R1, #0
0x0D2C	0x4812    LDR	R0, [PC, #72]
0x0D2E	0x8001    STRH	R1, [R0, #0]
L_USART2_Receive9:
;uart.c, 84 :: 		}
0x0D30	0xE7E1    B	L_USART2_Receive7
L_USART2_Receive8:
;uart.c, 85 :: 		receiveUART.bufferPointerRead++;
0x0D32	0x4811    LDR	R0, [PC, #68]
0x0D34	0x8800    LDRH	R0, [R0, #0]
0x0D36	0x1C41    ADDS	R1, R0, #1
0x0D38	0x480F    LDR	R0, [PC, #60]
0x0D3A	0x8001    STRH	R1, [R0, #0]
;uart.c, 86 :: 		if(receiveUART.bufferPointerRead==1000)
0x0D3C	0x480E    LDR	R0, [PC, #56]
0x0D3E	0x8800    LDRH	R0, [R0, #0]
0x0D40	0xF5B07F7A  CMP	R0, #1000
0x0D44	0xD102    BNE	L_USART2_Receive10
;uart.c, 87 :: 		receiveUART.bufferPointerRead=0;
0x0D46	0x2100    MOVS	R1, #0
0x0D48	0x480B    LDR	R0, [PC, #44]
0x0D4A	0x8001    STRH	R1, [R0, #0]
L_USART2_Receive10:
;uart.c, 88 :: 		receivedTxt[current]=0;
0x0D4C	0x480C    LDR	R0, [PC, #48]
0x0D4E	0x18C1    ADDS	R1, R0, R3
; current end address is: 12 (R3)
0x0D50	0x2000    MOVS	R0, #0
0x0D52	0x7008    STRB	R0, [R1, #0]
;uart.c, 90 :: 		my_Delay_ms(1000);
0x0D54	0xF24030E8  MOVW	R0, #1000
0x0D58	0xF000F816  BL	_my_Delay_ms+0
;uart.c, 91 :: 		receivedFlag=1;
0x0D5C	0x2101    MOVS	R1, #1
0x0D5E	0x4809    LDR	R0, [PC, #36]
0x0D60	0x7001    STRB	R1, [R0, #0]
;uart.c, 92 :: 		}
0x0D62	0xE002    B	L_USART2_Receive11
L_USART2_Receive6:
;uart.c, 94 :: 		receivedFlag=0;
0x0D64	0x2100    MOVS	R1, #0
0x0D66	0x4807    LDR	R0, [PC, #28]
0x0D68	0x7001    STRB	R1, [R0, #0]
L_USART2_Receive11:
;uart.c, 95 :: 		}
L_end_USART2_Receive:
0x0D6A	0xF8DDE000  LDR	LR, [SP, #0]
0x0D6E	0xB001    ADD	SP, SP, #4
0x0D70	0x4770    BX	LR
0x0D72	0xBF00    NOP
0x0D74	0x01D62000  	_receiveUART+2
0x0D78	0x01DA2000  	_receiveUART+6
0x0D7C	0x01DC2000  	_receiveUART+8
0x0D80	0x09B22000  	_receivedTxt+0
0x0D84	0x00212000  	_receivedFlag+0
; end of _USART2_Receive
_sendSMS:
;uart.c, 189 :: 		void sendSMS(char* number) {
; number start address is: 0 (R0)
0x0AC0	0xB08F    SUB	SP, SP, #60
0x0AC2	0xF8CDE000  STR	LR, [SP, #0]
0x0AC6	0x4604    MOV	R4, R0
; number end address is: 0 (R0)
; number start address is: 16 (R4)
;uart.c, 190 :: 		int cz = 0x1A; // Ctrl + Z
; cz start address is: 20 (R5)
0x0AC8	0xF240051A  MOVW	R5, #26
0x0ACC	0xB22D    SXTH	R5, R5
;uart.c, 191 :: 		int pos=9;
; pos start address is: 24 (R6)
0x0ACE	0xF2400609  MOVW	R6, #9
0x0AD2	0xB236    SXTH	R6, R6
;uart.c, 192 :: 		int posNum=0;
; posNum start address is: 28 (R7)
0x0AD4	0xF2400700  MOVW	R7, #0
0x0AD8	0xB23F    SXTH	R7, R7
;uart.c, 194 :: 		USART2_Send_Text("AT+CMGF=1\r\n");
0x0ADA	0x493C    LDR	R1, [PC, #240]
0x0ADC	0x4608    MOV	R0, R1
0x0ADE	0xF001F9CF  BL	_USART2_Send_Text+0
;uart.c, 195 :: 		Delay_ms(1000);
0x0AE2	0xF8AD7004  STRH	R7, [SP, #4]
0x0AE6	0xF64517FE  MOVW	R7, #23038
0x0AEA	0xF2C02762  MOVT	R7, #610
0x0AEE	0xBF00    NOP
0x0AF0	0xBF00    NOP
L_sendSMS30:
0x0AF2	0x1E7F    SUBS	R7, R7, #1
0x0AF4	0xD1FD    BNE	L_sendSMS30
0x0AF6	0xBF00    NOP
0x0AF8	0xBF00    NOP
0x0AFA	0xBF00    NOP
0x0AFC	0xF9BD7004  LDRSH	R7, [SP, #4]
;uart.c, 196 :: 		txtNum[0]='A';  txtNum[1]='T';   txtNum[2]='+';   txtNum[3]='C';   txtNum[4]='M';  txtNum[5]='G';   txtNum[6]='S';  txtNum[7]='=';  txtNum[8]='"';
0x0B00	0xAB02    ADD	R3, SP, #8
0x0B02	0x2141    MOVS	R1, #65
0x0B04	0x7019    STRB	R1, [R3, #0]
0x0B06	0x1C5A    ADDS	R2, R3, #1
0x0B08	0x2154    MOVS	R1, #84
0x0B0A	0x7011    STRB	R1, [R2, #0]
0x0B0C	0x1C9A    ADDS	R2, R3, #2
0x0B0E	0x212B    MOVS	R1, #43
0x0B10	0x7011    STRB	R1, [R2, #0]
0x0B12	0x1CDA    ADDS	R2, R3, #3
0x0B14	0x2143    MOVS	R1, #67
0x0B16	0x7011    STRB	R1, [R2, #0]
0x0B18	0x1D1A    ADDS	R2, R3, #4
0x0B1A	0x214D    MOVS	R1, #77
0x0B1C	0x7011    STRB	R1, [R2, #0]
0x0B1E	0x1D5A    ADDS	R2, R3, #5
0x0B20	0x2147    MOVS	R1, #71
0x0B22	0x7011    STRB	R1, [R2, #0]
0x0B24	0x1D9A    ADDS	R2, R3, #6
0x0B26	0x2153    MOVS	R1, #83
0x0B28	0x7011    STRB	R1, [R2, #0]
0x0B2A	0x1DDA    ADDS	R2, R3, #7
0x0B2C	0x213D    MOVS	R1, #61
0x0B2E	0x7011    STRB	R1, [R2, #0]
0x0B30	0xF2030208  ADDW	R2, R3, #8
0x0B34	0x2122    MOVS	R1, #34
0x0B36	0x7011    STRB	R1, [R2, #0]
; number end address is: 16 (R4)
; cz end address is: 20 (R5)
; pos end address is: 24 (R6)
; posNum end address is: 28 (R7)
0x0B38	0x4620    MOV	R0, R4
0x0B3A	0xB22C    SXTH	R4, R5
0x0B3C	0xB235    SXTH	R5, R6
0x0B3E	0xB23B    SXTH	R3, R7
;uart.c, 197 :: 		while(number[posNum]!=0)
L_sendSMS32:
; posNum start address is: 12 (R3)
; pos start address is: 20 (R5)
; cz start address is: 16 (R4)
; number start address is: 0 (R0)
0x0B40	0x18C1    ADDS	R1, R0, R3
0x0B42	0x7809    LDRB	R1, [R1, #0]
0x0B44	0xB149    CBZ	R1, L_sendSMS33
;uart.c, 199 :: 		txtNum[pos]=number[posNum];
0x0B46	0xA902    ADD	R1, SP, #8
0x0B48	0x194A    ADDS	R2, R1, R5
0x0B4A	0x18C1    ADDS	R1, R0, R3
0x0B4C	0x7809    LDRB	R1, [R1, #0]
0x0B4E	0x7011    STRB	R1, [R2, #0]
;uart.c, 200 :: 		pos++;
0x0B50	0x1C6D    ADDS	R5, R5, #1
0x0B52	0xB22D    SXTH	R5, R5
;uart.c, 201 :: 		posNum++;
0x0B54	0x1C5B    ADDS	R3, R3, #1
0x0B56	0xB21B    SXTH	R3, R3
;uart.c, 202 :: 		}
; number end address is: 0 (R0)
; posNum end address is: 12 (R3)
0x0B58	0xE7F2    B	L_sendSMS32
L_sendSMS33:
;uart.c, 203 :: 		txtNum[pos++]='"';
0x0B5A	0xAB02    ADD	R3, SP, #8
0x0B5C	0x195A    ADDS	R2, R3, R5
0x0B5E	0x2122    MOVS	R1, #34
0x0B60	0x7011    STRB	R1, [R2, #0]
0x0B62	0x1C69    ADDS	R1, R5, #1
0x0B64	0xB209    SXTH	R1, R1
; pos end address is: 20 (R5)
; pos start address is: 0 (R0)
0x0B66	0xB208    SXTH	R0, R1
;uart.c, 204 :: 		txtNum[pos++]='\r';
0x0B68	0x185A    ADDS	R2, R3, R1
0x0B6A	0x210D    MOVS	R1, #13
0x0B6C	0x7011    STRB	R1, [R2, #0]
0x0B6E	0x1C41    ADDS	R1, R0, #1
0x0B70	0xB209    SXTH	R1, R1
0x0B72	0xB208    SXTH	R0, R1
;uart.c, 205 :: 		txtNum[pos++]='\n';
0x0B74	0x185A    ADDS	R2, R3, R1
0x0B76	0x210A    MOVS	R1, #10
0x0B78	0x7011    STRB	R1, [R2, #0]
0x0B7A	0x1C41    ADDS	R1, R0, #1
0x0B7C	0xB209    SXTH	R1, R1
; pos end address is: 0 (R0)
;uart.c, 206 :: 		txtNum[pos++]='\0';
0x0B7E	0x185A    ADDS	R2, R3, R1
0x0B80	0x2100    MOVS	R1, #0
0x0B82	0x7011    STRB	R1, [R2, #0]
;uart.c, 208 :: 		USART2_Send_Text("AT+CMGS=\"+381642914005\"\r\n");
0x0B84	0x4912    LDR	R1, [PC, #72]
0x0B86	0x4608    MOV	R0, R1
0x0B88	0xF001F97A  BL	_USART2_Send_Text+0
;uart.c, 209 :: 		Delay_ms(1000);
0x0B8C	0xF64517FE  MOVW	R7, #23038
0x0B90	0xF2C02762  MOVT	R7, #610
0x0B94	0xBF00    NOP
0x0B96	0xBF00    NOP
L_sendSMS34:
0x0B98	0x1E7F    SUBS	R7, R7, #1
0x0B9A	0xD1FD    BNE	L_sendSMS34
0x0B9C	0xBF00    NOP
0x0B9E	0xBF00    NOP
0x0BA0	0xBF00    NOP
;uart.c, 210 :: 		USART2_Send_Text(receivedTxt);
0x0BA2	0x480C    LDR	R0, [PC, #48]
0x0BA4	0xF001F96C  BL	_USART2_Send_Text+0
;uart.c, 213 :: 		Delay_ms(1000);
0x0BA8	0xF64517FE  MOVW	R7, #23038
0x0BAC	0xF2C02762  MOVT	R7, #610
L_sendSMS36:
0x0BB0	0x1E7F    SUBS	R7, R7, #1
0x0BB2	0xD1FD    BNE	L_sendSMS36
0x0BB4	0xBF00    NOP
0x0BB6	0xBF00    NOP
0x0BB8	0xBF00    NOP
0x0BBA	0xBF00    NOP
0x0BBC	0xBF00    NOP
;uart.c, 214 :: 		USART2_Send(cz);
0x0BBE	0xB2E0    UXTB	R0, R4
; cz end address is: 16 (R4)
0x0BC0	0xF7FFFDC8  BL	_USART2_Send+0
;uart.c, 215 :: 		}
L_end_sendSMS:
0x0BC4	0xF8DDE000  LDR	LR, [SP, #0]
0x0BC8	0xB00F    ADD	SP, SP, #60
0x0BCA	0x4770    BX	LR
0x0BCC	0x013D2000  	?lstr3_uart+0
0x0BD0	0x01492000  	?lstr4_uart+0
0x0BD4	0x09B22000  	_receivedTxt+0
; end of _sendSMS
_USART2_Send:
;uart.c, 173 :: 		void USART2_Send(char input)
; input start address is: 0 (R0)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; input end address is: 0 (R0)
;uart.c, 175 :: 		while(transmitUART.flag == 1);//BusyWait for transmit register to get empty
L_USART2_Send28:
; input start address is: 0 (R0)
0x0754	0x4915    LDR	R1, [PC, #84]
0x0756	0x7809    LDRB	R1, [R1, #0]
0x0758	0x2901    CMP	R1, #1
0x075A	0xD100    BNE	L_USART2_Send29
0x075C	0xE7FA    B	L_USART2_Send28
L_USART2_Send29:
;uart.c, 177 :: 		transmitUART.byteCount = 0;
0x075E	0x2200    MOVS	R2, #0
0x0760	0x4913    LDR	R1, [PC, #76]
0x0762	0x800A    STRH	R2, [R1, #0]
;uart.c, 178 :: 		transmitUART.buffer[transmitUART.byteCount] = input;
0x0764	0x4912    LDR	R1, [PC, #72]
0x0766	0x880A    LDRH	R2, [R1, #0]
0x0768	0x4912    LDR	R1, [PC, #72]
0x076A	0x1889    ADDS	R1, R1, R2
0x076C	0x7008    STRB	R0, [R1, #0]
; input end address is: 0 (R0)
;uart.c, 179 :: 		++transmitUART.byteCount;
0x076E	0x4910    LDR	R1, [PC, #64]
0x0770	0x8809    LDRH	R1, [R1, #0]
0x0772	0x1C4A    ADDS	R2, R1, #1
0x0774	0x490E    LDR	R1, [PC, #56]
0x0776	0x800A    STRH	R2, [R1, #0]
;uart.c, 181 :: 		transmitUART.bufferPointer = 0;
0x0778	0x2200    MOVS	R2, #0
0x077A	0x490F    LDR	R1, [PC, #60]
0x077C	0x800A    STRH	R2, [R1, #0]
;uart.c, 183 :: 		transmitUART.flag = 1;
0x077E	0x2201    MOVS	R2, #1
0x0780	0x490A    LDR	R1, [PC, #40]
0x0782	0x700A    STRB	R2, [R1, #0]
;uart.c, 184 :: 		USART2_DR = transmitUART.buffer[transmitUART.bufferPointer++];
0x0784	0x490C    LDR	R1, [PC, #48]
0x0786	0x880A    LDRH	R2, [R1, #0]
0x0788	0x490A    LDR	R1, [PC, #40]
0x078A	0x1889    ADDS	R1, R1, R2
0x078C	0x780A    LDRB	R2, [R1, #0]
0x078E	0x490B    LDR	R1, [PC, #44]
0x0790	0x600A    STR	R2, [R1, #0]
0x0792	0x4909    LDR	R1, [PC, #36]
0x0794	0x8809    LDRH	R1, [R1, #0]
0x0796	0x1C4A    ADDS	R2, R1, #1
0x0798	0x4907    LDR	R1, [PC, #28]
0x079A	0x800A    STRH	R2, [R1, #0]
;uart.c, 185 :: 		USART2_CR1 |= _USART_TXEIE;
0x079C	0x4908    LDR	R1, [PC, #32]
0x079E	0x6809    LDR	R1, [R1, #0]
0x07A0	0xF0410280  ORR	R2, R1, #128
0x07A4	0x4906    LDR	R1, [PC, #24]
0x07A6	0x600A    STR	R2, [R1, #0]
;uart.c, 186 :: 		}
L_end_USART2_Send:
0x07A8	0x4770    BX	LR
0x07AA	0xBF00    NOP
0x07AC	0x05C42000  	_transmitUART+0
0x07B0	0x05C62000  	_transmitUART+2
0x07B4	0x05CA2000  	_transmitUART+6
0x07B8	0x05C82000  	_transmitUART+4
0x07BC	0x44044000  	USART2_DR+0
0x07C0	0x440C4000  	USART2_CR1+0
; end of _USART2_Send
_getPressure:
;bme280.c, 171 :: 		double getPressure() {
0x2780	0xB081    SUB	SP, SP, #4
0x2782	0xF8CDE000  STR	LR, [SP, #0]
;bme280.c, 176 :: 		getTemperature();
0x2786	0xF7FEFC91  BL	_getTemperature+0
;bme280.c, 178 :: 		data_[0] = BME280_REG_PRESSUREDATA;
0x278A	0x21F7    MOVS	R1, #247
0x278C	0x4810    LDR	R0, [PC, #64]
0x278E	0x7001    STRB	R1, [R0, #0]
;bme280.c, 179 :: 		BME_Read( 1, 3);
0x2790	0x2103    MOVS	R1, #3
0x2792	0x2001    MOVS	R0, #1
0x2794	0xF7FEF95A  BL	_BME_Read+0
;bme280.c, 180 :: 		result = output[0];
0x2798	0x480E    LDR	R0, [PC, #56]
; result start address is: 0 (R0)
0x279A	0x7800    LDRB	R0, [R0, #0]
;bme280.c, 181 :: 		result <<= 8;
0x279C	0x0201    LSLS	R1, R0, #8
; result end address is: 0 (R0)
;bme280.c, 182 :: 		result |= output[1];
0x279E	0x480E    LDR	R0, [PC, #56]
0x27A0	0x7800    LDRB	R0, [R0, #0]
0x27A2	0xEA410000  ORR	R0, R1, R0, LSL #0
;bme280.c, 183 :: 		result <<= 8;
0x27A6	0x0201    LSLS	R1, R0, #8
;bme280.c, 184 :: 		result |= output[2];
0x27A8	0x480C    LDR	R0, [PC, #48]
0x27AA	0x7800    LDRB	R0, [R0, #0]
0x27AC	0xEA410000  ORR	R0, R1, R0, LSL #0
;bme280.c, 185 :: 		return BME280_compensate_P_int32(result)/100.0;
0x27B0	0xF7FEFF8C  BL	_BME280_compensate_P_int32+0
0x27B4	0xEE000A90  VMOV	S1, R0
0x27B8	0xEEF80A60  VCVT.F32.U32	S1, S1
0x27BC	0x4808    LDR	R0, [PC, #32]
0x27BE	0xEE000A10  VMOV	S0, R0
0x27C2	0xEE800A80  VDIV.F32	S0, S1, S0
;bme280.c, 186 :: 		}
L_end_getPressure:
0x27C6	0xF8DDE000  LDR	LR, [SP, #0]
0x27CA	0xB001    ADD	SP, SP, #4
0x27CC	0x4770    BX	LR
0x27CE	0xBF00    NOP
0x27D0	0x017D2000  	_data_+0
0x27D4	0x01872000  	_output+0
0x27D8	0x01882000  	_output+1
0x27DC	0x01892000  	_output+2
0x27E0	0x000042C8  	#1120403456
; end of _getPressure
_getTemperature:
;bme280.c, 104 :: 		double getTemperature() {
0x10AC	0xB081    SUB	SP, SP, #4
0x10AE	0xF8CDE000  STR	LR, [SP, #0]
;bme280.c, 108 :: 		data_[0] = BME280_REG_TEMPDATA;
0x10B2	0x21FA    MOVS	R1, #250
0x10B4	0x4810    LDR	R0, [PC, #64]
0x10B6	0x7001    STRB	R1, [R0, #0]
;bme280.c, 110 :: 		BME_Read( 1,3);
0x10B8	0x2103    MOVS	R1, #3
0x10BA	0x2001    MOVS	R0, #1
0x10BC	0xF7FFFCC6  BL	_BME_Read+0
;bme280.c, 112 :: 		result = output[0];
0x10C0	0x480E    LDR	R0, [PC, #56]
; result start address is: 0 (R0)
0x10C2	0x7800    LDRB	R0, [R0, #0]
;bme280.c, 113 :: 		result <<= 8;
0x10C4	0x0201    LSLS	R1, R0, #8
; result end address is: 0 (R0)
;bme280.c, 114 :: 		result |= output[1];
0x10C6	0x480E    LDR	R0, [PC, #56]
0x10C8	0x7800    LDRB	R0, [R0, #0]
0x10CA	0xEA410000  ORR	R0, R1, R0, LSL #0
;bme280.c, 115 :: 		result <<= 8;
0x10CE	0x0201    LSLS	R1, R0, #8
;bme280.c, 116 :: 		result |= output[2];
0x10D0	0x480C    LDR	R0, [PC, #48]
0x10D2	0x7800    LDRB	R0, [R0, #0]
0x10D4	0xEA410000  ORR	R0, R1, R0, LSL #0
;bme280.c, 117 :: 		return BME280_compensate_T_int32(result)/100.0;
0x10D8	0xF7FFFC8E  BL	_BME280_compensate_T_int32+0
0x10DC	0xEE000A90  VMOV	S1, R0
0x10E0	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x10E4	0x4808    LDR	R0, [PC, #32]
0x10E6	0xEE000A10  VMOV	S0, R0
0x10EA	0xEE800A80  VDIV.F32	S0, S1, S0
;bme280.c, 118 :: 		}
L_end_getTemperature:
0x10EE	0xF8DDE000  LDR	LR, [SP, #0]
0x10F2	0xB001    ADD	SP, SP, #4
0x10F4	0x4770    BX	LR
0x10F6	0xBF00    NOP
0x10F8	0x017D2000  	_data_+0
0x10FC	0x01872000  	_output+0
0x1100	0x01882000  	_output+1
0x1104	0x01892000  	_output+2
0x1108	0x000042C8  	#1120403456
; end of _getTemperature
_BME_Read:
;bme280.c, 30 :: 		void BME_Read( uint32_t len, uint32_t readlen) {
; readlen start address is: 4 (R1)
; len start address is: 0 (R0)
0x0A4C	0xB082    SUB	SP, SP, #8
0x0A4E	0xF8CDE000  STR	LR, [SP, #0]
0x0A52	0x4605    MOV	R5, R0
0x0A54	0x468A    MOV	R10, R1
; readlen end address is: 4 (R1)
; len end address is: 0 (R0)
; len start address is: 20 (R5)
; readlen start address is: 40 (R10)
;bme280.c, 31 :: 		LD11=1; LD22=0;
0x0A56	0x2301    MOVS	R3, #1
0x0A58	0xB25B    SXTB	R3, R3
0x0A5A	0x4A14    LDR	R2, [PC, #80]
0x0A5C	0x6013    STR	R3, [R2, #0]
0x0A5E	0x2300    MOVS	R3, #0
0x0A60	0xB25B    SXTB	R3, R3
0x0A62	0x4A13    LDR	R2, [PC, #76]
0x0A64	0x9201    STR	R2, [SP, #4]
0x0A66	0x6013    STR	R3, [R2, #0]
;bme280.c, 32 :: 		I2C3_Start();
0x0A68	0xF7FFFFA8  BL	_I2C3_Start+0
;bme280.c, 33 :: 		LD11=1; LD22=1;
0x0A6C	0x2301    MOVS	R3, #1
0x0A6E	0xB25B    SXTB	R3, R3
0x0A70	0x4A0E    LDR	R2, [PC, #56]
0x0A72	0x6013    STR	R3, [R2, #0]
0x0A74	0x9A01    LDR	R2, [SP, #4]
0x0A76	0x6013    STR	R3, [R2, #0]
;bme280.c, 34 :: 		I2C3_Write(BME280_ADDRESS, data_, len, END_MODE_RESTART);
0x0A78	0xF2400300  MOVW	R3, #0
0x0A7C	0x462A    MOV	R2, R5
; len end address is: 20 (R5)
0x0A7E	0x490D    LDR	R1, [PC, #52]
0x0A80	0x2076    MOVS	R0, #118
0x0A82	0xF7FFFFA7  BL	_I2C3_Write+0
;bme280.c, 35 :: 		LD11=0; LD22=1;
0x0A86	0x2300    MOVS	R3, #0
0x0A88	0xB25B    SXTB	R3, R3
0x0A8A	0x4A08    LDR	R2, [PC, #32]
0x0A8C	0x6013    STR	R3, [R2, #0]
0x0A8E	0x2301    MOVS	R3, #1
0x0A90	0xB25B    SXTB	R3, R3
0x0A92	0x9A01    LDR	R2, [SP, #4]
0x0A94	0x6013    STR	R3, [R2, #0]
;bme280.c, 36 :: 		I2C3_Read(BME280_ADDRESS, output, readlen, END_MODE_STOP);
0x0A96	0xF2400301  MOVW	R3, #1
0x0A9A	0x4652    MOV	R2, R10
; readlen end address is: 40 (R10)
0x0A9C	0x4906    LDR	R1, [PC, #24]
0x0A9E	0x2076    MOVS	R0, #118
0x0AA0	0xF7FFFF7A  BL	_I2C3_Read+0
;bme280.c, 37 :: 		}
L_end_BME_Read:
0x0AA4	0xF8DDE000  LDR	LR, [SP, #0]
0x0AA8	0xB002    ADD	SP, SP, #8
0x0AAA	0x4770    BX	LR
0x0AAC	0x02B04242  	ODR12_GPIOE_ODR_bit+0
0x0AB0	0x02BC4242  	ODR15_GPIOE_ODR_bit+0
0x0AB4	0x017D2000  	_data_+0
0x0AB8	0x01872000  	_output+0
; end of _BME_Read
_BME280_compensate_T_int32:
;bme280.c, 92 :: 		int32_t BME280_compensate_T_int32(int32_t adc_T) {
; adc_T start address is: 0 (R0)
; adc_T end address is: 0 (R0)
; adc_T start address is: 0 (R0)
;bme280.c, 95 :: 		adc_T >>= 4;
0x09F8	0x1103    ASRS	R3, R0, #4
; adc_T end address is: 0 (R0)
;bme280.c, 96 :: 		var1 = ((((adc_T>>3) - ((int32_t)dig_T1<<1))) * ((int32_t)dig_T2)) >> 11;
0x09FA	0x10DA    ASRS	R2, R3, #3
0x09FC	0x4D0F    LDR	R5, [PC, #60]
0x09FE	0x8829    LDRH	R1, [R5, #0]
0x0A00	0x0049    LSLS	R1, R1, #1
0x0A02	0x1A52    SUB	R2, R2, R1
0x0A04	0x490E    LDR	R1, [PC, #56]
0x0A06	0xF9B11000  LDRSH	R1, [R1, #0]
0x0A0A	0x4351    MULS	R1, R2, R1
0x0A0C	0x12CC    ASRS	R4, R1, #11
;bme280.c, 97 :: 		var2 = (((((adc_T>>4) - ((int32_t)dig_T1)) * ((adc_T>>4) - ((int32_t)dig_T1))) >> 12) *
0x0A0E	0x111B    ASRS	R3, R3, #4
0x0A10	0x4629    MOV	R1, R5
0x0A12	0x8809    LDRH	R1, [R1, #0]
0x0A14	0x1A5A    SUB	R2, R3, R1
0x0A16	0x4629    MOV	R1, R5
0x0A18	0x8809    LDRH	R1, [R1, #0]
0x0A1A	0x1A59    SUB	R1, R3, R1
0x0A1C	0x4351    MULS	R1, R2, R1
0x0A1E	0x130A    ASRS	R2, R1, #12
;bme280.c, 98 :: 		((int32_t)dig_T3)) >> 14;
0x0A20	0x4908    LDR	R1, [PC, #32]
0x0A22	0xF9B11000  LDRSH	R1, [R1, #0]
0x0A26	0x4351    MULS	R1, R2, R1
0x0A28	0x1389    ASRS	R1, R1, #14
;bme280.c, 99 :: 		t_fine = var1 + var2;
0x0A2A	0x1862    ADDS	R2, R4, R1
0x0A2C	0x4906    LDR	R1, [PC, #24]
0x0A2E	0x600A    STR	R2, [R1, #0]
;bme280.c, 100 :: 		T = (t_fine * 5 + 128) >> 8;
0x0A30	0x2105    MOVS	R1, #5
0x0A32	0x4351    MULS	R1, R2, R1
0x0A34	0x3180    ADDS	R1, #128
0x0A36	0x1209    ASRS	R1, R1, #8
;bme280.c, 101 :: 		return T;
0x0A38	0x4608    MOV	R0, R1
;bme280.c, 102 :: 		}
L_end_BME280_compensate_T_int32:
0x0A3A	0x4770    BX	LR
0x0A3C	0x01A82000  	_dig_T1+0
0x0A40	0x01AA2000  	_dig_T2+0
0x0A44	0x01AC2000  	_dig_T3+0
0x0A48	0x01942000  	_t_fine+0
; end of _BME280_compensate_T_int32
_BME280_compensate_P_int32:
;bme280.c, 143 :: 		uint32_t BME280_compensate_P_int32(int32_t adc_P)
; adc_P start address is: 0 (R0)
; adc_P end address is: 0 (R0)
; adc_P start address is: 0 (R0)
;bme280.c, 147 :: 		adc_P >>= 4;
0x16CC	0x1100    ASRS	R0, R0, #4
;bme280.c, 148 :: 		var1 = (((int32_t)t_fine)>>1) - (int32_t)64000;
0x16CE	0x492D    LDR	R1, [PC, #180]
0x16D0	0x6809    LDR	R1, [R1, #0]
0x16D2	0x1049    ASRS	R1, R1, #1
0x16D4	0xF5A1447A  SUB	R4, R1, #64000
;bme280.c, 149 :: 		var2 = (((var1>>2) * (var1>>2)) >> 11 ) * ((int32_t)dig_P6);
0x16D8	0x10A1    ASRS	R1, R4, #2
0x16DA	0xFB01F301  MUL	R3, R1, R1
0x16DE	0x12DA    ASRS	R2, R3, #11
0x16E0	0x4929    LDR	R1, [PC, #164]
0x16E2	0xF9B11000  LDRSH	R1, [R1, #0]
0x16E6	0x434A    MULS	R2, R1, R2
;bme280.c, 150 :: 		var2 = var2 + ((var1*((int32_t)dig_P5))<<1);
0x16E8	0x4928    LDR	R1, [PC, #160]
0x16EA	0xF9B11000  LDRSH	R1, [R1, #0]
0x16EE	0x4361    MULS	R1, R4, R1
0x16F0	0x0049    LSLS	R1, R1, #1
0x16F2	0x1851    ADDS	R1, R2, R1
;bme280.c, 151 :: 		var2 = (var2>>2)+(((int32_t)dig_P4)<<16);
0x16F4	0x108A    ASRS	R2, R1, #2
0x16F6	0x4926    LDR	R1, [PC, #152]
0x16F8	0xF9B11000  LDRSH	R1, [R1, #0]
0x16FC	0x0409    LSLS	R1, R1, #16
0x16FE	0x1851    ADDS	R1, R2, R1
; var2 start address is: 20 (R5)
0x1700	0x460D    MOV	R5, R1
;bme280.c, 152 :: 		var1 = (((dig_P3 * (((var1>>2) * (var1>>2)) >> 13 )) >> 3) + ((((int32_t)dig_P2) * var1)>>1))>>18;
0x1702	0x135A    ASRS	R2, R3, #13
0x1704	0x4923    LDR	R1, [PC, #140]
0x1706	0xF9B11000  LDRSH	R1, [R1, #0]
0x170A	0x4351    MULS	R1, R2, R1
0x170C	0x10CA    ASRS	R2, R1, #3
0x170E	0x4922    LDR	R1, [PC, #136]
0x1710	0xF9B11000  LDRSH	R1, [R1, #0]
0x1714	0x4361    MULS	R1, R4, R1
0x1716	0x1049    ASRS	R1, R1, #1
0x1718	0x1851    ADDS	R1, R2, R1
0x171A	0x1489    ASRS	R1, R1, #18
;bme280.c, 153 :: 		var1 =((((32768+var1))*((int32_t)dig_P1))>>15);
0x171C	0xF5014200  ADD	R2, R1, #32768
0x1720	0x491E    LDR	R1, [PC, #120]
0x1722	0x8809    LDRH	R1, [R1, #0]
0x1724	0x4351    MULS	R1, R2, R1
0x1726	0x13C9    ASRS	R1, R1, #15
; var1 start address is: 12 (R3)
0x1728	0x460B    MOV	R3, R1
;bme280.c, 154 :: 		if (var1 == 0) {
0x172A	0xB909    CBNZ	R1, L_BME280_compensate_P_int324
; adc_P end address is: 0 (R0)
; var2 end address is: 20 (R5)
; var1 end address is: 12 (R3)
;bme280.c, 155 :: 		return 0; // avoid exception caused by division by zero
0x172C	0x2000    MOVS	R0, #0
0x172E	0xE027    B	L_end_BME280_compensate_P_int32
;bme280.c, 156 :: 		}
L_BME280_compensate_P_int324:
;bme280.c, 157 :: 		p = (((uint32_t)(((int32_t)1048576)-adc_P)-(var2>>12)))*3125;
; var1 start address is: 12 (R3)
; var2 start address is: 20 (R5)
; adc_P start address is: 0 (R0)
0x1730	0xF5C01280  RSB	R2, R0, #1048576
; adc_P end address is: 0 (R0)
0x1734	0x1329    ASRS	R1, R5, #12
; var2 end address is: 20 (R5)
0x1736	0x1A52    SUB	R2, R2, R1
0x1738	0xF6404135  MOVW	R1, #3125
0x173C	0x4351    MULS	R1, R2, R1
; p start address is: 0 (R0)
0x173E	0x4608    MOV	R0, R1
;bme280.c, 158 :: 		if (p < 0x80000000) {
0x1740	0xF1B14F00  CMP	R1, #-2147483648
0x1744	0xD203    BCS	L_BME280_compensate_P_int325
;bme280.c, 159 :: 		p = (p << 1) / ((uint32_t)var1);
0x1746	0x0040    LSLS	R0, R0, #1
; p end address is: 0 (R0)
0x1748	0xFBB0F0F3  UDIV	R0, R0, R3
; var1 end address is: 12 (R3)
; p start address is: 0 (R0)
;bme280.c, 160 :: 		}
0x174C	0xE002    B	L_BME280_compensate_P_int326
L_BME280_compensate_P_int325:
;bme280.c, 162 :: 		p = (p / (uint32_t)var1) * 2;
; var1 start address is: 12 (R3)
0x174E	0xFBB0F0F3  UDIV	R0, R0, R3
; var1 end address is: 12 (R3)
; p end address is: 0 (R0)
0x1752	0x0040    LSLS	R0, R0, #1
; p start address is: 0 (R0)
; p end address is: 0 (R0)
;bme280.c, 163 :: 		}
L_BME280_compensate_P_int326:
;bme280.c, 164 :: 		var1 = (((int32_t)dig_P9) * ((int32_t)(((p>>3) * (p>>3))>>13)))>>12;
; p start address is: 0 (R0)
0x1754	0x4912    LDR	R1, [PC, #72]
0x1756	0xF9B12000  LDRSH	R2, [R1, #0]
0x175A	0x08C1    LSRS	R1, R0, #3
0x175C	0x4349    MULS	R1, R1, R1
0x175E	0x0B49    LSRS	R1, R1, #13
0x1760	0x4351    MULS	R1, R2, R1
0x1762	0x130B    ASRS	R3, R1, #12
;bme280.c, 165 :: 		var2 = (((int32_t)(p>>2)) * ((int32_t)dig_P8))>>13;
0x1764	0x0882    LSRS	R2, R0, #2
0x1766	0x490F    LDR	R1, [PC, #60]
0x1768	0xF9B11000  LDRSH	R1, [R1, #0]
0x176C	0x4351    MULS	R1, R2, R1
0x176E	0x1349    ASRS	R1, R1, #13
;bme280.c, 166 :: 		p = (uint32_t)((int32_t)p + ((var1 + var2 + dig_P7) >> 4));
0x1770	0x185A    ADDS	R2, R3, R1
0x1772	0x490D    LDR	R1, [PC, #52]
0x1774	0xF9B11000  LDRSH	R1, [R1, #0]
0x1778	0x1851    ADDS	R1, R2, R1
0x177A	0x1109    ASRS	R1, R1, #4
0x177C	0x1841    ADDS	R1, R0, R1
; p end address is: 0 (R0)
;bme280.c, 167 :: 		return p;
0x177E	0x4608    MOV	R0, R1
;bme280.c, 168 :: 		}
L_end_BME280_compensate_P_int32:
0x1780	0x4770    BX	LR
0x1782	0xBF00    NOP
0x1784	0x01942000  	_t_fine+0
0x1788	0x01922000  	_dig_P6+0
0x178C	0x01982000  	_dig_P5+0
0x1790	0x019A2000  	_dig_P4+0
0x1794	0x019C2000  	_dig_P3+0
0x1798	0x019E2000  	_dig_P2+0
0x179C	0x01A02000  	_dig_P1+0
0x17A0	0x01A22000  	_dig_P9+0
0x17A4	0x01A42000  	_dig_P8+0
0x17A8	0x01A62000  	_dig_P7+0
; end of _BME280_compensate_P_int32
_calcTemp:
;temperature.c, 101 :: 		float calcTemp()
0x284C	0xB083    SUB	SP, SP, #12
0x284E	0xF8CDE000  STR	LR, [SP, #0]
;temperature.c, 108 :: 		test = oneWireReset();
0x2852	0xF7FEFFAB  BL	_oneWireReset+0
;temperature.c, 109 :: 		oneWireWrite(0xCC);          //SKIP ROM
0x2856	0x20CC    MOVS	R0, #204
0x2858	0xF7FEFCC6  BL	_oneWireWrite+0
;temperature.c, 110 :: 		oneWireWrite(0x44);          //CALC_TEMP
0x285C	0x2044    MOVS	R0, #68
0x285E	0xF7FEFCC3  BL	_oneWireWrite+0
;temperature.c, 111 :: 		my_Delay_ms(_WAIT_FOR_INIT_TIME);     // Vreme merenja
0x2862	0xF24020EE  MOVW	R0, #750
0x2866	0xF7FEFA8F  BL	_my_Delay_ms+0
;temperature.c, 112 :: 		test = oneWireReset();
0x286A	0xF7FEFF9F  BL	_oneWireReset+0
;temperature.c, 113 :: 		oneWireWrite(0xCC);          //SKIP ROM
0x286E	0x20CC    MOVS	R0, #204
0x2870	0xF7FEFCBA  BL	_oneWireWrite+0
;temperature.c, 114 :: 		oneWireWrite(0xBE);          //READ SCRATCHPAD
0x2874	0x20BE    MOVS	R0, #190
0x2876	0xF7FEFCB7  BL	_oneWireWrite+0
;temperature.c, 116 :: 		for(i=0; i<9; i++)
; i start address is: 8 (R2)
0x287A	0x2200    MOVS	R2, #0
; i end address is: 8 (R2)
L_calcTemp16:
; i start address is: 8 (R2)
0x287C	0x2A09    CMP	R2, #9
0x287E	0xD20D    BCS	L_calcTemp17
;temperature.c, 118 :: 		scratchpad[i]=oneWireRead();
0x2880	0x481D    LDR	R0, [PC, #116]
0x2882	0x1880    ADDS	R0, R0, R2
0x2884	0x9002    STR	R0, [SP, #8]
0x2886	0xF88D2004  STRB	R2, [SP, #4]
0x288A	0xF7FEFCCF  BL	_oneWireRead+0
0x288E	0xF89D2004  LDRB	R2, [SP, #4]
0x2892	0x9902    LDR	R1, [SP, #8]
0x2894	0x7008    STRB	R0, [R1, #0]
;temperature.c, 116 :: 		for(i=0; i<9; i++)
0x2896	0x1C52    ADDS	R2, R2, #1
0x2898	0xB2D2    UXTB	R2, R2
;temperature.c, 119 :: 		}
; i end address is: 8 (R2)
0x289A	0xE7EF    B	L_calcTemp16
L_calcTemp17:
;temperature.c, 126 :: 		temp=scratchpad[0];
0x289C	0x4816    LDR	R0, [PC, #88]
; temp start address is: 4 (R1)
0x289E	0x7801    LDRB	R1, [R0, #0]
;temperature.c, 127 :: 		temp=temp+(scratchpad[1]<<8);
0x28A0	0x4816    LDR	R0, [PC, #88]
0x28A2	0x7800    LDRB	R0, [R0, #0]
0x28A4	0x0200    LSLS	R0, R0, #8
0x28A6	0xB280    UXTH	R0, R0
0x28A8	0x1808    ADDS	R0, R1, R0
; temp end address is: 4 (R1)
; temp start address is: 24 (R6)
0x28AA	0x4606    MOV	R6, R0
;temperature.c, 128 :: 		res= crc8();
0x28AC	0xF7FEFCDC  BL	_crc8+0
;temperature.c, 129 :: 		if(res!=scratchpad[8])
0x28B0	0x4913    LDR	R1, [PC, #76]
0x28B2	0x7809    LDRB	R1, [R1, #0]
0x28B4	0x4288    CMP	R0, R1
0x28B6	0xD003    BEQ	L_calcTemp19
; temp end address is: 24 (R6)
;temperature.c, 130 :: 		return _ERROR_TEMP;
0x28B8	0x4812    LDR	R0, [PC, #72]
0x28BA	0xEE000A10  VMOV	S0, R0
0x28BE	0xE017    B	L_end_calcTemp
L_calcTemp19:
;temperature.c, 132 :: 		if(temp & 0xF000)
; temp start address is: 24 (R6)
0x28C0	0xF4064070  AND	R0, R6, #61440
0x28C4	0xB148    CBZ	R0, L__calcTemp22
;temperature.c, 134 :: 		temp=(~temp)&0x0000FFFF;
0x28C6	0x43F1    MVN	R1, R6
; temp end address is: 24 (R6)
0x28C8	0xF64F70FF  MOVW	R0, #65535
0x28CC	0xEA010000  AND	R0, R1, R0, LSL #0
;temperature.c, 135 :: 		temp=temp+1;
0x28D0	0x1C40    ADDS	R0, R0, #1
;temperature.c, 136 :: 		temp=-temp;
0x28D2	0x4240    RSBS	R0, R0, #0
; temp start address is: 4 (R1)
0x28D4	0x4601    MOV	R1, R0
; temp end address is: 4 (R1)
0x28D6	0x4608    MOV	R0, R1
;temperature.c, 137 :: 		}
0x28D8	0xE000    B	L_calcTemp20
L__calcTemp22:
;temperature.c, 132 :: 		if(temp & 0xF000)
0x28DA	0x4630    MOV	R0, R6
;temperature.c, 137 :: 		}
L_calcTemp20:
;temperature.c, 138 :: 		tempF=temp*1.0/16.0;
; temp start address is: 0 (R0)
0x28DC	0xEE000A90  VMOV	S1, R0
0x28E0	0xEEF80AE0  VCVT.F32.S32	S1, S1
; temp end address is: 0 (R0)
0x28E4	0xEEB30A00  VMOV.F32	S0, #16
0x28E8	0xEE800A80  VDIV.F32	S0, S1, S0
;temperature.c, 139 :: 		return tempF;
0x28EC	0xEEB00A40  VMOV.F32	S0, S0
;temperature.c, 140 :: 		}
L_end_calcTemp:
0x28F0	0xF8DDE000  LDR	LR, [SP, #0]
0x28F4	0xB003    ADD	SP, SP, #12
0x28F6	0x4770    BX	LR
0x28F8	0x01C02000  	_scratchpad+0
0x28FC	0x01C12000  	_scratchpad+1
0x2900	0x01C82000  	_scratchpad+8
0x2904	0x0000C2C8  	#-1027080192
; end of _calcTemp
_oneWireReset:
;temperature.c, 29 :: 		uint8_t oneWireReset(){
0x17AC	0xB082    SUB	SP, SP, #8
0x17AE	0xF8CDE000  STR	LR, [SP, #0]
;temperature.c, 32 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x17B2	0xF2400102  MOVW	R1, #2
0x17B6	0x481E    LDR	R0, [PC, #120]
0x17B8	0xF001F8CE  BL	_GPIO_Digital_Output+0
;temperature.c, 33 :: 		OWDO = 1;
0x17BC	0x2001    MOVS	R0, #1
0x17BE	0xB240    SXTB	R0, R0
0x17C0	0x491C    LDR	R1, [PC, #112]
0x17C2	0x6008    STR	R0, [R1, #0]
;temperature.c, 34 :: 		OWDO = 0;
0x17C4	0x2000    MOVS	R0, #0
0x17C6	0xB240    SXTB	R0, R0
0x17C8	0x6008    STR	R0, [R1, #0]
;temperature.c, 35 :: 		my_Delay_us(_TEMP_RESET_START);
0x17CA	0xF24010E0  MOVW	R0, #480
0x17CE	0xF7FFFA03  BL	_my_Delay_us+0
;temperature.c, 36 :: 		OWDO = 1;
0x17D2	0x2101    MOVS	R1, #1
0x17D4	0xB249    SXTB	R1, R1
0x17D6	0x4817    LDR	R0, [PC, #92]
0x17D8	0x6001    STR	R1, [R0, #0]
;temperature.c, 37 :: 		GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_1);
0x17DA	0xF2400102  MOVW	R1, #2
0x17DE	0x4814    LDR	R0, [PC, #80]
0x17E0	0xF7FFFB52  BL	_GPIO_Digital_Input+0
;temperature.c, 39 :: 		my_Delay_us(_TEMP_RESET_1);
0x17E4	0x2046    MOVS	R0, #70
0x17E6	0xF7FFF9F7  BL	_my_Delay_us+0
;temperature.c, 40 :: 		ret = OWDI;
0x17EA	0x4913    LDR	R1, [PC, #76]
0x17EC	0x6808    LDR	R0, [R1, #0]
0x17EE	0xF88D0004  STRB	R0, [SP, #4]
;temperature.c, 41 :: 		if (ret == 0){
0x17F2	0xF89D0004  LDRB	R0, [SP, #4]
0x17F6	0xB940    CBNZ	R0, L_oneWireReset7
;temperature.c, 42 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x17F8	0xF2400102  MOVW	R1, #2
0x17FC	0x480C    LDR	R0, [PC, #48]
0x17FE	0xF001F8AB  BL	_GPIO_Digital_Output+0
;temperature.c, 43 :: 		OWDO = 1;
0x1802	0x2101    MOVS	R1, #1
0x1804	0xB249    SXTB	R1, R1
0x1806	0x480B    LDR	R0, [PC, #44]
0x1808	0x6001    STR	R1, [R0, #0]
;temperature.c, 44 :: 		}
L_oneWireReset7:
;temperature.c, 45 :: 		my_Delay_us(_TEMP_RESET_2);
0x180A	0x20FA    MOVS	R0, #250
0x180C	0xF7FFF9E4  BL	_my_Delay_us+0
;temperature.c, 47 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x1810	0xF2400102  MOVW	R1, #2
0x1814	0x4806    LDR	R0, [PC, #24]
0x1816	0xF001F89F  BL	_GPIO_Digital_Output+0
;temperature.c, 48 :: 		OWDO = 1;
0x181A	0x2101    MOVS	R1, #1
0x181C	0xB249    SXTB	R1, R1
0x181E	0x4805    LDR	R0, [PC, #20]
0x1820	0x6001    STR	R1, [R0, #0]
;temperature.c, 49 :: 		return ret;
0x1822	0xF89D0004  LDRB	R0, [SP, #4]
;temperature.c, 50 :: 		}
L_end_oneWireReset:
0x1826	0xF8DDE000  LDR	LR, [SP, #0]
0x182A	0xB002    ADD	SP, SP, #8
0x182C	0x4770    BX	LR
0x182E	0xBF00    NOP
0x1830	0x04004002  	GPIOB_BASE+0
0x1834	0x82844240  	ODR1_GPIOB_ODR_bit+0
0x1838	0x82044240  	IDR1_GPIOB_IDR_bit+0
; end of _oneWireReset
_my_Delay_us:
;timer.c, 25 :: 		void my_Delay_us(uint32_t num)
; num start address is: 0 (R0)
; num end address is: 0 (R0)
; num start address is: 0 (R0)
;timer.c, 27 :: 		tick_us=0;
0x0BD8	0x2200    MOVS	R2, #0
0x0BDA	0x4904    LDR	R1, [PC, #16]
0x0BDC	0x600A    STR	R2, [R1, #0]
; num end address is: 0 (R0)
;timer.c, 28 :: 		while(tick_us<num);
L_my_Delay_us1:
; num start address is: 0 (R0)
0x0BDE	0x4903    LDR	R1, [PC, #12]
0x0BE0	0x6809    LDR	R1, [R1, #0]
0x0BE2	0x4281    CMP	R1, R0
0x0BE4	0xD200    BCS	L_my_Delay_us2
; num end address is: 0 (R0)
0x0BE6	0xE7FA    B	L_my_Delay_us1
L_my_Delay_us2:
;timer.c, 29 :: 		}
L_end_my_Delay_us:
0x0BE8	0x4770    BX	LR
0x0BEA	0xBF00    NOP
0x0BEC	0x01D02000  	_tick_us+0
; end of _my_Delay_us
_oneWireWrite:
;temperature.c, 81 :: 		void oneWireWrite(unsigned short byte){
0x11E8	0xB083    SUB	SP, SP, #12
0x11EA	0xF8CDE000  STR	LR, [SP, #0]
0x11EE	0xF88D0008  STRB	R0, [SP, #8]
;temperature.c, 83 :: 		for (i = 0; i < 8; i++){
0x11F2	0x2100    MOVS	R1, #0
0x11F4	0xF88D1004  STRB	R1, [SP, #4]
L_oneWireWrite10:
0x11F8	0xF89D1004  LDRB	R1, [SP, #4]
0x11FC	0x2908    CMP	R1, #8
0x11FE	0xD211    BCS	L_oneWireWrite11
;temperature.c, 84 :: 		b = byte & 0x01;
0x1200	0xF89D1008  LDRB	R1, [SP, #8]
0x1204	0xF0010101  AND	R1, R1, #1
;temperature.c, 85 :: 		oneWireWriteBit(b);
0x1208	0xB2C8    UXTB	R0, R1
0x120A	0xF7FFFD39  BL	_oneWireWriteBit+0
;temperature.c, 86 :: 		byte >>=1;
0x120E	0xF89D1008  LDRB	R1, [SP, #8]
0x1212	0x0849    LSRS	R1, R1, #1
0x1214	0xF88D1008  STRB	R1, [SP, #8]
;temperature.c, 83 :: 		for (i = 0; i < 8; i++){
0x1218	0xF89D1004  LDRB	R1, [SP, #4]
0x121C	0x1C49    ADDS	R1, R1, #1
0x121E	0xF88D1004  STRB	R1, [SP, #4]
;temperature.c, 87 :: 		}
0x1222	0xE7E9    B	L_oneWireWrite10
L_oneWireWrite11:
;temperature.c, 88 :: 		}
L_end_oneWireWrite:
0x1224	0xF8DDE000  LDR	LR, [SP, #0]
0x1228	0xB003    ADD	SP, SP, #12
0x122A	0x4770    BX	LR
; end of _oneWireWrite
_oneWireWriteBit:
;temperature.c, 52 :: 		void oneWireWriteBit(uint8_t b){
; b start address is: 0 (R0)
0x0C80	0xB081    SUB	SP, SP, #4
0x0C82	0xF8CDE000  STR	LR, [SP, #0]
0x0C86	0xFA5FFB80  UXTB	R11, R0
; b end address is: 0 (R0)
; b start address is: 44 (R11)
;temperature.c, 53 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x0C8A	0xF2400102  MOVW	R1, #2
0x0C8E	0x4811    LDR	R0, [PC, #68]
0x0C90	0xF001FE62  BL	_GPIO_Digital_Output+0
;temperature.c, 54 :: 		OWDO = 1;
0x0C94	0x2101    MOVS	R1, #1
0x0C96	0xB249    SXTB	R1, R1
0x0C98	0x4A0F    LDR	R2, [PC, #60]
0x0C9A	0x6011    STR	R1, [R2, #0]
;temperature.c, 55 :: 		OWDO = 0;
0x0C9C	0x2100    MOVS	R1, #0
0x0C9E	0xB249    SXTB	R1, R1
0x0CA0	0x6011    STR	R1, [R2, #0]
;temperature.c, 56 :: 		if (b){
0x0CA2	0xF1BB0F00  CMP	R11, #0
0x0CA6	0xD00A    BEQ	L_oneWireWriteBit8
; b end address is: 44 (R11)
;temperature.c, 57 :: 		my_Delay_us(_TEMP_READ_ONE_1);
0x0CA8	0x200F    MOVS	R0, #15
0x0CAA	0xF7FFFF95  BL	_my_Delay_us+0
;temperature.c, 58 :: 		OWDO = 1;
0x0CAE	0x2201    MOVS	R2, #1
0x0CB0	0xB252    SXTB	R2, R2
0x0CB2	0x4909    LDR	R1, [PC, #36]
0x0CB4	0x600A    STR	R2, [R1, #0]
;temperature.c, 59 :: 		my_Delay_us(_TEMP_READ_ONE_2);
0x0CB6	0x2032    MOVS	R0, #50
0x0CB8	0xF7FFFF8E  BL	_my_Delay_us+0
;temperature.c, 60 :: 		} else{
0x0CBC	0xE006    B	L_oneWireWriteBit9
L_oneWireWriteBit8:
;temperature.c, 61 :: 		my_Delay_us(_TEMP_READ_ZERO);
0x0CBE	0x2041    MOVS	R0, #65
0x0CC0	0xF7FFFF8A  BL	_my_Delay_us+0
;temperature.c, 62 :: 		OWDO = 1;
0x0CC4	0x2201    MOVS	R2, #1
0x0CC6	0xB252    SXTB	R2, R2
0x0CC8	0x4903    LDR	R1, [PC, #12]
0x0CCA	0x600A    STR	R2, [R1, #0]
;temperature.c, 63 :: 		}
L_oneWireWriteBit9:
;temperature.c, 64 :: 		}
L_end_oneWireWriteBit:
0x0CCC	0xF8DDE000  LDR	LR, [SP, #0]
0x0CD0	0xB001    ADD	SP, SP, #4
0x0CD2	0x4770    BX	LR
0x0CD4	0x04004002  	GPIOB_BASE+0
0x0CD8	0x82844240  	ODR1_GPIOB_ODR_bit+0
; end of _oneWireWriteBit
_oneWireRead:
;temperature.c, 90 :: 		unsigned short oneWireRead(){
0x122C	0xB082    SUB	SP, SP, #8
0x122E	0xF8CDE000  STR	LR, [SP, #0]
;temperature.c, 92 :: 		byte = 0;
; byte start address is: 8 (R2)
0x1232	0x2200    MOVS	R2, #0
;temperature.c, 93 :: 		for (i = 0; i < 8; i++){
; i start address is: 4 (R1)
0x1234	0x2100    MOVS	R1, #0
; byte end address is: 8 (R2)
; i end address is: 4 (R1)
L_oneWireRead13:
; i start address is: 4 (R1)
; byte start address is: 8 (R2)
0x1236	0x2908    CMP	R1, #8
0x1238	0xD211    BCS	L_oneWireRead14
;temperature.c, 94 :: 		b = oneWireReadBit();
0x123A	0xF88D2004  STRB	R2, [SP, #4]
0x123E	0xF88D1005  STRB	R1, [SP, #5]
0x1242	0xF7FFFCE9  BL	_oneWireReadBit+0
0x1246	0xF89D1005  LDRB	R1, [SP, #5]
0x124A	0xF89D2004  LDRB	R2, [SP, #4]
;temperature.c, 95 :: 		b <<= i;
0x124E	0xB2C0    UXTB	R0, R0
0x1250	0x4088    LSLS	R0, R1
;temperature.c, 96 :: 		byte |= b;
0x1252	0xB2C0    UXTB	R0, R0
0x1254	0x4302    ORRS	R2, R0
0x1256	0xB2D2    UXTB	R2, R2
;temperature.c, 93 :: 		for (i = 0; i < 8; i++){
0x1258	0x1C49    ADDS	R1, R1, #1
0x125A	0xB2C9    UXTB	R1, R1
;temperature.c, 97 :: 		}
; i end address is: 4 (R1)
0x125C	0xE7EB    B	L_oneWireRead13
L_oneWireRead14:
;temperature.c, 98 :: 		return byte;
0x125E	0xB2D0    UXTB	R0, R2
; byte end address is: 8 (R2)
;temperature.c, 99 :: 		}
L_end_oneWireRead:
0x1260	0xF8DDE000  LDR	LR, [SP, #0]
0x1264	0xB002    ADD	SP, SP, #8
0x1266	0x4770    BX	LR
; end of _oneWireRead
_oneWireReadBit:
;temperature.c, 66 :: 		int oneWireReadBit(){
0x0C18	0xB082    SUB	SP, SP, #8
0x0C1A	0xF8CDE000  STR	LR, [SP, #0]
;temperature.c, 68 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x0C1E	0xF2400102  MOVW	R1, #2
0x0C22	0x4814    LDR	R0, [PC, #80]
0x0C24	0xF001FE98  BL	_GPIO_Digital_Output+0
;temperature.c, 69 :: 		OWDO = 1;
0x0C28	0x2001    MOVS	R0, #1
0x0C2A	0xB240    SXTB	R0, R0
0x0C2C	0x4912    LDR	R1, [PC, #72]
0x0C2E	0x6008    STR	R0, [R1, #0]
;temperature.c, 70 :: 		OWDO = 0;
0x0C30	0x2000    MOVS	R0, #0
0x0C32	0xB240    SXTB	R0, R0
0x0C34	0x6008    STR	R0, [R1, #0]
;temperature.c, 72 :: 		GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_1);
0x0C36	0xF2400102  MOVW	R1, #2
0x0C3A	0x480E    LDR	R0, [PC, #56]
0x0C3C	0xF000F924  BL	_GPIO_Digital_Input+0
;temperature.c, 73 :: 		my_Delay_us(_TEMP_READ_INIT);
0x0C40	0x2005    MOVS	R0, #5
0x0C42	0xF7FFFFC9  BL	_my_Delay_us+0
;temperature.c, 74 :: 		b = OWDI;
0x0C46	0x490D    LDR	R1, [PC, #52]
0x0C48	0x6808    LDR	R0, [R1, #0]
0x0C4A	0xF88D0004  STRB	R0, [SP, #4]
;temperature.c, 75 :: 		my_Delay_us(_TEMP_READ_WAIT);
0x0C4E	0x2037    MOVS	R0, #55
0x0C50	0xF7FFFFC2  BL	_my_Delay_us+0
;temperature.c, 76 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1);
0x0C54	0xF2400102  MOVW	R1, #2
0x0C58	0x4806    LDR	R0, [PC, #24]
0x0C5A	0xF001FE7D  BL	_GPIO_Digital_Output+0
;temperature.c, 77 :: 		OWDO = 1;
0x0C5E	0x2101    MOVS	R1, #1
0x0C60	0xB249    SXTB	R1, R1
0x0C62	0x4805    LDR	R0, [PC, #20]
0x0C64	0x6001    STR	R1, [R0, #0]
;temperature.c, 78 :: 		return b;
0x0C66	0xF89D0004  LDRB	R0, [SP, #4]
;temperature.c, 79 :: 		}
L_end_oneWireReadBit:
0x0C6A	0xF8DDE000  LDR	LR, [SP, #0]
0x0C6E	0xB002    ADD	SP, SP, #8
0x0C70	0x4770    BX	LR
0x0C72	0xBF00    NOP
0x0C74	0x04004002  	GPIOB_BASE+0
0x0C78	0x82844240  	ODR1_GPIOB_ODR_bit+0
0x0C7C	0x82044240  	IDR1_GPIOB_IDR_bit+0
; end of _oneWireReadBit
_crc8:
;temperature.c, 8 :: 		uint8_t crc8()
;temperature.c, 11 :: 		crc = 0;
; crc start address is: 20 (R5)
0x1268	0x2500    MOVS	R5, #0
;temperature.c, 12 :: 		for(j=0;j<8; j++)
; j start address is: 12 (R3)
0x126A	0x2300    MOVS	R3, #0
; crc end address is: 20 (R5)
; j end address is: 12 (R3)
L_crc80:
; j start address is: 12 (R3)
; crc start address is: 20 (R5)
0x126C	0x2B08    CMP	R3, #8
0x126E	0xD21A    BCS	L_crc81
;temperature.c, 14 :: 		cur=scratchpad[j];
0x1270	0x480E    LDR	R0, [PC, #56]
0x1272	0x18C0    ADDS	R0, R0, R3
0x1274	0x7804    LDRB	R4, [R0, #0]
; cur start address is: 16 (R4)
;temperature.c, 15 :: 		for (i = 0; i < 8; i++)
; i start address is: 8 (R2)
0x1276	0x2200    MOVS	R2, #0
; crc end address is: 20 (R5)
; cur end address is: 16 (R4)
; i end address is: 8 (R2)
; j end address is: 12 (R3)
L_crc83:
; i start address is: 8 (R2)
; cur start address is: 16 (R4)
; crc start address is: 20 (R5)
; j start address is: 12 (R3)
0x1278	0x2A08    CMP	R2, #8
0x127A	0xD211    BCS	L_crc84
;temperature.c, 17 :: 		mix=crc^cur;
0x127C	0xEA850104  EOR	R1, R5, R4, LSL #0
0x1280	0xB2C9    UXTB	R1, R1
;temperature.c, 18 :: 		crc=crc>>1;
0x1282	0x086D    LSRS	R5, R5, #1
0x1284	0xB2ED    UXTB	R5, R5
;temperature.c, 19 :: 		if (mix&0x01)
0x1286	0xF0010001  AND	R0, R1, #1
0x128A	0xB2C0    UXTB	R0, R0
0x128C	0xB118    CBZ	R0, L__crc821
;temperature.c, 20 :: 		crc=crc^0x8C;
0x128E	0xF085058C  EOR	R5, R5, #140
0x1292	0xB2ED    UXTB	R5, R5
; crc end address is: 20 (R5)
0x1294	0xE7FF    B	L_crc86
L__crc821:
;temperature.c, 19 :: 		if (mix&0x01)
;temperature.c, 20 :: 		crc=crc^0x8C;
L_crc86:
;temperature.c, 21 :: 		cur=cur>>1;
; crc start address is: 20 (R5)
0x1296	0x0864    LSRS	R4, R4, #1
0x1298	0xB2E4    UXTB	R4, R4
;temperature.c, 15 :: 		for (i = 0; i < 8; i++)
0x129A	0x1C52    ADDS	R2, R2, #1
0x129C	0xB2D2    UXTB	R2, R2
;temperature.c, 22 :: 		}
; cur end address is: 16 (R4)
; i end address is: 8 (R2)
0x129E	0xE7EB    B	L_crc83
L_crc84:
;temperature.c, 12 :: 		for(j=0;j<8; j++)
0x12A0	0x1C5B    ADDS	R3, R3, #1
0x12A2	0xB2DB    UXTB	R3, R3
;temperature.c, 23 :: 		}
; j end address is: 12 (R3)
0x12A4	0xE7E2    B	L_crc80
L_crc81:
;temperature.c, 25 :: 		return crc;
0x12A6	0xB2E8    UXTB	R0, R5
; crc end address is: 20 (R5)
;temperature.c, 26 :: 		}
L_end_crc8:
0x12A8	0x4770    BX	LR
0x12AA	0xBF00    NOP
0x12AC	0x01C02000  	_scratchpad+0
; end of _crc8
_calcHumTemp:
;humidity.c, 7 :: 		float calcHumTemp(uint8_t humB){
; i start address is: 16 (R4)
0x252C	0xB087    SUB	SP, SP, #28
0x252E	0xF8CDE000  STR	LR, [SP, #0]
;humidity.c, 8 :: 		uint32_t result = 1, i = 0;
;humidity.c, 7 :: 		float calcHumTemp(uint8_t humB){
;humidity.c, 8 :: 		uint32_t result = 1, i = 0;
;humidity.c, 7 :: 		float calcHumTemp(uint8_t humB){
0x2532	0xF88D0018  STRB	R0, [SP, #24]
; i end address is: 16 (R4)
;humidity.c, 8 :: 		uint32_t result = 1, i = 0;
; i start address is: 16 (R4)
0x2536	0xF04F0400  MOV	R4, #0
;humidity.c, 10 :: 		uint32_t checksum=0;
0x253A	0xF10D0B10  ADD	R11, SP, #16
0x253E	0xF10B0A08  ADD	R10, R11, #8
0x2542	0xF8DFC1A0  LDR	R12, [PC, #416]
0x2546	0xF000F9FD  BL	___CC2DW+0
;humidity.c, 11 :: 		float res=0;
; i end address is: 16 (R4)
0x254A	0x4620    MOV	R0, R4
;humidity.c, 12 :: 		for(i;i<5;i++)
L_calcHumTemp0:
; i start address is: 0 (R0)
0x254C	0x2805    CMP	R0, #5
0x254E	0xD207    BCS	L_calcHumTemp1
;humidity.c, 13 :: 		array[i] = 0;
0x2550	0xA902    ADD	R1, SP, #8
0x2552	0x180A    ADDS	R2, R1, R0
0x2554	0x2100    MOVS	R1, #0
0x2556	0x7011    STRB	R1, [R2, #0]
;humidity.c, 12 :: 		for(i;i<5;i++)
0x2558	0x1C41    ADDS	R1, R0, #1
; i end address is: 0 (R0)
; i start address is: 16 (R4)
0x255A	0x460C    MOV	R4, R1
;humidity.c, 13 :: 		array[i] = 0;
0x255C	0x4620    MOV	R0, R4
; i end address is: 16 (R4)
0x255E	0xE7F5    B	L_calcHumTemp0
L_calcHumTemp1:
;humidity.c, 14 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_1);
0x2560	0xF2400102  MOVW	R1, #2
0x2564	0x4860    LDR	R0, [PC, #384]
0x2566	0xF000F9F7  BL	_GPIO_Digital_Output+0
;humidity.c, 15 :: 		HUM_OUT = 1;
0x256A	0x2101    MOVS	R1, #1
0x256C	0xB249    SXTB	R1, R1
0x256E	0x4A5F    LDR	R2, [PC, #380]
0x2570	0x6011    STR	R1, [R2, #0]
;humidity.c, 16 :: 		HUM_OUT = 0;
0x2572	0x2100    MOVS	R1, #0
0x2574	0xB249    SXTB	R1, R1
0x2576	0x6011    STR	R1, [R2, #0]
;humidity.c, 17 :: 		my_Delay_ms(_INIT_TIME_SET);
0x2578	0x2012    MOVS	R0, #18
0x257A	0xF7FEFC05  BL	_my_Delay_ms+0
;humidity.c, 18 :: 		GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_1);
0x257E	0xF2400102  MOVW	R1, #2
0x2582	0x4859    LDR	R0, [PC, #356]
0x2584	0xF7FEFC80  BL	_GPIO_Digital_Input+0
;humidity.c, 19 :: 		my_Delay_us(_INIT_TIME_WAIT_1);
0x2588	0x2046    MOVS	R0, #70
0x258A	0xF7FEFB25  BL	_my_Delay_us+0
;humidity.c, 21 :: 		if(res==1)
0x258E	0xEDDD0A05  VLDR.32	S1, [SP, #20]
0x2592	0xEEB70A00  VMOV.F32	S0, #1
0x2596	0xEEF40AC0  VCMPE.F32	S1, S0
0x259A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x259E	0xD103    BNE	L_calcHumTemp3
;humidity.c, 22 :: 		return _ERROR_HUM;
0x25A0	0x4953    LDR	R1, [PC, #332]
0x25A2	0xEE001A10  VMOV	S0, R1
0x25A6	0xE098    B	L_end_calcHumTemp
L_calcHumTemp3:
;humidity.c, 23 :: 		my_Delay_us(_INIT_TIME_WAIT_2);
0x25A8	0x2082    MOVS	R0, #130
0x25AA	0xF7FEFB15  BL	_my_Delay_us+0
;humidity.c, 25 :: 		i=0;
; i start address is: 24 (R6)
0x25AE	0x2600    MOVS	R6, #0
; i end address is: 24 (R6)
;humidity.c, 26 :: 		for(i;i<40;i++){
L_calcHumTemp4:
; i start address is: 24 (R6)
0x25B0	0x2E28    CMP	R6, #40
0x25B2	0xD223    BCS	L_calcHumTemp5
; i end address is: 24 (R6)
0x25B4	0x4630    MOV	R0, R6
;humidity.c, 27 :: 		while(HUM_IN == 0);
L_calcHumTemp7:
; i start address is: 0 (R0)
0x25B6	0x4A4F    LDR	R2, [PC, #316]
0x25B8	0x6811    LDR	R1, [R2, #0]
0x25BA	0xB901    CBNZ	R1, L_calcHumTemp8
0x25BC	0xE7FB    B	L_calcHumTemp7
L_calcHumTemp8:
;humidity.c, 28 :: 		my_Delay_us(_TIME_HUM_READ);
0x25BE	0x9001    STR	R0, [SP, #4]
0x25C0	0x2032    MOVS	R0, #50
0x25C2	0xF7FEFB09  BL	_my_Delay_us+0
0x25C6	0x9801    LDR	R0, [SP, #4]
;humidity.c, 29 :: 		array[i/8] |= HUM_IN<<(7-i%8);
0x25C8	0x08C2    LSRS	R2, R0, #3
0x25CA	0xA902    ADD	R1, SP, #8
0x25CC	0x188C    ADDS	R4, R1, R2
0x25CE	0xF0000107  AND	R1, R0, #7
0x25D2	0xF1C10207  RSB	R2, R1, #7
0x25D6	0x4B47    LDR	R3, [PC, #284]
0x25D8	0x6819    LDR	R1, [R3, #0]
0x25DA	0xFA01F202  LSL	R2, R1, R2
0x25DE	0xB292    UXTH	R2, R2
0x25E0	0x7821    LDRB	R1, [R4, #0]
0x25E2	0x4311    ORRS	R1, R2
0x25E4	0x7021    STRB	R1, [R4, #0]
;humidity.c, 30 :: 		if(HUM_IN == 1)
0x25E6	0x461A    MOV	R2, R3
0x25E8	0x6811    LDR	R1, [R2, #0]
0x25EA	0xB121    CBZ	R1, L_calcHumTemp9
;humidity.c, 31 :: 		my_Delay_us(_TIME_HUM_READ);
0x25EC	0x9001    STR	R0, [SP, #4]
0x25EE	0x2032    MOVS	R0, #50
0x25F0	0xF7FEFAF2  BL	_my_Delay_us+0
0x25F4	0x9801    LDR	R0, [SP, #4]
L_calcHumTemp9:
;humidity.c, 26 :: 		for(i;i<40;i++){
0x25F6	0x1C41    ADDS	R1, R0, #1
; i end address is: 0 (R0)
; i start address is: 24 (R6)
0x25F8	0x460E    MOV	R6, R1
;humidity.c, 32 :: 		}
; i end address is: 24 (R6)
0x25FA	0xE7D9    B	L_calcHumTemp4
L_calcHumTemp5:
;humidity.c, 33 :: 		for(i=0; i<4; i++)
; i start address is: 8 (R2)
0x25FC	0x2200    MOVS	R2, #0
; i end address is: 8 (R2)
0x25FE	0x4610    MOV	R0, R2
L_calcHumTemp10:
; i start address is: 0 (R0)
0x2600	0x2804    CMP	R0, #4
0x2602	0xD209    BCS	L_calcHumTemp11
;humidity.c, 34 :: 		checksum+=array[i];
0x2604	0xA902    ADD	R1, SP, #8
0x2606	0x1809    ADDS	R1, R1, R0
0x2608	0x780A    LDRB	R2, [R1, #0]
0x260A	0x9904    LDR	R1, [SP, #16]
0x260C	0x1889    ADDS	R1, R1, R2
0x260E	0x9104    STR	R1, [SP, #16]
;humidity.c, 33 :: 		for(i=0; i<4; i++)
0x2610	0x1C41    ADDS	R1, R0, #1
; i end address is: 0 (R0)
; i start address is: 8 (R2)
0x2612	0x460A    MOV	R2, R1
;humidity.c, 34 :: 		checksum+=array[i];
0x2614	0x4610    MOV	R0, R2
; i end address is: 8 (R2)
0x2616	0xE7F3    B	L_calcHumTemp10
L_calcHumTemp11:
;humidity.c, 35 :: 		if((checksum&0x00FF)!= array[4])
0x2618	0x9904    LDR	R1, [SP, #16]
0x261A	0xF00102FF  AND	R2, R1, #255
0x261E	0xA902    ADD	R1, SP, #8
0x2620	0x1D09    ADDS	R1, R1, #4
0x2622	0x7809    LDRB	R1, [R1, #0]
0x2624	0x428A    CMP	R2, R1
0x2626	0xD003    BEQ	L_calcHumTemp13
;humidity.c, 36 :: 		return _ERROR_HUM;
0x2628	0x4931    LDR	R1, [PC, #196]
0x262A	0xEE001A10  VMOV	S0, R1
0x262E	0xE054    B	L_end_calcHumTemp
L_calcHumTemp13:
;humidity.c, 37 :: 		if(humB==0)
0x2630	0xF89D1018  LDRB	R1, [SP, #24]
0x2634	0xBB41    CBNZ	R1, L_calcHumTemp14
;humidity.c, 39 :: 		res=array[2]&0x7F;
0x2636	0xAB02    ADD	R3, SP, #8
0x2638	0x1C99    ADDS	R1, R3, #2
0x263A	0x780A    LDRB	R2, [R1, #0]
0x263C	0xF002017F  AND	R1, R2, #127
0x2640	0xB2C9    UXTB	R1, R1
0x2642	0xEE001A90  VMOV	S1, R1
0x2646	0xEEF80A60  VCVT.F32.U32	S1, S1
;humidity.c, 40 :: 		res=res*25.6+array[3]*0.1;
0x264A	0x492B    LDR	R1, [PC, #172]
0x264C	0xEE001A10  VMOV	S0, R1
0x2650	0xEE201A80  VMUL.F32	S2, S1, S0
0x2654	0x1CD9    ADDS	R1, R3, #3
0x2656	0x7809    LDRB	R1, [R1, #0]
0x2658	0xEE001A90  VMOV	S1, R1
0x265C	0xEEF80A60  VCVT.F32.U32	S1, S1
0x2660	0x4926    LDR	R1, [PC, #152]
0x2662	0xEE001A10  VMOV	S0, R1
0x2666	0xEE200A80  VMUL.F32	S0, S1, S0
0x266A	0xEE310A00  VADD.F32	S0, S2, S0
0x266E	0xED8D0A05  VSTR.32	S0, [SP, #20]
;humidity.c, 41 :: 		if(array[2]&0x80)
0x2672	0xF0020180  AND	R1, R2, #128
0x2676	0xB2C9    UXTB	R1, R1
0x2678	0xB129    CBZ	R1, L_calcHumTemp15
;humidity.c, 42 :: 		res=-res;
0x267A	0xED9D0A05  VLDR.32	S0, [SP, #20]
0x267E	0xEEB10A40  VNEG.F32	S0, S0
0x2682	0xED8D0A05  VSTR.32	S0, [SP, #20]
L_calcHumTemp15:
;humidity.c, 43 :: 		}
0x2686	0xE026    B	L_calcHumTemp16
L_calcHumTemp14:
;humidity.c, 46 :: 		res=array[0]&0x7F;
0x2688	0xAB02    ADD	R3, SP, #8
0x268A	0x781A    LDRB	R2, [R3, #0]
0x268C	0xF002017F  AND	R1, R2, #127
0x2690	0xB2C9    UXTB	R1, R1
0x2692	0xEE001A90  VMOV	S1, R1
0x2696	0xEEF80A60  VCVT.F32.U32	S1, S1
;humidity.c, 47 :: 		res=res*25.6+array[1]*0.1;
0x269A	0x4917    LDR	R1, [PC, #92]
0x269C	0xEE001A10  VMOV	S0, R1
0x26A0	0xEE201A80  VMUL.F32	S2, S1, S0
0x26A4	0x1C59    ADDS	R1, R3, #1
0x26A6	0x7809    LDRB	R1, [R1, #0]
0x26A8	0xEE001A90  VMOV	S1, R1
0x26AC	0xEEF80A60  VCVT.F32.U32	S1, S1
0x26B0	0x4912    LDR	R1, [PC, #72]
0x26B2	0xEE001A10  VMOV	S0, R1
0x26B6	0xEE200A80  VMUL.F32	S0, S1, S0
0x26BA	0xEE310A00  VADD.F32	S0, S2, S0
0x26BE	0xED8D0A05  VSTR.32	S0, [SP, #20]
;humidity.c, 48 :: 		if(array[0]&0x80)
0x26C2	0xF0020180  AND	R1, R2, #128
0x26C6	0xB2C9    UXTB	R1, R1
0x26C8	0xB129    CBZ	R1, L_calcHumTemp17
;humidity.c, 49 :: 		res=-res;
0x26CA	0xED9D0A05  VLDR.32	S0, [SP, #20]
0x26CE	0xEEB10A40  VNEG.F32	S0, S0
0x26D2	0xED8D0A05  VSTR.32	S0, [SP, #20]
L_calcHumTemp17:
;humidity.c, 50 :: 		}
L_calcHumTemp16:
;humidity.c, 52 :: 		return res;
0x26D6	0xED9D0A05  VLDR.32	S0, [SP, #20]
;humidity.c, 53 :: 		}
L_end_calcHumTemp:
0x26DA	0xF8DDE000  LDR	LR, [SP, #0]
0x26DE	0xB007    ADD	SP, SP, #28
0x26E0	0x4770    BX	LR
0x26E2	0xBF00    NOP
0x26E4	0x32E00000  	?ICScalcHumTemp_checksum_L0+0
0x26E8	0x08004002  	GPIOC_BASE+0
0x26EC	0x02844241  	ODR1_GPIOC_ODR_bit+0
0x26F0	0x0000C2C8  	#-1027080192
0x26F4	0x02044241  	IDR1_GPIOC_IDR_bit+0
0x26F8	0xCCCD41CC  	#1103940813
0x26FC	0xCCCD3DCC  	#1036831949
; end of _calcHumTemp
_getDistance:
;ultrasonic.c, 12 :: 		double getDistance() {
0x2064	0xB082    SUB	SP, SP, #8
0x2066	0xF8CDE000  STR	LR, [SP, #0]
;ultrasonic.c, 17 :: 		TRIG = 0;
0x206A	0x2000    MOVS	R0, #0
0x206C	0xB240    SXTB	R0, R0
0x206E	0x4914    LDR	R1, [PC, #80]
0x2070	0x6008    STR	R0, [R1, #0]
;ultrasonic.c, 18 :: 		TRIG = 1;
0x2072	0x2001    MOVS	R0, #1
0x2074	0xB240    SXTB	R0, R0
0x2076	0x6008    STR	R0, [R1, #0]
;ultrasonic.c, 19 :: 		my_Delay_us(_ULTRASONIC_START_TIME);
0x2078	0x200A    MOVS	R0, #10
0x207A	0xF7FEFDAD  BL	_my_Delay_us+0
;ultrasonic.c, 20 :: 		TRIG = 0;
0x207E	0x2100    MOVS	R1, #0
0x2080	0xB249    SXTB	R1, R1
0x2082	0x480F    LDR	R0, [PC, #60]
0x2084	0x6001    STR	R1, [R0, #0]
;ultrasonic.c, 23 :: 		cnt = 0;
; cnt start address is: 8 (R2)
0x2086	0x2200    MOVS	R2, #0
; cnt end address is: 8 (R2)
;ultrasonic.c, 24 :: 		while (ECHO == 0);
L_getDistance0:
; cnt start address is: 8 (R2)
0x2088	0x490E    LDR	R1, [PC, #56]
0x208A	0x6808    LDR	R0, [R1, #0]
0x208C	0xB900    CBNZ	R0, L_getDistance1
0x208E	0xE7FB    B	L_getDistance0
L_getDistance1:
;ultrasonic.c, 25 :: 		while (ECHO == 1) {
L_getDistance2:
; cnt end address is: 8 (R2)
; cnt start address is: 8 (R2)
0x2090	0x490C    LDR	R1, [PC, #48]
0x2092	0x6808    LDR	R0, [R1, #0]
0x2094	0xB138    CBZ	R0, L_getDistance3
;ultrasonic.c, 26 :: 		cnt++;
0x2096	0x1C50    ADDS	R0, R2, #1
; cnt end address is: 8 (R2)
; cnt start address is: 0 (R0)
;ultrasonic.c, 27 :: 		my_Delay_us(_ULTRASONIC_COUNT_TIME);
0x2098	0x9001    STR	R0, [SP, #4]
0x209A	0x2001    MOVS	R0, #1
0x209C	0xF7FEFD9C  BL	_my_Delay_us+0
0x20A0	0x9801    LDR	R0, [SP, #4]
;ultrasonic.c, 28 :: 		}
0x20A2	0x4602    MOV	R2, R0
; cnt end address is: 0 (R0)
0x20A4	0xE7F4    B	L_getDistance2
L_getDistance3:
;ultrasonic.c, 31 :: 		distance = cnt / 58.0;
; cnt start address is: 8 (R2)
0x20A6	0xEE002A90  VMOV	S1, R2
0x20AA	0xEEF80AE0  VCVT.F32.S32	S1, S1
; cnt end address is: 8 (R2)
0x20AE	0x4806    LDR	R0, [PC, #24]
0x20B0	0xEE000A10  VMOV	S0, R0
0x20B4	0xEE800A80  VDIV.F32	S0, S1, S0
;ultrasonic.c, 32 :: 		return distance;
;ultrasonic.c, 33 :: 		}
L_end_getDistance:
0x20B8	0xF8DDE000  LDR	LR, [SP, #0]
0x20BC	0xB002    ADD	SP, SP, #8
0x20BE	0x4770    BX	LR
0x20C0	0x82B84240  	ODR14_GPIOB_ODR_bit+0
0x20C4	0x823C4240  	IDR15_GPIOB_IDR_bit+0
0x20C8	0x00004268  	#1114112000
; end of _getDistance
_showTempLCD:
;lcd.c, 12 :: 		void showTempLCD(float temp, float hum)
0x24B4	0xB08B    SUB	SP, SP, #44
0x24B6	0xF8CDE000  STR	LR, [SP, #0]
0x24BA	0xED8D0A09  VSTR.32	S0, [SP, #36]
0x24BE	0xEDCD0A0A  VSTR.32	S1, [SP, #40]
;lcd.c, 16 :: 		Lcd_Init();
0x24C2	0xF7FFF9BB  BL	_Lcd_Init+0
;lcd.c, 17 :: 		My_Delay_ms(DELAY_LCD);
0x24C6	0x2064    MOVS	R0, #100
0x24C8	0xF7FEFC5E  BL	_my_Delay_ms+0
;lcd.c, 18 :: 		Lcd_Cmd(_LCD_CLEAR);
0x24CC	0x2001    MOVS	R0, #1
0x24CE	0xF7FFFD4D  BL	_Lcd_Cmd+0
;lcd.c, 19 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x24D2	0x200C    MOVS	R0, #12
0x24D4	0xF7FFFD4A  BL	_Lcd_Cmd+0
;lcd.c, 21 :: 		FloatToStr(temp,txtTemp);
0x24D8	0xAA01    ADD	R2, SP, #4
0x24DA	0x4610    MOV	R0, R2
0x24DC	0xED9D0A09  VLDR.32	S0, [SP, #36]
0x24E0	0xF7FEFEE6  BL	_FloatToStr+0
;lcd.c, 22 :: 		FloatToStr(hum,txtHum);
0x24E4	0xF10D0213  ADD	R2, SP, #19
0x24E8	0x4610    MOV	R0, R2
0x24EA	0xED9D0A0A  VLDR.32	S0, [SP, #40]
0x24EE	0xF7FEFEDF  BL	_FloatToStr+0
;lcd.c, 23 :: 		Lcd_Out(1,1,"Temp:");
0x24F2	0x4A0C    LDR	R2, [PC, #48]
0x24F4	0x2101    MOVS	R1, #1
0x24F6	0x2001    MOVS	R0, #1
0x24F8	0xF7FFFC76  BL	_Lcd_Out+0
;lcd.c, 24 :: 		Lcd_Out(2,1,"Hum:");
0x24FC	0x4A0A    LDR	R2, [PC, #40]
0x24FE	0x2101    MOVS	R1, #1
0x2500	0x2002    MOVS	R0, #2
0x2502	0xF7FFFC71  BL	_Lcd_Out+0
;lcd.c, 25 :: 		Lcd_Out(1,7,txtTemp);
0x2506	0xAA01    ADD	R2, SP, #4
0x2508	0x2107    MOVS	R1, #7
0x250A	0x2001    MOVS	R0, #1
0x250C	0xF7FFFC6C  BL	_Lcd_Out+0
;lcd.c, 26 :: 		Lcd_Out(2,7,txtHum);
0x2510	0xF10D0213  ADD	R2, SP, #19
0x2514	0x2107    MOVS	R1, #7
0x2516	0x2002    MOVS	R0, #2
0x2518	0xF7FFFC66  BL	_Lcd_Out+0
;lcd.c, 27 :: 		}
L_end_showTempLCD:
0x251C	0xF8DDE000  LDR	LR, [SP, #0]
0x2520	0xB00B    ADD	SP, SP, #44
0x2522	0x4770    BX	LR
0x2524	0x00002000  	?lstr1_lcd+0
0x2528	0x00062000  	?lstr2_lcd+0
; end of _showTempLCD
_FloatToStr:
;__Lib_Conversions.c, 631 :: 		
; str start address is: 0 (R0)
0x12B0	0xB083    SUB	SP, SP, #12
0x12B2	0xF8CDE000  STR	LR, [SP, #0]
; fnum start address is: 0 (S0)
0x12B6	0x4604    MOV	R4, R0
; str end address is: 0 (R0)
; fnum end address is: 0 (S0)
; fnum start address is: 0 (S0)
; str start address is: 16 (R4)
;__Lib_Conversions.c, 633 :: 		
; bpoint start address is: 0 (R0)
0x12B8	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 635 :: 		
; dexpon start address is: 12 (R3)
0x12BA	0x2300    MOVS	R3, #0
0x12BC	0xB25B    SXTB	R3, R3
;__Lib_Conversions.c, 638 :: 		
0x12BE	0xED8D0A02  VSTR.32	S0, [SP, #8]
; fnum end address is: 0 (S0)
;__Lib_Conversions.c, 639 :: 		
0x12C2	0x9902    LDR	R1, [SP, #8]
0x12C4	0xF1B13FFF  CMP	R1, #-1
0x12C8	0xD105    BNE	L_FloatToStr117
; bpoint end address is: 0 (R0)
; dexpon end address is: 12 (R3)
;__Lib_Conversions.c, 640 :: 		
0x12CA	0x4970    LDR	R1, [PC, #448]
0x12CC	0x4620    MOV	R0, R4
; str end address is: 16 (R4)
0x12CE	0xF7FFFC8F  BL	_strcpy+0
;__Lib_Conversions.c, 641 :: 		
0x12D2	0x2003    MOVS	R0, #3
0x12D4	0xE0D5    B	L_end_FloatToStr
;__Lib_Conversions.c, 642 :: 		
L_FloatToStr117:
;__Lib_Conversions.c, 643 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 16 (R4)
; i start address is: 20 (R5)
; bpoint start address is: 0 (R0)
0x12D6	0x2501    MOVS	R5, #1
;__Lib_Conversions.c, 644 :: 		
0x12D8	0xA902    ADD	R1, SP, #8
0x12DA	0x1CC9    ADDS	R1, R1, #3
0x12DC	0x7809    LDRB	R1, [R1, #0]
0x12DE	0xF0010180  AND	R1, R1, #128
0x12E2	0xB2C9    UXTB	R1, R1
0x12E4	0xB169    CBZ	R1, L__FloatToStr179
;__Lib_Conversions.c, 645 :: 		
0x12E6	0xA902    ADD	R1, SP, #8
0x12E8	0x1CCA    ADDS	R2, R1, #3
0x12EA	0x7811    LDRB	R1, [R2, #0]
0x12EC	0xF0810180  EOR	R1, R1, #128
0x12F0	0x7011    STRB	R1, [R2, #0]
;__Lib_Conversions.c, 646 :: 		
0x12F2	0x1C69    ADDS	R1, R5, #1
; i end address is: 20 (R5)
; i start address is: 8 (R2)
0x12F4	0xB2CA    UXTB	R2, R1
;__Lib_Conversions.c, 647 :: 		
0x12F6	0x212D    MOVS	R1, #45
0x12F8	0x7021    STRB	R1, [R4, #0]
0x12FA	0x1C64    ADDS	R4, R4, #1
; i end address is: 8 (R2)
; str end address is: 16 (R4)
0x12FC	0xB2D7    UXTB	R7, R2
0x12FE	0x4626    MOV	R6, R4
;__Lib_Conversions.c, 648 :: 		
0x1300	0xE001    B	L_FloatToStr118
L__FloatToStr179:
;__Lib_Conversions.c, 644 :: 		
0x1302	0x4626    MOV	R6, R4
0x1304	0xB2EF    UXTB	R7, R5
;__Lib_Conversions.c, 648 :: 		
L_FloatToStr118:
;__Lib_Conversions.c, 649 :: 		
; str start address is: 24 (R6)
; i start address is: 28 (R7)
0x1306	0x9902    LDR	R1, [SP, #8]
0x1308	0xB929    CBNZ	R1, L_FloatToStr119
; bpoint end address is: 0 (R0)
; i end address is: 28 (R7)
; dexpon end address is: 12 (R3)
;__Lib_Conversions.c, 650 :: 		
0x130A	0x4961    LDR	R1, [PC, #388]
0x130C	0x4630    MOV	R0, R6
; str end address is: 24 (R6)
0x130E	0xF7FFFC6F  BL	_strcpy+0
;__Lib_Conversions.c, 651 :: 		
0x1312	0x2000    MOVS	R0, #0
0x1314	0xE0B5    B	L_end_FloatToStr
;__Lib_Conversions.c, 652 :: 		
L_FloatToStr119:
;__Lib_Conversions.c, 653 :: 		
; dexpon start address is: 12 (R3)
; i start address is: 28 (R7)
; str start address is: 24 (R6)
; bpoint start address is: 0 (R0)
0x1316	0x9902    LDR	R1, [SP, #8]
0x1318	0xF1B14FFF  CMP	R1, #2139095040
0x131C	0xD105    BNE	L_FloatToStr120
; bpoint end address is: 0 (R0)
; dexpon end address is: 12 (R3)
;__Lib_Conversions.c, 654 :: 		
0x131E	0x495D    LDR	R1, [PC, #372]
0x1320	0x4630    MOV	R0, R6
; str end address is: 24 (R6)
0x1322	0xF7FFFC65  BL	_strcpy+0
;__Lib_Conversions.c, 655 :: 		
0x1326	0xB2F8    UXTB	R0, R7
; i end address is: 28 (R7)
0x1328	0xE0AB    B	L_end_FloatToStr
;__Lib_Conversions.c, 656 :: 		
L_FloatToStr120:
;__Lib_Conversions.c, 664 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 24 (R6)
; bpoint start address is: 0 (R0)
0x132A	0xF88D3004  STRB	R3, [SP, #4]
; str end address is: 24 (R6)
; dexpon end address is: 12 (R3)
0x132E	0xB2C3    UXTB	R3, R0
0x1330	0x4634    MOV	R4, R6
0x1332	0xF99D0004  LDRSB	R0, [SP, #4]
L_FloatToStr121:
; bpoint end address is: 0 (R0)
; str start address is: 16 (R4)
; dexpon start address is: 0 (R0)
; bpoint start address is: 12 (R3)
0x1336	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x133A	0xEEB70A00  VMOV.F32	S0, #1
0x133E	0xEEF40AC0  VCMPE.F32	S1, S0
0x1342	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1346	0xDA0A    BGE	L_FloatToStr122
;__Lib_Conversions.c, 665 :: 		
0x1348	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x134C	0xEEB20A04  VMOV.F32	S0, #10
0x1350	0xEE200A80  VMUL.F32	S0, S1, S0
0x1354	0xED8D0A02  VSTR.32	S0, [SP, #8]
;__Lib_Conversions.c, 666 :: 		
0x1358	0x1E40    SUBS	R0, R0, #1
0x135A	0xB240    SXTB	R0, R0
;__Lib_Conversions.c, 667 :: 		
0x135C	0xE7EB    B	L_FloatToStr121
L_FloatToStr122:
;__Lib_Conversions.c, 672 :: 		
; bpoint end address is: 12 (R3)
; dexpon end address is: 0 (R0)
L_FloatToStr123:
; str end address is: 16 (R4)
; bpoint start address is: 12 (R3)
; dexpon start address is: 0 (R0)
; str start address is: 16 (R4)
0x135E	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x1362	0xEEB20A04  VMOV.F32	S0, #10
0x1366	0xEEF40AC0  VCMPE.F32	S1, S0
0x136A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x136E	0xDB0B    BLT	L_FloatToStr124
;__Lib_Conversions.c, 673 :: 		
0x1370	0xEDDD0A02  VLDR.32	S1, [SP, #8]
0x1374	0x4948    LDR	R1, [PC, #288]
0x1376	0xEE001A10  VMOV	S0, R1
0x137A	0xEE200A80  VMUL.F32	S0, S1, S0
0x137E	0xED8D0A02  VSTR.32	S0, [SP, #8]
;__Lib_Conversions.c, 674 :: 		
0x1382	0x1C40    ADDS	R0, R0, #1
0x1384	0xB240    SXTB	R0, R0
;__Lib_Conversions.c, 675 :: 		
0x1386	0xE7EA    B	L_FloatToStr123
L_FloatToStr124:
;__Lib_Conversions.c, 680 :: 		
0x1388	0x9902    LDR	R1, [SP, #8]
0x138A	0x0049    LSLS	R1, R1, #1
0x138C	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 689 :: 		
0x138E	0xA902    ADD	R1, SP, #8
0x1390	0x1CC9    ADDS	R1, R1, #3
0x1392	0x7809    LDRB	R1, [R1, #0]
0x1394	0x397F    SUBS	R1, #127
; d start address is: 20 (R5)
0x1396	0xB2CD    UXTB	R5, R1
;__Lib_Conversions.c, 692 :: 		
0x1398	0xA902    ADD	R1, SP, #8
0x139A	0x1CCA    ADDS	R2, R1, #3
0x139C	0x2101    MOVS	R1, #1
0x139E	0x7011    STRB	R1, [R2, #0]
;__Lib_Conversions.c, 693 :: 		
0x13A0	0x9902    LDR	R1, [SP, #8]
0x13A2	0x40A9    LSLS	R1, R5
; d end address is: 20 (R5)
0x13A4	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 694 :: 		
0x13A6	0xA902    ADD	R1, SP, #8
0x13A8	0x1CC9    ADDS	R1, R1, #3
0x13AA	0x7809    LDRB	R1, [R1, #0]
0x13AC	0x3130    ADDS	R1, #48
0x13AE	0x7021    STRB	R1, [R4, #0]
0x13B0	0x1C62    ADDS	R2, R4, #1
; str end address is: 16 (R4)
; str start address is: 8 (R2)
;__Lib_Conversions.c, 695 :: 		
0x13B2	0x2801    CMP	R0, #1
0x13B4	0xDB03    BLT	L__FloatToStr178
0x13B6	0x2806    CMP	R0, #6
0x13B8	0xDC01    BGT	L__FloatToStr177
0x13BA	0x4615    MOV	R5, R2
; bpoint end address is: 12 (R3)
0x13BC	0xE003    B	L_FloatToStr127
L__FloatToStr178:
L__FloatToStr177:
;__Lib_Conversions.c, 696 :: 		
0x13BE	0x212E    MOVS	R1, #46
0x13C0	0x7011    STRB	R1, [R2, #0]
0x13C2	0x1C55    ADDS	R5, R2, #1
; str end address is: 8 (R2)
; str start address is: 20 (R5)
;__Lib_Conversions.c, 697 :: 		
; bpoint start address is: 12 (R3)
0x13C4	0x2301    MOVS	R3, #1
; str end address is: 20 (R5)
; bpoint end address is: 12 (R3)
;__Lib_Conversions.c, 698 :: 		
L_FloatToStr127:
;__Lib_Conversions.c, 699 :: 		
; bpoint start address is: 12 (R3)
; str start address is: 20 (R5)
; d start address is: 4 (R1)
0x13C6	0x2106    MOVS	R1, #6
; d end address is: 4 (R1)
; str end address is: 20 (R5)
; bpoint end address is: 12 (R3)
; dexpon end address is: 0 (R0)
0x13C8	0xB244    SXTB	R4, R0
0x13CA	0xB2C8    UXTB	R0, R1
L_FloatToStr128:
; d start address is: 0 (R0)
; str start address is: 20 (R5)
; bpoint start address is: 12 (R3)
; dexpon start address is: 16 (R4)
0x13CC	0xB310    CBZ	R0, L_FloatToStr129
;__Lib_Conversions.c, 700 :: 		
0x13CE	0xA902    ADD	R1, SP, #8
0x13D0	0x1CCA    ADDS	R2, R1, #3
0x13D2	0x2100    MOVS	R1, #0
0x13D4	0x7011    STRB	R1, [R2, #0]
;__Lib_Conversions.c, 701 :: 		
0x13D6	0x9902    LDR	R1, [SP, #8]
0x13D8	0x008A    LSLS	R2, R1, #2
0x13DA	0x9902    LDR	R1, [SP, #8]
0x13DC	0x1889    ADDS	R1, R1, R2
0x13DE	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 702 :: 		
0x13E0	0x9902    LDR	R1, [SP, #8]
0x13E2	0x0049    LSLS	R1, R1, #1
0x13E4	0x9102    STR	R1, [SP, #8]
;__Lib_Conversions.c, 703 :: 		
0x13E6	0xA902    ADD	R1, SP, #8
0x13E8	0x1CC9    ADDS	R1, R1, #3
0x13EA	0x7809    LDRB	R1, [R1, #0]
0x13EC	0x3130    ADDS	R1, #48
0x13EE	0x7029    STRB	R1, [R5, #0]
0x13F0	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 704 :: 		
0x13F2	0xB963    CBNZ	R3, L__FloatToStr181
;__Lib_Conversions.c, 705 :: 		
0x13F4	0x1E61    SUBS	R1, R4, #1
0x13F6	0xB249    SXTB	R1, R1
; dexpon end address is: 16 (R4)
; dexpon start address is: 8 (R2)
0x13F8	0xB24A    SXTB	R2, R1
0x13FA	0xB921    CBNZ	R1, L__FloatToStr180
; bpoint end address is: 12 (R3)
;__Lib_Conversions.c, 706 :: 		
0x13FC	0x212E    MOVS	R1, #46
0x13FE	0x7029    STRB	R1, [R5, #0]
0x1400	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 707 :: 		
; bpoint start address is: 4 (R1)
0x1402	0x2101    MOVS	R1, #1
; bpoint end address is: 4 (R1)
; str end address is: 20 (R5)
;__Lib_Conversions.c, 708 :: 		
0x1404	0xE000    B	L_FloatToStr132
L__FloatToStr180:
;__Lib_Conversions.c, 705 :: 		
0x1406	0xB2D9    UXTB	R1, R3
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr132:
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
0x1408	0xB254    SXTB	R4, R2
; dexpon end address is: 8 (R2)
; bpoint end address is: 4 (R1)
; str end address is: 20 (R5)
0x140A	0xB2CB    UXTB	R3, R1
0x140C	0xE7FF    B	L_FloatToStr131
L__FloatToStr181:
;__Lib_Conversions.c, 704 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr131:
;__Lib_Conversions.c, 699 :: 		
; str start address is: 20 (R5)
; bpoint start address is: 12 (R3)
; dexpon start address is: 16 (R4)
0x140E	0x1E40    SUBS	R0, R0, #1
0x1410	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 709 :: 		
; bpoint end address is: 12 (R3)
; d end address is: 0 (R0)
0x1412	0xE7DB    B	L_FloatToStr128
L_FloatToStr129:
;__Lib_Conversions.c, 710 :: 		
0x1414	0x462A    MOV	R2, R5
; dexpon end address is: 16 (R4)
0x1416	0xB260    SXTB	R0, R4
L_FloatToStr133:
; str end address is: 20 (R5)
; dexpon start address is: 0 (R0)
; str start address is: 8 (R2)
0x1418	0x1E51    SUBS	R1, R2, #1
0x141A	0x7809    LDRB	R1, [R1, #0]
0x141C	0x2930    CMP	R1, #48
0x141E	0xD101    BNE	L_FloatToStr134
;__Lib_Conversions.c, 711 :: 		
0x1420	0x1E52    SUBS	R2, R2, #1
0x1422	0xE7F9    B	L_FloatToStr133
L_FloatToStr134:
;__Lib_Conversions.c, 712 :: 		
0x1424	0x1E51    SUBS	R1, R2, #1
0x1426	0x7809    LDRB	R1, [R1, #0]
0x1428	0x292E    CMP	R1, #46
0x142A	0xD101    BNE	L__FloatToStr182
;__Lib_Conversions.c, 713 :: 		
0x142C	0x1E52    SUBS	R2, R2, #1
; str end address is: 8 (R2)
0x142E	0xE7FF    B	L_FloatToStr135
L__FloatToStr182:
;__Lib_Conversions.c, 712 :: 		
;__Lib_Conversions.c, 713 :: 		
L_FloatToStr135:
;__Lib_Conversions.c, 714 :: 		
; str start address is: 8 (R2)
0x1430	0xB318    CBZ	R0, L__FloatToStr185
;__Lib_Conversions.c, 715 :: 		
0x1432	0x2165    MOVS	R1, #101
0x1434	0x7011    STRB	R1, [R2, #0]
0x1436	0x1C52    ADDS	R2, R2, #1
;__Lib_Conversions.c, 716 :: 		
0x1438	0x2800    CMP	R0, #0
0x143A	0xDA06    BGE	L__FloatToStr183
;__Lib_Conversions.c, 717 :: 		
0x143C	0x212D    MOVS	R1, #45
0x143E	0x7011    STRB	R1, [R2, #0]
0x1440	0x1C52    ADDS	R2, R2, #1
;__Lib_Conversions.c, 718 :: 		
0x1442	0x4241    RSBS	R1, R0, #0
0x1444	0xB248    SXTB	R0, R1
; dexpon end address is: 0 (R0)
; str end address is: 8 (R2)
0x1446	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
0x1448	0xE000    B	L_FloatToStr137
L__FloatToStr183:
;__Lib_Conversions.c, 716 :: 		
0x144A	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
L_FloatToStr137:
;__Lib_Conversions.c, 720 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 8 (R2)
; d start address is: 0 (R0)
0x144C	0xB2D8    UXTB	R0, R3
;__Lib_Conversions.c, 721 :: 		
0x144E	0xB2D9    UXTB	R1, R3
; dexpon end address is: 12 (R3)
0x1450	0x2909    CMP	R1, #9
0x1452	0xD907    BLS	L__FloatToStr184
;__Lib_Conversions.c, 722 :: 		
0x1454	0x210A    MOVS	R1, #10
0x1456	0xFBB0F1F1  UDIV	R1, R0, R1
0x145A	0xB2C9    UXTB	R1, R1
0x145C	0x3130    ADDS	R1, #48
0x145E	0x7011    STRB	R1, [R2, #0]
0x1460	0x1C53    ADDS	R3, R2, #1
; str end address is: 8 (R2)
; str start address is: 12 (R3)
; str end address is: 12 (R3)
0x1462	0xE000    B	L_FloatToStr138
L__FloatToStr184:
;__Lib_Conversions.c, 721 :: 		
0x1464	0x4613    MOV	R3, R2
;__Lib_Conversions.c, 722 :: 		
L_FloatToStr138:
;__Lib_Conversions.c, 723 :: 		
; str start address is: 12 (R3)
0x1466	0x220A    MOVS	R2, #10
0x1468	0xFBB0F1F2  UDIV	R1, R0, R2
0x146C	0xFB020111  MLS	R1, R2, R1, R0
0x1470	0xB2C9    UXTB	R1, R1
; d end address is: 0 (R0)
0x1472	0x3130    ADDS	R1, #48
0x1474	0x7019    STRB	R1, [R3, #0]
0x1476	0x1C58    ADDS	R0, R3, #1
; str end address is: 12 (R3)
; str start address is: 0 (R0)
; str end address is: 0 (R0)
;__Lib_Conversions.c, 724 :: 		
0x1478	0xE000    B	L_FloatToStr136
L__FloatToStr185:
;__Lib_Conversions.c, 714 :: 		
0x147A	0x4610    MOV	R0, R2
;__Lib_Conversions.c, 724 :: 		
L_FloatToStr136:
;__Lib_Conversions.c, 725 :: 		
; str start address is: 0 (R0)
0x147C	0x2100    MOVS	R1, #0
0x147E	0x7001    STRB	R1, [R0, #0]
; str end address is: 0 (R0)
;__Lib_Conversions.c, 726 :: 		
0x1480	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 727 :: 		
L_end_FloatToStr:
0x1482	0xF8DDE000  LDR	LR, [SP, #0]
0x1486	0xB003    ADD	SP, SP, #12
0x1488	0x4770    BX	LR
0x148A	0xBF00    NOP
0x148C	0x01632000  	?lstr1___Lib_Conversions+0
0x1490	0x01672000  	?lstr2___Lib_Conversions+0
0x1494	0x01692000  	?lstr3___Lib_Conversions+0
0x1498	0xCCCD3DCC  	#1036831949
; end of _FloatToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x0BF0	0xB081    SUB	SP, SP, #4
0x0BF2	0x9100    STR	R1, [SP, #0]
0x0BF4	0x4601    MOV	R1, R0
0x0BF6	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x0BF8	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x0BFA	0x461C    MOV	R4, R3
0x0BFC	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x0BFE	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x0C00	0x4603    MOV	R3, R0
0x0C02	0x1C42    ADDS	R2, R0, #1
0x0C04	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x0C06	0x781A    LDRB	R2, [R3, #0]
0x0C08	0x7022    STRB	R2, [R4, #0]
0x0C0A	0x7822    LDRB	R2, [R4, #0]
0x0C0C	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x0C0E	0x462B    MOV	R3, R5
0x0C10	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x0C12	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x0C14	0xB001    ADD	SP, SP, #4
0x0C16	0x4770    BX	LR
; end of _strcpy
_sendData:
;uart.c, 239 :: 		uint8_t sendData(float temp, float hum, float pres, float dist) {
0x20CC	0xB0B2    SUB	SP, SP, #200
0x20CE	0xF8CDE000  STR	LR, [SP, #0]
; dist start address is: 12 (S3)
; pres start address is: 8 (S2)
; hum start address is: 4 (S1)
; temp start address is: 0 (S0)
0x20D2	0xEEB02A61  VMOV.F32	S4, S3
0x20D6	0xEEF01A41  VMOV.F32	S3, S2
0x20DA	0xEEB01A60  VMOV.F32	S2, S1
; dist end address is: 12 (S3)
; pres end address is: 8 (S2)
; hum end address is: 4 (S1)
; temp end address is: 0 (S0)
; temp start address is: 0 (S0)
; hum start address is: 8 (S2)
; pres start address is: 12 (S3)
; dist start address is: 16 (S4)
;uart.c, 242 :: 		uint8_t url[150] = "AT+HTTPPARA=\"URL\",\"http://azaric.asuscomm.com:9998/mips/log?temp=";
0x20DE	0xF10D0B30  ADD	R11, SP, #48
0x20E2	0xF10B0A96  ADD	R10, R11, #150
0x20E6	0xF8DFC344  LDR	R12, [PC, #836]
0x20EA	0xF000FC2B  BL	___CC2DW+0
;uart.c, 243 :: 		len = strlen(url);
0x20EE	0xAC0C    ADD	R4, SP, #48
0x20F0	0x4620    MOV	R0, R4
0x20F2	0xF7FFF86B  BL	_strlen+0
; len start address is: 32 (R8)
0x20F6	0xFA0FF880  SXTH	R8, R0
;uart.c, 244 :: 		FloatToStr(temp, txtTemp);
0x20FA	0xAC02    ADD	R4, SP, #8
0x20FC	0x4620    MOV	R0, R4
; temp end address is: 0 (S0)
0x20FE	0xF7FFF8D7  BL	_FloatToStr+0
;uart.c, 245 :: 		FloatToStr(hum, txtHum);
0x2102	0xF10D0412  ADD	R4, SP, #18
0x2106	0x4620    MOV	R0, R4
0x2108	0xEEB00A41  VMOV.F32	S0, S2
; hum end address is: 8 (S2)
0x210C	0xF7FFF8D0  BL	_FloatToStr+0
;uart.c, 246 :: 		FloatToStr(pres, txtPres);
0x2110	0xAC07    ADD	R4, SP, #28
0x2112	0x4620    MOV	R0, R4
0x2114	0xEEB00A61  VMOV.F32	S0, S3
; pres end address is: 12 (S3)
0x2118	0xF7FFF8CA  BL	_FloatToStr+0
;uart.c, 247 :: 		FloatToStr(dist, txtDist);
0x211C	0xF10D0426  ADD	R4, SP, #38
0x2120	0x4620    MOV	R0, R4
0x2122	0xEEB00A42  VMOV.F32	S0, S4
; dist end address is: 16 (S4)
0x2126	0xF7FFF8C3  BL	_FloatToStr+0
;uart.c, 248 :: 		for (i = 0; i < strlen(txtTemp); i++) {
; i start address is: 24 (R6)
0x212A	0x2600    MOVS	R6, #0
; len end address is: 32 (R8)
; i end address is: 24 (R6)
0x212C	0x4647    MOV	R7, R8
L_sendData48:
; i start address is: 24 (R6)
; len start address is: 28 (R7)
0x212E	0xAC02    ADD	R4, SP, #8
0x2130	0x4620    MOV	R0, R4
0x2132	0xF7FFF84B  BL	_strlen+0
0x2136	0x4286    CMP	R6, R0
0x2138	0xD20D    BCS	L_sendData49
;uart.c, 249 :: 		if (txtTemp[i] == '\0')
0x213A	0xAC02    ADD	R4, SP, #8
0x213C	0x19A4    ADDS	R4, R4, R6
0x213E	0x7824    LDRB	R4, [R4, #0]
0x2140	0xB904    CBNZ	R4, L_sendData51
; i end address is: 24 (R6)
;uart.c, 250 :: 		break;
0x2142	0xE008    B	L_sendData49
L_sendData51:
;uart.c, 251 :: 		url[len++] = txtTemp[i];
; i start address is: 24 (R6)
0x2144	0xAC0C    ADD	R4, SP, #48
0x2146	0x19E5    ADDS	R5, R4, R7
0x2148	0xAC02    ADD	R4, SP, #8
0x214A	0x19A4    ADDS	R4, R4, R6
0x214C	0x7824    LDRB	R4, [R4, #0]
0x214E	0x702C    STRB	R4, [R5, #0]
0x2150	0x1C7F    ADDS	R7, R7, #1
;uart.c, 248 :: 		for (i = 0; i < strlen(txtTemp); i++) {
0x2152	0x1C76    ADDS	R6, R6, #1
;uart.c, 252 :: 		}
; i end address is: 24 (R6)
0x2154	0xE7EB    B	L_sendData48
L_sendData49:
;uart.c, 254 :: 		url[len++] = '&';url[len++] = 'h';url[len++] = 'u';url[len++] = 'm';url[len++] = '=';
0x2156	0xAE0C    ADD	R6, SP, #48
0x2158	0x19F5    ADDS	R5, R6, R7
0x215A	0x2426    MOVS	R4, #38
0x215C	0x702C    STRB	R4, [R5, #0]
0x215E	0x1C7C    ADDS	R4, R7, #1
; len end address is: 28 (R7)
; len start address is: 0 (R0)
0x2160	0x4620    MOV	R0, R4
0x2162	0x1935    ADDS	R5, R6, R4
0x2164	0x2468    MOVS	R4, #104
0x2166	0x702C    STRB	R4, [R5, #0]
0x2168	0x1C44    ADDS	R4, R0, #1
0x216A	0x4620    MOV	R0, R4
0x216C	0x1935    ADDS	R5, R6, R4
0x216E	0x2475    MOVS	R4, #117
0x2170	0x702C    STRB	R4, [R5, #0]
0x2172	0x1C44    ADDS	R4, R0, #1
0x2174	0x4620    MOV	R0, R4
0x2176	0x1935    ADDS	R5, R6, R4
0x2178	0x246D    MOVS	R4, #109
0x217A	0x702C    STRB	R4, [R5, #0]
0x217C	0x1C44    ADDS	R4, R0, #1
0x217E	0x4620    MOV	R0, R4
0x2180	0x1935    ADDS	R5, R6, R4
0x2182	0x243D    MOVS	R4, #61
0x2184	0x702C    STRB	R4, [R5, #0]
0x2186	0x1C47    ADDS	R7, R0, #1
; len end address is: 0 (R0)
; len start address is: 28 (R7)
;uart.c, 256 :: 		for (i = 0; i < strlen(txtHum); i++) {
; i start address is: 24 (R6)
0x2188	0x2600    MOVS	R6, #0
; len end address is: 28 (R7)
; i end address is: 24 (R6)
L_sendData52:
; i start address is: 24 (R6)
; len start address is: 28 (R7)
0x218A	0xF10D0412  ADD	R4, SP, #18
0x218E	0x4620    MOV	R0, R4
0x2190	0xF7FFF81C  BL	_strlen+0
0x2194	0x4286    CMP	R6, R0
0x2196	0xD20F    BCS	L_sendData53
;uart.c, 257 :: 		if (txtHum[i] == '\0')
0x2198	0xF10D0412  ADD	R4, SP, #18
0x219C	0x19A4    ADDS	R4, R4, R6
0x219E	0x7824    LDRB	R4, [R4, #0]
0x21A0	0xB904    CBNZ	R4, L_sendData55
; i end address is: 24 (R6)
;uart.c, 258 :: 		break;
0x21A2	0xE009    B	L_sendData53
L_sendData55:
;uart.c, 259 :: 		url[len++] = txtHum[i];
; i start address is: 24 (R6)
0x21A4	0xAC0C    ADD	R4, SP, #48
0x21A6	0x19E5    ADDS	R5, R4, R7
0x21A8	0xF10D0412  ADD	R4, SP, #18
0x21AC	0x19A4    ADDS	R4, R4, R6
0x21AE	0x7824    LDRB	R4, [R4, #0]
0x21B0	0x702C    STRB	R4, [R5, #0]
0x21B2	0x1C7F    ADDS	R7, R7, #1
;uart.c, 256 :: 		for (i = 0; i < strlen(txtHum); i++) {
0x21B4	0x1C76    ADDS	R6, R6, #1
;uart.c, 260 :: 		}
; i end address is: 24 (R6)
0x21B6	0xE7E8    B	L_sendData52
L_sendData53:
;uart.c, 262 :: 		url[len++] = '&';url[len++] = 'p';url[len++] = 'r';url[len++] = 'e';url[len++] = 's';url[len++] = '=';
0x21B8	0xAE0C    ADD	R6, SP, #48
0x21BA	0x19F5    ADDS	R5, R6, R7
0x21BC	0x2426    MOVS	R4, #38
0x21BE	0x702C    STRB	R4, [R5, #0]
0x21C0	0x1C7C    ADDS	R4, R7, #1
; len end address is: 28 (R7)
; len start address is: 0 (R0)
0x21C2	0x4620    MOV	R0, R4
0x21C4	0x1935    ADDS	R5, R6, R4
0x21C6	0x2470    MOVS	R4, #112
0x21C8	0x702C    STRB	R4, [R5, #0]
0x21CA	0x1C44    ADDS	R4, R0, #1
0x21CC	0x4620    MOV	R0, R4
0x21CE	0x1935    ADDS	R5, R6, R4
0x21D0	0x2472    MOVS	R4, #114
0x21D2	0x702C    STRB	R4, [R5, #0]
0x21D4	0x1C44    ADDS	R4, R0, #1
0x21D6	0x4620    MOV	R0, R4
0x21D8	0x1935    ADDS	R5, R6, R4
0x21DA	0x2465    MOVS	R4, #101
0x21DC	0x702C    STRB	R4, [R5, #0]
0x21DE	0x1C44    ADDS	R4, R0, #1
0x21E0	0x4620    MOV	R0, R4
0x21E2	0x1935    ADDS	R5, R6, R4
0x21E4	0x2473    MOVS	R4, #115
0x21E6	0x702C    STRB	R4, [R5, #0]
0x21E8	0x1C44    ADDS	R4, R0, #1
0x21EA	0x4620    MOV	R0, R4
0x21EC	0x1935    ADDS	R5, R6, R4
0x21EE	0x243D    MOVS	R4, #61
0x21F0	0x702C    STRB	R4, [R5, #0]
0x21F2	0x1C47    ADDS	R7, R0, #1
; len end address is: 0 (R0)
; len start address is: 28 (R7)
;uart.c, 264 :: 		for (i = 0; i < strlen(txtPres); i++) {
; i start address is: 24 (R6)
0x21F4	0x2600    MOVS	R6, #0
; len end address is: 28 (R7)
; i end address is: 24 (R6)
L_sendData56:
; i start address is: 24 (R6)
; len start address is: 28 (R7)
0x21F6	0xAC07    ADD	R4, SP, #28
0x21F8	0x4620    MOV	R0, R4
0x21FA	0xF7FEFFE7  BL	_strlen+0
0x21FE	0x4286    CMP	R6, R0
0x2200	0xD20D    BCS	L_sendData57
;uart.c, 265 :: 		if (txtPres[i] == '\0')
0x2202	0xAC07    ADD	R4, SP, #28
0x2204	0x19A4    ADDS	R4, R4, R6
0x2206	0x7824    LDRB	R4, [R4, #0]
0x2208	0xB904    CBNZ	R4, L_sendData59
; i end address is: 24 (R6)
;uart.c, 266 :: 		break;
0x220A	0xE008    B	L_sendData57
L_sendData59:
;uart.c, 267 :: 		url[len++] = txtPres[i];
; i start address is: 24 (R6)
0x220C	0xAC0C    ADD	R4, SP, #48
0x220E	0x19E5    ADDS	R5, R4, R7
0x2210	0xAC07    ADD	R4, SP, #28
0x2212	0x19A4    ADDS	R4, R4, R6
0x2214	0x7824    LDRB	R4, [R4, #0]
0x2216	0x702C    STRB	R4, [R5, #0]
0x2218	0x1C7F    ADDS	R7, R7, #1
;uart.c, 264 :: 		for (i = 0; i < strlen(txtPres); i++) {
0x221A	0x1C76    ADDS	R6, R6, #1
;uart.c, 268 :: 		}
; i end address is: 24 (R6)
0x221C	0xE7EB    B	L_sendData56
L_sendData57:
;uart.c, 270 :: 		url[len++] = '&';url[len++] = 'd';url[len++] = 'i';url[len++] = 's';url[len++] = 't';url[len++] = '=';
0x221E	0xAE0C    ADD	R6, SP, #48
0x2220	0x19F5    ADDS	R5, R6, R7
0x2222	0x2426    MOVS	R4, #38
0x2224	0x702C    STRB	R4, [R5, #0]
0x2226	0x1C7C    ADDS	R4, R7, #1
; len end address is: 28 (R7)
; len start address is: 0 (R0)
0x2228	0x4620    MOV	R0, R4
0x222A	0x1935    ADDS	R5, R6, R4
0x222C	0x2464    MOVS	R4, #100
0x222E	0x702C    STRB	R4, [R5, #0]
0x2230	0x1C44    ADDS	R4, R0, #1
0x2232	0x4620    MOV	R0, R4
0x2234	0x1935    ADDS	R5, R6, R4
0x2236	0x2469    MOVS	R4, #105
0x2238	0x702C    STRB	R4, [R5, #0]
0x223A	0x1C44    ADDS	R4, R0, #1
0x223C	0x4620    MOV	R0, R4
0x223E	0x1935    ADDS	R5, R6, R4
0x2240	0x2473    MOVS	R4, #115
0x2242	0x702C    STRB	R4, [R5, #0]
0x2244	0x1C44    ADDS	R4, R0, #1
0x2246	0x4620    MOV	R0, R4
0x2248	0x1935    ADDS	R5, R6, R4
0x224A	0x2474    MOVS	R4, #116
0x224C	0x702C    STRB	R4, [R5, #0]
0x224E	0x1C44    ADDS	R4, R0, #1
0x2250	0x4620    MOV	R0, R4
0x2252	0x1935    ADDS	R5, R6, R4
0x2254	0x243D    MOVS	R4, #61
0x2256	0x702C    STRB	R4, [R5, #0]
0x2258	0x1C41    ADDS	R1, R0, #1
; len end address is: 0 (R0)
; len start address is: 4 (R1)
;uart.c, 272 :: 		for (i = 0; i < strlen(txtDist); i++) {
; i start address is: 24 (R6)
0x225A	0x2600    MOVS	R6, #0
; len end address is: 4 (R1)
; i end address is: 24 (R6)
L_sendData60:
; i start address is: 24 (R6)
; len start address is: 4 (R1)
0x225C	0xF10D0426  ADD	R4, SP, #38
0x2260	0x9101    STR	R1, [SP, #4]
0x2262	0x4620    MOV	R0, R4
0x2264	0xF7FEFFB2  BL	_strlen+0
0x2268	0x9901    LDR	R1, [SP, #4]
0x226A	0x4286    CMP	R6, R0
0x226C	0xD20F    BCS	L_sendData61
;uart.c, 273 :: 		if (txtDist[i] == '\0')
0x226E	0xF10D0426  ADD	R4, SP, #38
0x2272	0x19A4    ADDS	R4, R4, R6
0x2274	0x7824    LDRB	R4, [R4, #0]
0x2276	0xB904    CBNZ	R4, L_sendData63
; i end address is: 24 (R6)
;uart.c, 274 :: 		break;
0x2278	0xE009    B	L_sendData61
L_sendData63:
;uart.c, 275 :: 		url[len++] = txtDist[i];
; i start address is: 24 (R6)
0x227A	0xAC0C    ADD	R4, SP, #48
0x227C	0x1865    ADDS	R5, R4, R1
0x227E	0xF10D0426  ADD	R4, SP, #38
0x2282	0x19A4    ADDS	R4, R4, R6
0x2284	0x7824    LDRB	R4, [R4, #0]
0x2286	0x702C    STRB	R4, [R5, #0]
0x2288	0x1C49    ADDS	R1, R1, #1
;uart.c, 272 :: 		for (i = 0; i < strlen(txtDist); i++) {
0x228A	0x1C76    ADDS	R6, R6, #1
;uart.c, 276 :: 		}
; i end address is: 24 (R6)
0x228C	0xE7E6    B	L_sendData60
L_sendData61:
;uart.c, 277 :: 		url[len++] = '\"';url[len++] = '\r';url[len++] = '\n';url[len++] = '\0';
0x228E	0xAE0C    ADD	R6, SP, #48
0x2290	0x1875    ADDS	R5, R6, R1
0x2292	0x2422    MOVS	R4, #34
0x2294	0x702C    STRB	R4, [R5, #0]
0x2296	0x1C4C    ADDS	R4, R1, #1
; len end address is: 4 (R1)
; len start address is: 0 (R0)
0x2298	0x4620    MOV	R0, R4
0x229A	0x1935    ADDS	R5, R6, R4
0x229C	0x240D    MOVS	R4, #13
0x229E	0x702C    STRB	R4, [R5, #0]
0x22A0	0x1C44    ADDS	R4, R0, #1
0x22A2	0x4620    MOV	R0, R4
0x22A4	0x1935    ADDS	R5, R6, R4
0x22A6	0x240A    MOVS	R4, #10
0x22A8	0x702C    STRB	R4, [R5, #0]
0x22AA	0x1C44    ADDS	R4, R0, #1
; len end address is: 0 (R0)
0x22AC	0x1935    ADDS	R5, R6, R4
0x22AE	0x2400    MOVS	R4, #0
0x22B0	0x702C    STRB	R4, [R5, #0]
;uart.c, 279 :: 		USART2_Send_Text("AT+CPIN?\r\n");
0x22B2	0x4C5F    LDR	R4, [PC, #380]
0x22B4	0x4620    MOV	R0, R4
0x22B6	0xF7FFFDE3  BL	_USART2_Send_Text+0
;uart.c, 280 :: 		my_Delay_ms(_TIMER_UART);
0x22BA	0xF64030B8  MOVW	R0, #3000
0x22BE	0xF7FEFD63  BL	_my_Delay_ms+0
;uart.c, 281 :: 		if(checkReceiveTxt()==0) return 0;
0x22C2	0xF7FEFF53  BL	_checkReceiveTxt+0
0x22C6	0xB908    CBNZ	R0, L_sendData64
0x22C8	0x2000    MOVS	R0, #0
0x22CA	0xE0AA    B	L_end_sendData
L_sendData64:
;uart.c, 282 :: 		USART2_Send_Text("AT+CIPSHUT\r\n");
0x22CC	0x4C59    LDR	R4, [PC, #356]
0x22CE	0x4620    MOV	R0, R4
0x22D0	0xF7FFFDD6  BL	_USART2_Send_Text+0
;uart.c, 283 :: 		my_Delay_ms(_TIMER_UART);
0x22D4	0xF64030B8  MOVW	R0, #3000
0x22D8	0xF7FEFD56  BL	_my_Delay_ms+0
;uart.c, 284 :: 		if(checkReceiveTxt()==0) return 0;
0x22DC	0xF7FEFF46  BL	_checkReceiveTxt+0
0x22E0	0xB908    CBNZ	R0, L_sendData65
0x22E2	0x2000    MOVS	R0, #0
0x22E4	0xE09D    B	L_end_sendData
L_sendData65:
;uart.c, 286 :: 		USART2_Send_Text("AT+CGATT=1\r\n");
0x22E6	0x4C54    LDR	R4, [PC, #336]
0x22E8	0x4620    MOV	R0, R4
0x22EA	0xF7FFFDC9  BL	_USART2_Send_Text+0
;uart.c, 287 :: 		my_Delay_ms(_TIMER_UART);
0x22EE	0xF64030B8  MOVW	R0, #3000
0x22F2	0xF7FEFD49  BL	_my_Delay_ms+0
;uart.c, 288 :: 		if(checkReceiveTxt()==0) return 0;
0x22F6	0xF7FEFF39  BL	_checkReceiveTxt+0
0x22FA	0xB908    CBNZ	R0, L_sendData66
0x22FC	0x2000    MOVS	R0, #0
0x22FE	0xE090    B	L_end_sendData
L_sendData66:
;uart.c, 290 :: 		USART2_Send_Text("AT+SAPBR=3,1,\"CONTYPE\",\"GPRS\"\r\n");
0x2300	0x4C4E    LDR	R4, [PC, #312]
0x2302	0x4620    MOV	R0, R4
0x2304	0xF7FFFDBC  BL	_USART2_Send_Text+0
;uart.c, 291 :: 		my_Delay_ms(_TIMER_UART);
0x2308	0xF64030B8  MOVW	R0, #3000
0x230C	0xF7FEFD3C  BL	_my_Delay_ms+0
;uart.c, 292 :: 		if(checkReceiveTxt()==0) return 0;
0x2310	0xF7FEFF2C  BL	_checkReceiveTxt+0
0x2314	0xB908    CBNZ	R0, L_sendData67
0x2316	0x2000    MOVS	R0, #0
0x2318	0xE083    B	L_end_sendData
L_sendData67:
;uart.c, 294 :: 		USART2_Send_Text("AT+SAPBR=3,1,\"APN\",\"internet\"\r\n"); // telenor
0x231A	0x4C49    LDR	R4, [PC, #292]
0x231C	0x4620    MOV	R0, R4
0x231E	0xF7FFFDAF  BL	_USART2_Send_Text+0
;uart.c, 296 :: 		my_Delay_ms(_TIMER_UART);
0x2322	0xF64030B8  MOVW	R0, #3000
0x2326	0xF7FEFD2F  BL	_my_Delay_ms+0
;uart.c, 297 :: 		if(checkReceiveTxt()==0) return 0;
0x232A	0xF7FEFF1F  BL	_checkReceiveTxt+0
0x232E	0xB908    CBNZ	R0, L_sendData68
0x2330	0x2000    MOVS	R0, #0
0x2332	0xE076    B	L_end_sendData
L_sendData68:
;uart.c, 299 :: 		USART2_Send_Text("AT+SAPBR=3,1,\"PWD\",\"gprs\"\r\n"); // telenor
0x2334	0x4C43    LDR	R4, [PC, #268]
0x2336	0x4620    MOV	R0, R4
0x2338	0xF7FFFDA2  BL	_USART2_Send_Text+0
;uart.c, 301 :: 		my_Delay_ms(_TIMER_UART);
0x233C	0xF64030B8  MOVW	R0, #3000
0x2340	0xF7FEFD22  BL	_my_Delay_ms+0
;uart.c, 302 :: 		if(checkReceiveTxt()==0) return 0;
0x2344	0xF7FEFF12  BL	_checkReceiveTxt+0
0x2348	0xB908    CBNZ	R0, L_sendData69
0x234A	0x2000    MOVS	R0, #0
0x234C	0xE069    B	L_end_sendData
L_sendData69:
;uart.c, 304 :: 		USART2_Send_Text("AT+SAPBR=1,1\r\n");
0x234E	0x4C3E    LDR	R4, [PC, #248]
0x2350	0x4620    MOV	R0, R4
0x2352	0xF7FFFD95  BL	_USART2_Send_Text+0
;uart.c, 305 :: 		my_Delay_ms(3*_TIMER_UART);
0x2356	0xF2423028  MOVW	R0, #9000
0x235A	0xF7FEFD15  BL	_my_Delay_ms+0
;uart.c, 306 :: 		if(checkReceiveTxt()==0) return 0;
0x235E	0xF7FEFF05  BL	_checkReceiveTxt+0
0x2362	0xB908    CBNZ	R0, L_sendData70
0x2364	0x2000    MOVS	R0, #0
0x2366	0xE05C    B	L_end_sendData
L_sendData70:
;uart.c, 308 :: 		USART2_Send_Text("AT+HTTPTERM\r\n");
0x2368	0x4C38    LDR	R4, [PC, #224]
0x236A	0x4620    MOV	R0, R4
0x236C	0xF7FFFD88  BL	_USART2_Send_Text+0
;uart.c, 309 :: 		my_Delay_ms(_TIMER_UART);
0x2370	0xF64030B8  MOVW	R0, #3000
0x2374	0xF7FEFD08  BL	_my_Delay_ms+0
;uart.c, 310 :: 		getReceiveTxt();
0x2378	0xF7FFFD70  BL	_getReceiveTxt+0
;uart.c, 312 :: 		USART2_Send_Text("AT+HTTPINIT\r\n");
0x237C	0x4C34    LDR	R4, [PC, #208]
0x237E	0x4620    MOV	R0, R4
0x2380	0xF7FFFD7E  BL	_USART2_Send_Text+0
;uart.c, 313 :: 		my_Delay_ms(_TIMER_UART);
0x2384	0xF64030B8  MOVW	R0, #3000
0x2388	0xF7FEFCFE  BL	_my_Delay_ms+0
;uart.c, 314 :: 		if(checkReceiveTxt()==0) return 0;
0x238C	0xF7FEFEEE  BL	_checkReceiveTxt+0
0x2390	0xB908    CBNZ	R0, L_sendData71
0x2392	0x2000    MOVS	R0, #0
0x2394	0xE045    B	L_end_sendData
L_sendData71:
;uart.c, 316 :: 		USART2_Send_Text("AT+HTTPPARA=\"CID\",1\r\n");
0x2396	0x4C2F    LDR	R4, [PC, #188]
0x2398	0x4620    MOV	R0, R4
0x239A	0xF7FFFD71  BL	_USART2_Send_Text+0
;uart.c, 317 :: 		my_Delay_ms(_TIMER_UART);
0x239E	0xF64030B8  MOVW	R0, #3000
0x23A2	0xF7FEFCF1  BL	_my_Delay_ms+0
;uart.c, 318 :: 		if(checkReceiveTxt()==0) return 0;
0x23A6	0xF7FEFEE1  BL	_checkReceiveTxt+0
0x23AA	0xB908    CBNZ	R0, L_sendData72
0x23AC	0x2000    MOVS	R0, #0
0x23AE	0xE038    B	L_end_sendData
L_sendData72:
;uart.c, 320 :: 		USART2_Send_Text(url);
0x23B0	0xAC0C    ADD	R4, SP, #48
0x23B2	0x4620    MOV	R0, R4
0x23B4	0xF7FFFD64  BL	_USART2_Send_Text+0
;uart.c, 321 :: 		my_Delay_ms(_TIMER_UART);
0x23B8	0xF64030B8  MOVW	R0, #3000
0x23BC	0xF7FEFCE4  BL	_my_Delay_ms+0
;uart.c, 322 :: 		if(checkReceiveTxt()==0) return 0;
0x23C0	0xF7FEFED4  BL	_checkReceiveTxt+0
0x23C4	0xB908    CBNZ	R0, L_sendData73
0x23C6	0x2000    MOVS	R0, #0
0x23C8	0xE02B    B	L_end_sendData
L_sendData73:
;uart.c, 324 :: 		USART2_Send_Text("AT+HTTPACTION=1\r\n");
0x23CA	0x4C23    LDR	R4, [PC, #140]
0x23CC	0x4620    MOV	R0, R4
0x23CE	0xF7FFFD57  BL	_USART2_Send_Text+0
;uart.c, 325 :: 		my_Delay_ms(_TIMER_UART);
0x23D2	0xF64030B8  MOVW	R0, #3000
0x23D6	0xF7FEFCD7  BL	_my_Delay_ms+0
;uart.c, 326 :: 		if(checkReceiveTxt()==0) return 0;
0x23DA	0xF7FEFEC7  BL	_checkReceiveTxt+0
0x23DE	0xB908    CBNZ	R0, L_sendData74
0x23E0	0x2000    MOVS	R0, #0
0x23E2	0xE01E    B	L_end_sendData
L_sendData74:
;uart.c, 328 :: 		USART2_Send_Text("AT+CIPSHUT\r\n");
0x23E4	0x4C1D    LDR	R4, [PC, #116]
0x23E6	0x4620    MOV	R0, R4
0x23E8	0xF7FFFD4A  BL	_USART2_Send_Text+0
;uart.c, 329 :: 		my_Delay_ms(_TIMER_UART);
0x23EC	0xF64030B8  MOVW	R0, #3000
0x23F0	0xF7FEFCCA  BL	_my_Delay_ms+0
;uart.c, 330 :: 		getReceiveTxt();
0x23F4	0xF7FFFD32  BL	_getReceiveTxt+0
;uart.c, 332 :: 		USART2_Send_Text("AT+SAPBR=0,1\r\n");
0x23F8	0x4C19    LDR	R4, [PC, #100]
0x23FA	0x4620    MOV	R0, R4
0x23FC	0xF7FFFD40  BL	_USART2_Send_Text+0
;uart.c, 333 :: 		my_Delay_ms(_TIMER_UART);
0x2400	0xF64030B8  MOVW	R0, #3000
0x2404	0xF7FEFCC0  BL	_my_Delay_ms+0
;uart.c, 334 :: 		getReceiveTxt();
0x2408	0xF7FFFD28  BL	_getReceiveTxt+0
;uart.c, 336 :: 		USART2_Send_Text("AT+CGATT=0\r\n");
0x240C	0x4C15    LDR	R4, [PC, #84]
0x240E	0x4620    MOV	R0, R4
0x2410	0xF7FFFD36  BL	_USART2_Send_Text+0
;uart.c, 337 :: 		my_Delay_ms(3*_TIMER_UART);
0x2414	0xF2423028  MOVW	R0, #9000
0x2418	0xF7FEFCB6  BL	_my_Delay_ms+0
;uart.c, 338 :: 		getReceiveTxt();
0x241C	0xF7FFFD1E  BL	_getReceiveTxt+0
;uart.c, 340 :: 		return 1;
0x2420	0x2001    MOVS	R0, #1
;uart.c, 341 :: 		}
L_end_sendData:
0x2422	0xF8DDE000  LDR	LR, [SP, #0]
0x2426	0xB032    ADD	SP, SP, #200
0x2428	0x4770    BX	LR
0x242A	0xBF00    NOP
0x242C	0x31D90000  	?ICSsendData_url_L0+0
0x2430	0x00402000  	?lstr5_uart+0
0x2434	0x004B2000  	?lstr6_uart+0
0x2438	0x00582000  	?lstr7_uart+0
0x243C	0x00652000  	?lstr8_uart+0
0x2440	0x00852000  	?lstr9_uart+0
0x2444	0x00A52000  	?lstr10_uart+0
0x2448	0x00C12000  	?lstr11_uart+0
0x244C	0x00D02000  	?lstr12_uart+0
0x2450	0x00DE2000  	?lstr13_uart+0
0x2454	0x00EC2000  	?lstr14_uart+0
0x2458	0x01022000  	?lstr15_uart+0
0x245C	0x01142000  	?lstr16_uart+0
0x2460	0x01212000  	?lstr17_uart+0
0x2464	0x01302000  	?lstr18_uart+0
; end of _sendData
_strlen:
;__Lib_CString.c, 143 :: 		
; s start address is: 0 (R0)
0x11CC	0xB081    SUB	SP, SP, #4
0x11CE	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__Lib_CString.c, 146 :: 		
; cp start address is: 0 (R0)
0x11D0	0x4608    MOV	R0, R1
; s end address is: 4 (R1)
; cp end address is: 0 (R0)
0x11D2	0x460B    MOV	R3, R1
;__Lib_CString.c, 147 :: 		
L_strlen36:
; cp start address is: 0 (R0)
; s start address is: 12 (R3)
0x11D4	0x4602    MOV	R2, R0
0x11D6	0x1C40    ADDS	R0, R0, #1
0x11D8	0x7811    LDRB	R1, [R2, #0]
0x11DA	0xB101    CBZ	R1, L_strlen37
;__Lib_CString.c, 148 :: 		
0x11DC	0xE7FA    B	L_strlen36
L_strlen37:
;__Lib_CString.c, 149 :: 		
0x11DE	0x1AC1    SUB	R1, R0, R3
; s end address is: 12 (R3)
; cp end address is: 0 (R0)
0x11E0	0x1E49    SUBS	R1, R1, #1
0x11E2	0xB208    SXTH	R0, R1
;__Lib_CString.c, 150 :: 		
L_end_strlen:
0x11E4	0xB001    ADD	SP, SP, #4
0x11E6	0x4770    BX	LR
; end of _strlen
_checkReceiveTxt:
;uart.c, 224 :: 		uint8_t checkReceiveTxt()
0x116C	0xB082    SUB	SP, SP, #8
0x116E	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 226 :: 		uint8_t ok=0;
0x1172	0x2000    MOVS	R0, #0
0x1174	0xF88D0004  STRB	R0, [SP, #4]
;uart.c, 228 :: 		USART2_Receive();
0x1178	0xF7FFFDB0  BL	_USART2_Receive+0
;uart.c, 229 :: 		while(receivedFlag==1)
L_checkReceiveTxt40:
0x117C	0x4811    LDR	R0, [PC, #68]
0x117E	0x7800    LDRB	R0, [R0, #0]
0x1180	0x2801    CMP	R0, #1
0x1182	0xD118    BNE	L_checkReceiveTxt41
;uart.c, 231 :: 		for(current=1; receivedTxt[current]!=0; current++)
; current start address is: 8 (R2)
0x1184	0x2201    MOVS	R2, #1
; current end address is: 8 (R2)
L_checkReceiveTxt42:
; current start address is: 8 (R2)
0x1186	0x4810    LDR	R0, [PC, #64]
0x1188	0x1880    ADDS	R0, R0, R2
0x118A	0x7800    LDRB	R0, [R0, #0]
0x118C	0xB180    CBZ	R0, L_checkReceiveTxt43
;uart.c, 232 :: 		if((receivedTxt[current-1]=='O')&& (receivedTxt[current]=='K'))
0x118E	0x1E51    SUBS	R1, R2, #1
0x1190	0x480D    LDR	R0, [PC, #52]
0x1192	0x1840    ADDS	R0, R0, R1
0x1194	0x7800    LDRB	R0, [R0, #0]
0x1196	0x284F    CMP	R0, #79
0x1198	0xD107    BNE	L__checkReceiveTxt98
0x119A	0x480B    LDR	R0, [PC, #44]
0x119C	0x1880    ADDS	R0, R0, R2
0x119E	0x7800    LDRB	R0, [R0, #0]
0x11A0	0x284B    CMP	R0, #75
0x11A2	0xD102    BNE	L__checkReceiveTxt97
L__checkReceiveTxt96:
;uart.c, 233 :: 		ok=1;
0x11A4	0x2001    MOVS	R0, #1
0x11A6	0xF88D0004  STRB	R0, [SP, #4]
;uart.c, 232 :: 		if((receivedTxt[current-1]=='O')&& (receivedTxt[current]=='K'))
L__checkReceiveTxt98:
L__checkReceiveTxt97:
;uart.c, 231 :: 		for(current=1; receivedTxt[current]!=0; current++)
0x11AA	0x1C50    ADDS	R0, R2, #1
; current end address is: 8 (R2)
; current start address is: 0 (R0)
;uart.c, 233 :: 		ok=1;
0x11AC	0x4602    MOV	R2, R0
; current end address is: 0 (R0)
0x11AE	0xE7EA    B	L_checkReceiveTxt42
L_checkReceiveTxt43:
;uart.c, 234 :: 		USART2_Receive();
0x11B0	0xF7FFFD94  BL	_USART2_Receive+0
;uart.c, 235 :: 		}
0x11B4	0xE7E2    B	L_checkReceiveTxt40
L_checkReceiveTxt41:
;uart.c, 236 :: 		return ok;
0x11B6	0xF89D0004  LDRB	R0, [SP, #4]
;uart.c, 237 :: 		}
L_end_checkReceiveTxt:
0x11BA	0xF8DDE000  LDR	LR, [SP, #0]
0x11BE	0xB002    ADD	SP, SP, #8
0x11C0	0x4770    BX	LR
0x11C2	0xBF00    NOP
0x11C4	0x00212000  	_receivedFlag+0
0x11C8	0x09B22000  	_receivedTxt+0
; end of _checkReceiveTxt
_getReceiveTxt:
;uart.c, 217 :: 		uint8_t getReceiveTxt()
0x1E5C	0xB081    SUB	SP, SP, #4
0x1E5E	0xF8CDE000  STR	LR, [SP, #0]
;uart.c, 219 :: 		USART2_Receive();
0x1E62	0xF7FEFF3B  BL	_USART2_Receive+0
;uart.c, 220 :: 		while(receivedFlag==1)
L_getReceiveTxt38:
0x1E66	0x4805    LDR	R0, [PC, #20]
0x1E68	0x7800    LDRB	R0, [R0, #0]
0x1E6A	0x2801    CMP	R0, #1
0x1E6C	0xD102    BNE	L_getReceiveTxt39
;uart.c, 221 :: 		USART2_Receive();
0x1E6E	0xF7FEFF35  BL	_USART2_Receive+0
0x1E72	0xE7F8    B	L_getReceiveTxt38
L_getReceiveTxt39:
;uart.c, 222 :: 		}
L_end_getReceiveTxt:
0x1E74	0xF8DDE000  LDR	LR, [SP, #0]
0x1E78	0xB001    ADD	SP, SP, #4
0x1E7A	0x4770    BX	LR
0x1E7C	0x00212000  	_receivedFlag+0
; end of _getReceiveTxt
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x2B04	0xB082    SUB	SP, SP, #8
0x2B06	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x2B0A	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x2B0C	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x2B0E	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2B10	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2B12	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x2B14	0x2803    CMP	R0, #3
0x2B16	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x2B1A	0x4893    LDR	R0, [PC, #588]
0x2B1C	0x4281    CMP	R1, R0
0x2B1E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x2B20	0x4892    LDR	R0, [PC, #584]
0x2B22	0x6800    LDR	R0, [R0, #0]
0x2B24	0xF0400105  ORR	R1, R0, #5
0x2B28	0x4890    LDR	R0, [PC, #576]
0x2B2A	0x6001    STR	R1, [R0, #0]
0x2B2C	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2B2E	0x4890    LDR	R0, [PC, #576]
0x2B30	0x4281    CMP	R1, R0
0x2B32	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x2B34	0x488D    LDR	R0, [PC, #564]
0x2B36	0x6800    LDR	R0, [R0, #0]
0x2B38	0xF0400104  ORR	R1, R0, #4
0x2B3C	0x488B    LDR	R0, [PC, #556]
0x2B3E	0x6001    STR	R1, [R0, #0]
0x2B40	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2B42	0x488C    LDR	R0, [PC, #560]
0x2B44	0x4281    CMP	R1, R0
0x2B46	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x2B48	0x4888    LDR	R0, [PC, #544]
0x2B4A	0x6800    LDR	R0, [R0, #0]
0x2B4C	0xF0400103  ORR	R1, R0, #3
0x2B50	0x4886    LDR	R0, [PC, #536]
0x2B52	0x6001    STR	R1, [R0, #0]
0x2B54	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2B56	0xF64E2060  MOVW	R0, #60000
0x2B5A	0x4281    CMP	R1, R0
0x2B5C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x2B5E	0x4883    LDR	R0, [PC, #524]
0x2B60	0x6800    LDR	R0, [R0, #0]
0x2B62	0xF0400102  ORR	R1, R0, #2
0x2B66	0x4881    LDR	R0, [PC, #516]
0x2B68	0x6001    STR	R1, [R0, #0]
0x2B6A	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2B6C	0xF2475030  MOVW	R0, #30000
0x2B70	0x4281    CMP	R1, R0
0x2B72	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x2B74	0x487D    LDR	R0, [PC, #500]
0x2B76	0x6800    LDR	R0, [R0, #0]
0x2B78	0xF0400101  ORR	R1, R0, #1
0x2B7C	0x487B    LDR	R0, [PC, #492]
0x2B7E	0x6001    STR	R1, [R0, #0]
0x2B80	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x2B82	0x487A    LDR	R0, [PC, #488]
0x2B84	0x6801    LDR	R1, [R0, #0]
0x2B86	0xF06F0007  MVN	R0, #7
0x2B8A	0x4001    ANDS	R1, R0
0x2B8C	0x4877    LDR	R0, [PC, #476]
0x2B8E	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x2B90	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2B92	0x2802    CMP	R0, #2
0x2B94	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x2B98	0x4877    LDR	R0, [PC, #476]
0x2B9A	0x4281    CMP	R1, R0
0x2B9C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x2B9E	0x4873    LDR	R0, [PC, #460]
0x2BA0	0x6800    LDR	R0, [R0, #0]
0x2BA2	0xF0400106  ORR	R1, R0, #6
0x2BA6	0x4871    LDR	R0, [PC, #452]
0x2BA8	0x6001    STR	R1, [R0, #0]
0x2BAA	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2BAC	0x4870    LDR	R0, [PC, #448]
0x2BAE	0x4281    CMP	R1, R0
0x2BB0	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x2BB2	0x486E    LDR	R0, [PC, #440]
0x2BB4	0x6800    LDR	R0, [R0, #0]
0x2BB6	0xF0400105  ORR	R1, R0, #5
0x2BBA	0x486C    LDR	R0, [PC, #432]
0x2BBC	0x6001    STR	R1, [R0, #0]
0x2BBE	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2BC0	0x486E    LDR	R0, [PC, #440]
0x2BC2	0x4281    CMP	R1, R0
0x2BC4	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x2BC6	0x4869    LDR	R0, [PC, #420]
0x2BC8	0x6800    LDR	R0, [R0, #0]
0x2BCA	0xF0400104  ORR	R1, R0, #4
0x2BCE	0x4867    LDR	R0, [PC, #412]
0x2BD0	0x6001    STR	R1, [R0, #0]
0x2BD2	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2BD4	0x486A    LDR	R0, [PC, #424]
0x2BD6	0x4281    CMP	R1, R0
0x2BD8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x2BDA	0x4864    LDR	R0, [PC, #400]
0x2BDC	0x6800    LDR	R0, [R0, #0]
0x2BDE	0xF0400103  ORR	R1, R0, #3
0x2BE2	0x4862    LDR	R0, [PC, #392]
0x2BE4	0x6001    STR	R1, [R0, #0]
0x2BE6	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2BE8	0xF64B3080  MOVW	R0, #48000
0x2BEC	0x4281    CMP	R1, R0
0x2BEE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x2BF0	0x485E    LDR	R0, [PC, #376]
0x2BF2	0x6800    LDR	R0, [R0, #0]
0x2BF4	0xF0400102  ORR	R1, R0, #2
0x2BF8	0x485C    LDR	R0, [PC, #368]
0x2BFA	0x6001    STR	R1, [R0, #0]
0x2BFC	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2BFE	0xF64550C0  MOVW	R0, #24000
0x2C02	0x4281    CMP	R1, R0
0x2C04	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x2C06	0x4859    LDR	R0, [PC, #356]
0x2C08	0x6800    LDR	R0, [R0, #0]
0x2C0A	0xF0400101  ORR	R1, R0, #1
0x2C0E	0x4857    LDR	R0, [PC, #348]
0x2C10	0x6001    STR	R1, [R0, #0]
0x2C12	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x2C14	0x4855    LDR	R0, [PC, #340]
0x2C16	0x6801    LDR	R1, [R0, #0]
0x2C18	0xF06F0007  MVN	R0, #7
0x2C1C	0x4001    ANDS	R1, R0
0x2C1E	0x4853    LDR	R0, [PC, #332]
0x2C20	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x2C22	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2C24	0x2801    CMP	R0, #1
0x2C26	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x2C2A	0x4851    LDR	R0, [PC, #324]
0x2C2C	0x4281    CMP	R1, R0
0x2C2E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x2C30	0x484E    LDR	R0, [PC, #312]
0x2C32	0x6800    LDR	R0, [R0, #0]
0x2C34	0xF0400107  ORR	R1, R0, #7
0x2C38	0x484C    LDR	R0, [PC, #304]
0x2C3A	0x6001    STR	R1, [R0, #0]
0x2C3C	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2C3E	0x4851    LDR	R0, [PC, #324]
0x2C40	0x4281    CMP	R1, R0
0x2C42	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x2C44	0x4849    LDR	R0, [PC, #292]
0x2C46	0x6800    LDR	R0, [R0, #0]
0x2C48	0xF0400106  ORR	R1, R0, #6
0x2C4C	0x4847    LDR	R0, [PC, #284]
0x2C4E	0x6001    STR	R1, [R0, #0]
0x2C50	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2C52	0x4848    LDR	R0, [PC, #288]
0x2C54	0x4281    CMP	R1, R0
0x2C56	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x2C58	0x4844    LDR	R0, [PC, #272]
0x2C5A	0x6800    LDR	R0, [R0, #0]
0x2C5C	0xF0400105  ORR	R1, R0, #5
0x2C60	0x4842    LDR	R0, [PC, #264]
0x2C62	0x6001    STR	R1, [R0, #0]
0x2C64	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2C66	0x4846    LDR	R0, [PC, #280]
0x2C68	0x4281    CMP	R1, R0
0x2C6A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x2C6C	0x483F    LDR	R0, [PC, #252]
0x2C6E	0x6800    LDR	R0, [R0, #0]
0x2C70	0xF0400104  ORR	R1, R0, #4
0x2C74	0x483D    LDR	R0, [PC, #244]
0x2C76	0x6001    STR	R1, [R0, #0]
0x2C78	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2C7A	0xF24D20F0  MOVW	R0, #54000
0x2C7E	0x4281    CMP	R1, R0
0x2C80	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x2C82	0x483A    LDR	R0, [PC, #232]
0x2C84	0x6800    LDR	R0, [R0, #0]
0x2C86	0xF0400103  ORR	R1, R0, #3
0x2C8A	0x4838    LDR	R0, [PC, #224]
0x2C8C	0x6001    STR	R1, [R0, #0]
0x2C8E	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2C90	0xF64840A0  MOVW	R0, #36000
0x2C94	0x4281    CMP	R1, R0
0x2C96	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x2C98	0x4834    LDR	R0, [PC, #208]
0x2C9A	0x6800    LDR	R0, [R0, #0]
0x2C9C	0xF0400102  ORR	R1, R0, #2
0x2CA0	0x4832    LDR	R0, [PC, #200]
0x2CA2	0x6001    STR	R1, [R0, #0]
0x2CA4	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2CA6	0xF2446050  MOVW	R0, #18000
0x2CAA	0x4281    CMP	R1, R0
0x2CAC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x2CAE	0x482F    LDR	R0, [PC, #188]
0x2CB0	0x6800    LDR	R0, [R0, #0]
0x2CB2	0xF0400101  ORR	R1, R0, #1
0x2CB6	0x482D    LDR	R0, [PC, #180]
0x2CB8	0x6001    STR	R1, [R0, #0]
0x2CBA	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x2CBC	0x482B    LDR	R0, [PC, #172]
0x2CBE	0x6801    LDR	R1, [R0, #0]
0x2CC0	0xF06F0007  MVN	R0, #7
0x2CC4	0x4001    ANDS	R1, R0
0x2CC6	0x4829    LDR	R0, [PC, #164]
0x2CC8	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x2CCA	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2CCC	0x2800    CMP	R0, #0
0x2CCE	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x2CD2	0x482D    LDR	R0, [PC, #180]
0x2CD4	0x4281    CMP	R1, R0
0x2CD6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x2CD8	0x4824    LDR	R0, [PC, #144]
0x2CDA	0x6800    LDR	R0, [R0, #0]
0x2CDC	0xF0400107  ORR	R1, R0, #7
0x2CE0	0x4822    LDR	R0, [PC, #136]
0x2CE2	0x6001    STR	R1, [R0, #0]
0x2CE4	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2CE6	0x4825    LDR	R0, [PC, #148]
0x2CE8	0x4281    CMP	R1, R0
0x2CEA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x2CEC	0x481F    LDR	R0, [PC, #124]
0x2CEE	0x6800    LDR	R0, [R0, #0]
0x2CF0	0xF0400106  ORR	R1, R0, #6
0x2CF4	0x481D    LDR	R0, [PC, #116]
0x2CF6	0x6001    STR	R1, [R0, #0]
0x2CF8	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2CFA	0x4824    LDR	R0, [PC, #144]
0x2CFC	0x4281    CMP	R1, R0
0x2CFE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x2D00	0x481A    LDR	R0, [PC, #104]
0x2D02	0x6800    LDR	R0, [R0, #0]
0x2D04	0xF0400105  ORR	R1, R0, #5
0x2D08	0x4818    LDR	R0, [PC, #96]
0x2D0A	0x6001    STR	R1, [R0, #0]
0x2D0C	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2D0E	0xF5B14F7A  CMP	R1, #64000
0x2D12	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x2D14	0x4815    LDR	R0, [PC, #84]
0x2D16	0x6800    LDR	R0, [R0, #0]
0x2D18	0xF0400104  ORR	R1, R0, #4
0x2D1C	0x4813    LDR	R0, [PC, #76]
0x2D1E	0x6001    STR	R1, [R0, #0]
0x2D20	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2D22	0xF64B3080  MOVW	R0, #48000
0x2D26	0x4281    CMP	R1, R0
0x2D28	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x2D2A	0x4810    LDR	R0, [PC, #64]
0x2D2C	0x6800    LDR	R0, [R0, #0]
0x2D2E	0xF0400103  ORR	R1, R0, #3
0x2D32	0x480E    LDR	R0, [PC, #56]
0x2D34	0x6001    STR	R1, [R0, #0]
0x2D36	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2D38	0xF5B14FFA  CMP	R1, #32000
0x2D3C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x2D3E	0x480B    LDR	R0, [PC, #44]
0x2D40	0x6800    LDR	R0, [R0, #0]
0x2D42	0xF0400102  ORR	R1, R0, #2
0x2D46	0x4809    LDR	R0, [PC, #36]
0x2D48	0x6001    STR	R1, [R0, #0]
0x2D4A	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2D4C	0xF5B15F7A  CMP	R1, #16000
0x2D50	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x2D52	0xE01D    B	#58
0x2D54	0x00810100  	#16777345
0x2D58	0x1E080500  	#83893768
0x2D5C	0x94020000  	#37890
0x2D60	0x00030000  	#3
0x2D64	0xD4C00001  	#120000
0x2D68	0x49F00002  	#150000
0x2D6C	0x3C004002  	FLASH_ACR+0
0x2D70	0xD4C00001  	#120000
0x2D74	0x5F900001  	#90000
0x2D78	0x32800002  	#144000
0x2D7C	0x77000001  	#96000
0x2D80	0x19400001  	#72000
0x2D84	0xA5E00001  	#108000
0x2D88	0xB5800001  	#112000
0x2D8C	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x2D90	0x482D    LDR	R0, [PC, #180]
0x2D92	0x6800    LDR	R0, [R0, #0]
0x2D94	0xF0400101  ORR	R1, R0, #1
0x2D98	0x482B    LDR	R0, [PC, #172]
0x2D9A	0x6001    STR	R1, [R0, #0]
0x2D9C	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x2D9E	0x482A    LDR	R0, [PC, #168]
0x2DA0	0x6801    LDR	R1, [R0, #0]
0x2DA2	0xF06F0007  MVN	R0, #7
0x2DA6	0x4001    ANDS	R1, R0
0x2DA8	0x4827    LDR	R0, [PC, #156]
0x2DAA	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x2DAC	0x2101    MOVS	R1, #1
0x2DAE	0xB249    SXTB	R1, R1
0x2DB0	0x4826    LDR	R0, [PC, #152]
0x2DB2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x2DB4	0x4826    LDR	R0, [PC, #152]
0x2DB6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x2DB8	0xF7FFFB56  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x2DBC	0x4825    LDR	R0, [PC, #148]
0x2DBE	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x2DC0	0x4825    LDR	R0, [PC, #148]
0x2DC2	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x2DC4	0x4825    LDR	R0, [PC, #148]
0x2DC6	0xEA020100  AND	R1, R2, R0, LSL #0
0x2DCA	0x4825    LDR	R0, [PC, #148]
0x2DCC	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x2DCE	0xF0020001  AND	R0, R2, #1
0x2DD2	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x2DD4	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2DD6	0x4822    LDR	R0, [PC, #136]
0x2DD8	0x6800    LDR	R0, [R0, #0]
0x2DDA	0xF0000002  AND	R0, R0, #2
0x2DDE	0x2800    CMP	R0, #0
0x2DE0	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x2DE2	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x2DE4	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x2DE6	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2DE8	0xF4023080  AND	R0, R2, #65536
0x2DEC	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x2DEE	0x481C    LDR	R0, [PC, #112]
0x2DF0	0x6800    LDR	R0, [R0, #0]
0x2DF2	0xF4003000  AND	R0, R0, #131072
0x2DF6	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x2DF8	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x2DFA	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x2DFC	0x460A    MOV	R2, R1
0x2DFE	0x9901    LDR	R1, [SP, #4]
0x2E00	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x2E02	0x9101    STR	R1, [SP, #4]
0x2E04	0x4611    MOV	R1, R2
0x2E06	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x2E08	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x2E0C	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x2E0E	0x4814    LDR	R0, [PC, #80]
0x2E10	0x6800    LDR	R0, [R0, #0]
0x2E12	0xF0407180  ORR	R1, R0, #16777216
0x2E16	0x4812    LDR	R0, [PC, #72]
0x2E18	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x2E1A	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x2E1C	0x4810    LDR	R0, [PC, #64]
0x2E1E	0x6800    LDR	R0, [R0, #0]
0x2E20	0xF0007000  AND	R0, R0, #33554432
0x2E24	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x2E26	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x2E28	0x460A    MOV	R2, R1
0x2E2A	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x2E2C	0x480A    LDR	R0, [PC, #40]
0x2E2E	0x6800    LDR	R0, [R0, #0]
0x2E30	0xF000010C  AND	R1, R0, #12
0x2E34	0x0090    LSLS	R0, R2, #2
0x2E36	0xF000000C  AND	R0, R0, #12
0x2E3A	0x4281    CMP	R1, R0
0x2E3C	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x2E3E	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x2E40	0xF8DDE000  LDR	LR, [SP, #0]
0x2E44	0xB002    ADD	SP, SP, #8
0x2E46	0x4770    BX	LR
0x2E48	0x3C004002  	FLASH_ACR+0
0x2E4C	0x80204247  	FLASH_ACR+0
0x2E50	0x80244247  	FLASH_ACR+0
0x2E54	0x38044002  	RCC_PLLCFGR+0
0x2E58	0x38084002  	RCC_CFGR+0
0x2E5C	0xFFFF000F  	#1048575
0x2E60	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x2468	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x246A	0x480D    LDR	R0, [PC, #52]
0x246C	0x6800    LDR	R0, [R0, #0]
0x246E	0xF0400101  ORR	R1, R0, #1
0x2472	0x480B    LDR	R0, [PC, #44]
0x2474	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x2476	0x2100    MOVS	R1, #0
0x2478	0x480A    LDR	R0, [PC, #40]
0x247A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x247C	0x4808    LDR	R0, [PC, #32]
0x247E	0x6801    LDR	R1, [R0, #0]
0x2480	0x4809    LDR	R0, [PC, #36]
0x2482	0x4001    ANDS	R1, R0
0x2484	0x4806    LDR	R0, [PC, #24]
0x2486	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x2488	0x4908    LDR	R1, [PC, #32]
0x248A	0x4809    LDR	R0, [PC, #36]
0x248C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x248E	0x4804    LDR	R0, [PC, #16]
0x2490	0x6801    LDR	R1, [R0, #0]
0x2492	0xF46F2080  MVN	R0, #262144
0x2496	0x4001    ANDS	R1, R0
0x2498	0x4801    LDR	R0, [PC, #4]
0x249A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x249C	0xB001    ADD	SP, SP, #4
0x249E	0x4770    BX	LR
0x24A0	0x38004002  	RCC_CR+0
0x24A4	0x38084002  	RCC_CFGR+0
0x24A8	0xFFFFFEF6  	#-17367041
0x24AC	0x30102400  	#603992080
0x24B0	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x3038	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x303A	0x4904    LDR	R1, [PC, #16]
0x303C	0x4804    LDR	R0, [PC, #16]
0x303E	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x3040	0x4904    LDR	R1, [PC, #16]
0x3042	0x4805    LDR	R0, [PC, #20]
0x3044	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x3046	0xB001    ADD	SP, SP, #4
0x3048	0x4770    BX	LR
0x304A	0xBF00    NOP
0x304C	0xD4C00001  	#120000
0x3050	0x0AE02000  	___System_CLOCK_IN_KHZ+0
0x3054	0x00030000  	#3
0x3058	0x0AF02000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x3030	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x3032	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x3034	0xB001    ADD	SP, SP, #4
0x3036	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x2AD8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x2ADA	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x2ADE	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x2AE2	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x2AE4	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x2AE8	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x2AEA	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x2AEC	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x2AEE	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x2AF0	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x2AF2	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x2AF6	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x2AFA	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x2AFE	0xB001    ADD	SP, SP, #4
0x2B00	0x4770    BX	LR
; end of ___EnableFPU
0x32E8	0xB500    PUSH	(R14)
0x32EA	0xF8DFB014  LDR	R11, [PC, #20]
0x32EE	0xF8DFA014  LDR	R10, [PC, #20]
0x32F2	0xF8DFC014  LDR	R12, [PC, #20]
0x32F6	0xF7FFFB25  BL	10564
0x32FA	0xBD00    POP	(R15)
0x32FC	0x4770    BX	LR
0x32FE	0xBF00    NOP
0x3300	0x00002000  	#536870912
0x3304	0x017D2000  	#536871293
0x3308	0x305C0000  	#12380
0x3368	0xB500    PUSH	(R14)
0x336A	0xF8DFB010  LDR	R11, [PC, #16]
0x336E	0xF8DFA010  LDR	R10, [PC, #16]
0x3372	0xF7FFFAC9  BL	10504
0x3376	0xBD00    POP	(R15)
0x3378	0x4770    BX	LR
0x337A	0xBF00    NOP
0x337C	0x00002000  	#536870912
0x3380	0x0AF42000  	#536873716
_Timer2_interrupt:
;timer.c, 19 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 {
;timer.c, 20 :: 		TIM2_SR.UIF = 0;
0x2974	0x2100    MOVS	R1, #0
0x2976	0xB249    SXTB	R1, R1
0x2978	0x4806    LDR	R0, [PC, #24]
0x297A	0x6001    STR	R1, [R0, #0]
;timer.c, 21 :: 		if(tick_us<_MAX_TIME_CALC)
0x297C	0x4806    LDR	R0, [PC, #24]
0x297E	0x6801    LDR	R1, [R0, #0]
0x2980	0x4806    LDR	R0, [PC, #24]
0x2982	0x4281    CMP	R1, R0
0x2984	0xD204    BCS	L_Timer2_interrupt0
;timer.c, 22 :: 		tick_us++;
0x2986	0x4804    LDR	R0, [PC, #16]
0x2988	0x6800    LDR	R0, [R0, #0]
0x298A	0x1C41    ADDS	R1, R0, #1
0x298C	0x4802    LDR	R0, [PC, #8]
0x298E	0x6001    STR	R1, [R0, #0]
L_Timer2_interrupt0:
;timer.c, 23 :: 		}
L_end_Timer2_interrupt:
0x2990	0x4770    BX	LR
0x2992	0xBF00    NOP
0x2994	0x02004200  	TIM2_SR+0
0x2998	0x01D02000  	_tick_us+0
0x299C	0xCA003B9A  	#1000000000
; end of _Timer2_interrupt
_Timer3_interrupt:
;timer.c, 43 :: 		void Timer3_interrupt() iv IVT_INT_TIM3 {
;timer.c, 44 :: 		TIM3_SR.UIF = 0;
0x29A0	0x2100    MOVS	R1, #0
0x29A2	0xB249    SXTB	R1, R1
0x29A4	0x4806    LDR	R0, [PC, #24]
0x29A6	0x6001    STR	R1, [R0, #0]
;timer.c, 45 :: 		if(tick_ms<_MAX_TIME_CALC)
0x29A8	0x4806    LDR	R0, [PC, #24]
0x29AA	0x6801    LDR	R1, [R0, #0]
0x29AC	0x4806    LDR	R0, [PC, #24]
0x29AE	0x4281    CMP	R1, R0
0x29B0	0xD204    BCS	L_Timer3_interrupt3
;timer.c, 46 :: 		tick_ms++;
0x29B2	0x4804    LDR	R0, [PC, #16]
0x29B4	0x6800    LDR	R0, [R0, #0]
0x29B6	0x1C41    ADDS	R1, R0, #1
0x29B8	0x4802    LDR	R0, [PC, #8]
0x29BA	0x6001    STR	R1, [R0, #0]
L_Timer3_interrupt3:
;timer.c, 47 :: 		}
L_end_Timer3_interrupt:
0x29BC	0x4770    BX	LR
0x29BE	0xBF00    NOP
0x29C0	0x82004200  	TIM3_SR+0
0x29C4	0x01CC2000  	_tick_ms+0
0x29C8	0xCA003B9A  	#1000000000
; end of _Timer3_interrupt
_interRTC:
;main.c, 37 :: 		void interRTC() iv IVT_INT_RTC_WKUP ics ICS_AUTO {
;main.c, 38 :: 		PWR_CR.DBP = 1;
0x2A98	0x2201    MOVS	R2, #1
0x2A9A	0xB252    SXTB	R2, R2
0x2A9C	0x4809    LDR	R0, [PC, #36]
0x2A9E	0x6002    STR	R2, [R0, #0]
;main.c, 39 :: 		RTC_ISR.WUTF = 0; // Clear wake-up event flag
0x2AA0	0x2100    MOVS	R1, #0
0x2AA2	0xB249    SXTB	R1, R1
0x2AA4	0x4808    LDR	R0, [PC, #32]
0x2AA6	0x6001    STR	R1, [R0, #0]
;main.c, 40 :: 		PWR_CR.DBP = 0;
0x2AA8	0x4806    LDR	R0, [PC, #24]
0x2AAA	0x6001    STR	R1, [R0, #0]
;main.c, 41 :: 		EXTI_PR.PR22 = 1; // Clear wake-up interrupt flag
0x2AAC	0x4807    LDR	R0, [PC, #28]
0x2AAE	0x6002    STR	R2, [R0, #0]
;main.c, 42 :: 		while (RTC_ISR.RSF!=1); // Wait for RTC APB registers synchronization
L_interRTC0:
0x2AB0	0x4907    LDR	R1, [PC, #28]
0x2AB2	0x6808    LDR	R0, [R1, #0]
0x2AB4	0xB900    CBNZ	R0, L_interRTC1
0x2AB6	0xE7FB    B	L_interRTC0
L_interRTC1:
;main.c, 44 :: 		rtcBool=1;
0x2AB8	0x2101    MOVS	R1, #1
0x2ABA	0xB249    SXTB	R1, R1
0x2ABC	0x4805    LDR	R0, [PC, #20]
0x2ABE	0x7001    STRB	R1, [R0, #0]
;main.c, 45 :: 		}
L_end_interRTC:
0x2AC0	0x4770    BX	LR
0x2AC2	0xBF00    NOP
0x2AC4	0x0020420E  	PWR_CR+0
0x2AC8	0x01A84205  	RTC_ISR+0
0x2ACC	0x82D84227  	EXTI_PR+0
0x2AD0	0x01944205  	RTC_ISR+0
0x2AD4	0x01912000  	_rtcBool+0
; end of _interRTC
_interruptUART:
;uart.c, 37 :: 		void interruptUART() iv IVT_INT_USART2 ics ICS_AUTO
;uart.c, 40 :: 		usartStatusRegister = USART2_SR;
0x29CC	0x4827    LDR	R0, [PC, #156]
; usartStatusRegister start address is: 8 (R2)
0x29CE	0x6802    LDR	R2, [R0, #0]
;uart.c, 42 :: 		if(usartStatusRegister & _USART_SR_RXNE)
0x29D0	0xF0020020  AND	R0, R2, #32
0x29D4	0x2800    CMP	R0, #0
0x29D6	0xD020    BEQ	L_interruptUART0
;uart.c, 44 :: 		receiveUART.flag = 1;
0x29D8	0x2101    MOVS	R1, #1
0x29DA	0x4825    LDR	R0, [PC, #148]
0x29DC	0x7001    STRB	R1, [R0, #0]
;uart.c, 45 :: 		usartDataRegister = USART2_DR;
0x29DE	0x4825    LDR	R0, [PC, #148]
; usartDataRegister start address is: 12 (R3)
0x29E0	0x6803    LDR	R3, [R0, #0]
;uart.c, 46 :: 		receiveUART.buffer[receiveUART.bufferPointerWrite] = usartDataRegister;
0x29E2	0x4825    LDR	R0, [PC, #148]
0x29E4	0x8801    LDRH	R1, [R0, #0]
0x29E6	0x4825    LDR	R0, [PC, #148]
0x29E8	0x1840    ADDS	R0, R0, R1
0x29EA	0x7003    STRB	R3, [R0, #0]
;uart.c, 47 :: 		receiveUART.bufferPointerWrite++;
0x29EC	0x4822    LDR	R0, [PC, #136]
0x29EE	0x8800    LDRH	R0, [R0, #0]
0x29F0	0x1C41    ADDS	R1, R0, #1
0x29F2	0x4821    LDR	R0, [PC, #132]
0x29F4	0x8001    STRH	R1, [R0, #0]
;uart.c, 48 :: 		if(receiveUART.bufferPointerWrite==1000)
0x29F6	0x4820    LDR	R0, [PC, #128]
0x29F8	0x8800    LDRH	R0, [R0, #0]
0x29FA	0xF5B07F7A  CMP	R0, #1000
0x29FE	0xD102    BNE	L_interruptUART1
;uart.c, 49 :: 		receiveUART.bufferPointerWrite=0;
0x2A00	0x2100    MOVS	R1, #0
0x2A02	0x481D    LDR	R0, [PC, #116]
0x2A04	0x8001    STRH	R1, [R0, #0]
L_interruptUART1:
;uart.c, 50 :: 		if(usartDataRegister==0x0A)
0x2A06	0x2B0A    CMP	R3, #10
0x2A08	0xD107    BNE	L_interruptUART2
; usartDataRegister end address is: 12 (R3)
;uart.c, 52 :: 		receiveUART.msgCount++;
0x2A0A	0x481D    LDR	R0, [PC, #116]
0x2A0C	0x8800    LDRH	R0, [R0, #0]
0x2A0E	0x1C41    ADDS	R1, R0, #1
0x2A10	0x481B    LDR	R0, [PC, #108]
0x2A12	0x8001    STRH	R1, [R0, #0]
;uart.c, 53 :: 		receiveUART.flag = 0;
0x2A14	0x2100    MOVS	R1, #0
0x2A16	0x4816    LDR	R0, [PC, #88]
0x2A18	0x7001    STRB	R1, [R0, #0]
;uart.c, 54 :: 		}
L_interruptUART2:
;uart.c, 55 :: 		}
L_interruptUART0:
;uart.c, 57 :: 		if(usartStatusRegister & _USART_SR_TXE)
0x2A1A	0xF0020080  AND	R0, R2, #128
; usartStatusRegister end address is: 8 (R2)
0x2A1E	0x2800    CMP	R0, #0
0x2A20	0xD022    BEQ	L_interruptUART3
;uart.c, 59 :: 		if(transmitUART.bufferPointer < transmitUART.byteCount)
0x2A22	0x4818    LDR	R0, [PC, #96]
0x2A24	0x8801    LDRH	R1, [R0, #0]
0x2A26	0x4818    LDR	R0, [PC, #96]
0x2A28	0x8800    LDRH	R0, [R0, #0]
0x2A2A	0x4288    CMP	R0, R1
0x2A2C	0xD20C    BCS	L_interruptUART4
;uart.c, 60 :: 		USART2_DR = transmitUART.buffer[transmitUART.bufferPointer++];
0x2A2E	0x4816    LDR	R0, [PC, #88]
0x2A30	0x8801    LDRH	R1, [R0, #0]
0x2A32	0x4816    LDR	R0, [PC, #88]
0x2A34	0x1840    ADDS	R0, R0, R1
0x2A36	0x7801    LDRB	R1, [R0, #0]
0x2A38	0x480E    LDR	R0, [PC, #56]
0x2A3A	0x6001    STR	R1, [R0, #0]
0x2A3C	0x4812    LDR	R0, [PC, #72]
0x2A3E	0x8800    LDRH	R0, [R0, #0]
0x2A40	0x1C41    ADDS	R1, R0, #1
0x2A42	0x4811    LDR	R0, [PC, #68]
0x2A44	0x8001    STRH	R1, [R0, #0]
0x2A46	0xE00F    B	L_interruptUART5
L_interruptUART4:
;uart.c, 63 :: 		USART2_CR1 &= ~(_USART_TXEIE);
0x2A48	0x4811    LDR	R0, [PC, #68]
0x2A4A	0x6801    LDR	R1, [R0, #0]
0x2A4C	0xF06F0080  MVN	R0, #128
0x2A50	0x4001    ANDS	R1, R0
0x2A52	0x480F    LDR	R0, [PC, #60]
0x2A54	0x6001    STR	R1, [R0, #0]
;uart.c, 64 :: 		transmitUART.byteCount=0;
0x2A56	0x2100    MOVS	R1, #0
0x2A58	0x480A    LDR	R0, [PC, #40]
0x2A5A	0x8001    STRH	R1, [R0, #0]
;uart.c, 65 :: 		transmitUART.bufferPointer = 0;
0x2A5C	0x2100    MOVS	R1, #0
0x2A5E	0x480A    LDR	R0, [PC, #40]
0x2A60	0x8001    STRH	R1, [R0, #0]
;uart.c, 66 :: 		transmitUART.flag = 0;
0x2A62	0x2100    MOVS	R1, #0
0x2A64	0x480B    LDR	R0, [PC, #44]
0x2A66	0x7001    STRB	R1, [R0, #0]
;uart.c, 67 :: 		}
L_interruptUART5:
;uart.c, 68 :: 		}
L_interruptUART3:
;uart.c, 69 :: 		}
L_end_interruptUART:
0x2A68	0x4770    BX	LR
0x2A6A	0xBF00    NOP
0x2A6C	0x44004000  	USART2_SR+0
0x2A70	0x01D42000  	_receiveUART+0
0x2A74	0x44044000  	USART2_DR+0
0x2A78	0x01D82000  	_receiveUART+4
0x2A7C	0x01DC2000  	_receiveUART+8
0x2A80	0x01D62000  	_receiveUART+2
0x2A84	0x05C62000  	_transmitUART+2
0x2A88	0x05C82000  	_transmitUART+4
0x2A8C	0x05CA2000  	_transmitUART+6
0x2A90	0x440C4000  	USART2_CR1+0
0x2A94	0x05C42000  	_transmitUART+0
; end of _interruptUART
;lcd.c,0 :: ?ICS?lstr1_lcd [6]
0x305C	0x706D6554 ;?ICS?lstr1_lcd+0
0x3060	0x003A ;?ICS?lstr1_lcd+4
; end of ?ICS?lstr1_lcd
;,0 :: _initBlock_1 [16]
; Containing: ?ICS?lstr2_lcd [5]
;             ?ICS?lstr1_main [6]
;             ?ICS?lstr2_main [5]
0x3062	0x3A6D7548 ;_initBlock_1+0 : ?ICS?lstr2_lcd at 0x3062
0x3066	0x636F7000 ;_initBlock_1+4 : ?ICS?lstr1_main at 0x3067
0x306A	0x6B00696E ;_initBlock_1+8 : ?ICS?lstr2_main at 0x306D
0x306E	0x006A6172 ;_initBlock_1+12
; end of _initBlock_1
;main.c,0 :: ?ICS?lstr3_main [6]
0x3072	0x6E636F70 ;?ICS?lstr3_main+0
0x3076	0x0069 ;?ICS?lstr3_main+4
; end of ?ICS?lstr3_main
;,0 :: _initBlock_3 [6]
; Containing: ?ICS?lstr4_main [5]
;             ?ICS_receivedFlag [1]
0x3078	0x6A61726B ;_initBlock_3+0 : ?ICS?lstr4_main at 0x3078
0x307C	0x0000 ;_initBlock_3+4 : ?ICS_receivedFlag at 0x307D
; end of _initBlock_3
;uart.c,0 :: ?ICS?lstr1_uart [16]
0x307E	0x432B5441 ;?ICS?lstr1_uart+0
0x3082	0x3D4C474D ;?ICS?lstr1_uart+4
0x3086	0x4C4C4122 ;?ICS?lstr1_uart+8
0x308A	0x000A0D22 ;?ICS?lstr1_uart+12
; end of ?ICS?lstr1_uart
;uart.c,0 :: ?ICS?lstr2_uart [14]
0x308E	0x432B5441 ;?ICS?lstr2_uart+0
0x3092	0x3D44474D ;?ICS?lstr2_uart+4
0x3096	0x0D342C31 ;?ICS?lstr2_uart+8
0x309A	0x000A ;?ICS?lstr2_uart+12
; end of ?ICS?lstr2_uart
;,0 :: _initBlock_6 [24]
; Containing: ?ICS?lstr5_uart [11]
;             ?ICS?lstr6_uart [13]
0x309C	0x432B5441 ;_initBlock_6+0 : ?ICS?lstr5_uart at 0x309C
0x30A0	0x3F4E4950 ;_initBlock_6+4
0x30A4	0x41000A0D ;_initBlock_6+8 : ?ICS?lstr6_uart at 0x30A7
0x30A8	0x49432B54 ;_initBlock_6+12
0x30AC	0x55485350 ;_initBlock_6+16
0x30B0	0x000A0D54 ;_initBlock_6+20
; end of _initBlock_6
;,0 :: _initBlock_7 [120]
; Containing: ?ICS?lstr7_uart [13]
;             ?ICS?lstr8_uart [32]
;             ?ICS?lstr9_uart [32]
;             ?ICS?lstr10_uart [28]
;             ?ICS?lstr11_uart [15]
0x30B4	0x432B5441 ;_initBlock_7+0 : ?ICS?lstr7_uart at 0x30B4
0x30B8	0x54544147 ;_initBlock_7+4
0x30BC	0x0A0D313D ;_initBlock_7+8
0x30C0	0x2B544100 ;_initBlock_7+12 : ?ICS?lstr8_uart at 0x30C1
0x30C4	0x42504153 ;_initBlock_7+16
0x30C8	0x2C333D52 ;_initBlock_7+20
0x30CC	0x43222C31 ;_initBlock_7+24
0x30D0	0x59544E4F ;_initBlock_7+28
0x30D4	0x2C224550 ;_initBlock_7+32
0x30D8	0x52504722 ;_initBlock_7+36
0x30DC	0x0A0D2253 ;_initBlock_7+40
0x30E0	0x2B544100 ;_initBlock_7+44 : ?ICS?lstr9_uart at 0x30E1
0x30E4	0x42504153 ;_initBlock_7+48
0x30E8	0x2C333D52 ;_initBlock_7+52
0x30EC	0x41222C31 ;_initBlock_7+56
0x30F0	0x2C224E50 ;_initBlock_7+60
0x30F4	0x746E6922 ;_initBlock_7+64
0x30F8	0x656E7265 ;_initBlock_7+68
0x30FC	0x0A0D2274 ;_initBlock_7+72
0x3100	0x2B544100 ;_initBlock_7+76 : ?ICS?lstr10_uart at 0x3101
0x3104	0x42504153 ;_initBlock_7+80
0x3108	0x2C333D52 ;_initBlock_7+84
0x310C	0x50222C31 ;_initBlock_7+88
0x3110	0x2C224457 ;_initBlock_7+92
0x3114	0x72706722 ;_initBlock_7+96
0x3118	0x0A0D2273 ;_initBlock_7+100
0x311C	0x2B544100 ;_initBlock_7+104 : ?ICS?lstr11_uart at 0x311D
0x3120	0x42504153 ;_initBlock_7+108
0x3124	0x2C313D52 ;_initBlock_7+112
0x3128	0x000A0D31 ;_initBlock_7+116
; end of _initBlock_7
;uart.c,0 :: ?ICS?lstr12_uart [14]
0x312C	0x482B5441 ;?ICS?lstr12_uart+0
0x3130	0x54505454 ;?ICS?lstr12_uart+4
0x3134	0x0D4D5245 ;?ICS?lstr12_uart+8
0x3138	0x000A ;?ICS?lstr12_uart+12
; end of ?ICS?lstr12_uart
;uart.c,0 :: ?ICS?lstr13_uart [14]
0x313A	0x482B5441 ;?ICS?lstr13_uart+0
0x313E	0x49505454 ;?ICS?lstr13_uart+4
0x3142	0x0D54494E ;?ICS?lstr13_uart+8
0x3146	0x000A ;?ICS?lstr13_uart+12
; end of ?ICS?lstr13_uart
;uart.c,0 :: ?ICS?lstr14_uart [22]
0x3148	0x482B5441 ;?ICS?lstr14_uart+0
0x314C	0x50505454 ;?ICS?lstr14_uart+4
0x3150	0x3D415241 ;?ICS?lstr14_uart+8
0x3154	0x44494322 ;?ICS?lstr14_uart+12
0x3158	0x0D312C22 ;?ICS?lstr14_uart+16
0x315C	0x000A ;?ICS?lstr14_uart+20
; end of ?ICS?lstr14_uart
;uart.c,0 :: ?ICS?lstr15_uart [18]
0x315E	0x482B5441 ;?ICS?lstr15_uart+0
0x3162	0x41505454 ;?ICS?lstr15_uart+4
0x3166	0x4F495443 ;?ICS?lstr15_uart+8
0x316A	0x0D313D4E ;?ICS?lstr15_uart+12
0x316E	0x000A ;?ICS?lstr15_uart+16
; end of ?ICS?lstr15_uart
;,0 :: _initBlock_12 [28]
; Containing: ?ICS?lstr16_uart [13]
;             ?ICS?lstr17_uart [15]
0x3170	0x432B5441 ;_initBlock_12+0 : ?ICS?lstr16_uart at 0x3170
0x3174	0x48535049 ;_initBlock_12+4
0x3178	0x0A0D5455 ;_initBlock_12+8
0x317C	0x2B544100 ;_initBlock_12+12 : ?ICS?lstr17_uart at 0x317D
0x3180	0x42504153 ;_initBlock_12+16
0x3184	0x2C303D52 ;_initBlock_12+20
0x3188	0x000A0D31 ;_initBlock_12+24
; end of _initBlock_12
;,0 :: _initBlock_13 [227]
; Containing: ?ICS?lstr18_uart [13]
;             ?ICS?lstr3_uart [12]
;             ?ICS?lstr4_uart [26]
;             ?ICS?lstr1___Lib_Conversions [4]
;             ?ICS?lstr2___Lib_Conversions [2]
;             ?ICS?lstr3___Lib_Conversions [4]
;             ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
;             ?ICSsendData_url_L0 [150]
0x318C	0x432B5441 ;_initBlock_13+0 : ?ICS?lstr18_uart at 0x318C
0x3190	0x54544147 ;_initBlock_13+4
0x3194	0x0A0D303D ;_initBlock_13+8
0x3198	0x2B544100 ;_initBlock_13+12 : ?ICS?lstr3_uart at 0x3199
0x319C	0x46474D43 ;_initBlock_13+16
0x31A0	0x0A0D313D ;_initBlock_13+20
0x31A4	0x2B544100 ;_initBlock_13+24 : ?ICS?lstr4_uart at 0x31A5
0x31A8	0x53474D43 ;_initBlock_13+28
0x31AC	0x332B223D ;_initBlock_13+32
0x31B0	0x34363138 ;_initBlock_13+36
0x31B4	0x34313932 ;_initBlock_13+40
0x31B8	0x22353030 ;_initBlock_13+44
0x31BC	0x4E000A0D ;_initBlock_13+48 : ?ICS?lstr1___Lib_Conversions at 0x31BF
0x31C0	0x30004E61 ;_initBlock_13+52 : ?ICS?lstr2___Lib_Conversions at 0x31C3
0x31C4	0x464E4900 ;_initBlock_13+56 : ?ICS?lstr3___Lib_Conversions at 0x31C5
0x31C8	0x00000000 ;_initBlock_13+60 : ?ICS__Lib_System_4XX_APBAHBPrescTable at 0x31C9
0x31CC	0x03020100 ;_initBlock_13+64
0x31D0	0x03020104 ;_initBlock_13+68
0x31D4	0x08070604 ;_initBlock_13+72
0x31D8	0x2B544109 ;_initBlock_13+76 : ?ICSsendData_url_L0 at 0x31D9
0x31DC	0x50545448 ;_initBlock_13+80
0x31E0	0x41524150 ;_initBlock_13+84
0x31E4	0x5255223D ;_initBlock_13+88
0x31E8	0x222C224C ;_initBlock_13+92
0x31EC	0x70747468 ;_initBlock_13+96
0x31F0	0x612F2F3A ;_initBlock_13+100
0x31F4	0x6972617A ;_initBlock_13+104
0x31F8	0x73612E63 ;_initBlock_13+108
0x31FC	0x6F637375 ;_initBlock_13+112
0x3200	0x632E6D6D ;_initBlock_13+116
0x3204	0x393A6D6F ;_initBlock_13+120
0x3208	0x2F383939 ;_initBlock_13+124
0x320C	0x7370696D ;_initBlock_13+128
0x3210	0x676F6C2F ;_initBlock_13+132
0x3214	0x6D65743F ;_initBlock_13+136
0x3218	0x00003D70 ;_initBlock_13+140
0x321C	0x00000000 ;_initBlock_13+144
0x3220	0x00000000 ;_initBlock_13+148
0x3224	0x00000000 ;_initBlock_13+152
0x3228	0x00000000 ;_initBlock_13+156
0x322C	0x00000000 ;_initBlock_13+160
0x3230	0x00000000 ;_initBlock_13+164
0x3234	0x00000000 ;_initBlock_13+168
0x3238	0x00000000 ;_initBlock_13+172
0x323C	0x00000000 ;_initBlock_13+176
0x3240	0x00000000 ;_initBlock_13+180
0x3244	0x00000000 ;_initBlock_13+184
0x3248	0x00000000 ;_initBlock_13+188
0x324C	0x00000000 ;_initBlock_13+192
0x3250	0x00000000 ;_initBlock_13+196
0x3254	0x00000000 ;_initBlock_13+200
0x3258	0x00000000 ;_initBlock_13+204
0x325C	0x00000000 ;_initBlock_13+208
0x3260	0x00000000 ;_initBlock_13+212
0x3264	0x00000000 ;_initBlock_13+216
0x3268	0x00000000 ;_initBlock_13+220
0x326C	0x000000 ;_initBlock_13+224
; end of _initBlock_13
;__Lib_GPIO_32F4xx_Defs.c,785 :: __GPIO_MODULE_I2C3_PA8_PC9 [108]
0x3270	0x00000408 ;__GPIO_MODULE_I2C3_PA8_PC9+0
0x3274	0x00000429 ;__GPIO_MODULE_I2C3_PA8_PC9+4
0x3278	0xFFFFFFFF ;__GPIO_MODULE_I2C3_PA8_PC9+8
0x327C	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+12
0x3280	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+16
0x3284	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+20
0x3288	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+24
0x328C	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+28
0x3290	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+32
0x3294	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+36
0x3298	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+40
0x329C	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+44
0x32A0	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+48
0x32A4	0x00001028 ;__GPIO_MODULE_I2C3_PA8_PC9+52
0x32A8	0x00001028 ;__GPIO_MODULE_I2C3_PA8_PC9+56
0x32AC	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+60
0x32B0	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+64
0x32B4	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+68
0x32B8	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+72
0x32BC	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+76
0x32C0	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+80
0x32C4	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+84
0x32C8	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+88
0x32CC	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+92
0x32D0	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+96
0x32D4	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+100
0x32D8	0x00000000 ;__GPIO_MODULE_I2C3_PA8_PC9+104
; end of __GPIO_MODULE_I2C3_PA8_PC9
;humidity.c,0 :: ?ICScalcHumTemp_i_L0 [4]
0x32DC	0x00000000 ;?ICScalcHumTemp_i_L0+0
; end of ?ICScalcHumTemp_i_L0
;humidity.c,0 :: ?ICScalcHumTemp_checksum_L0 [4]
0x32E0	0x00000000 ;?ICScalcHumTemp_checksum_L0+0
; end of ?ICScalcHumTemp_checksum_L0
;humidity.c,0 :: ?ICScalcHumTemp_res_L0 [4]
0x32E4	0x00000000 ;?ICScalcHumTemp_res_L0+0
; end of ?ICScalcHumTemp_res_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [26]    _I2Cx_Get_Status
0x01A4      [24]    _I2Cx_Is_Idle
0x01BC      [26]    __Lib_I2C_123_I2Cx_Wait_For_Idle
0x01D8      [12]    _Get_Fosc_kHz
0x01E4     [252]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x02E0      [36]    _ChekXForEvent
0x0304     [180]    _I2Cx_Write
0x03B8     [652]    _I2Cx_Read
0x0644     [132]    _RCC_GetClocksFrequency
0x06C8      [70]    _GPIO_Alternate_Function_Enable
0x0710      [68]    _I2Cx_Start
0x0754     [112]    _USART2_Send
0x07C4     [468]    _I2Cx_Init_Advanced
0x0998      [36]    _I2C3_Read
0x09BC      [24]    _I2C3_Start
0x09D4      [36]    _I2C3_Write
0x09F8      [84]    _BME280_compensate_T_int32
0x0A4C     [112]    _BME_Read
0x0AC0     [280]    _sendSMS
0x0BD8      [24]    _my_Delay_us
0x0BF0      [40]    _strcpy
0x0C18     [104]    _oneWireReadBit
0x0C80      [92]    _oneWireWriteBit
0x0CDC     [172]    _USART2_Receive
0x0D88      [24]    _my_Delay_ms
0x0DA0      [40]    _BME_Write
0x0DC8      [80]    _BME_Read_DigS
0x0E18      [24]    _Delay_5500us
0x0E30      [40]    _Lcd_Chr_CP
0x0E58      [24]    _Delay_50us
0x0E70      [24]    _Delay_1us
0x0E88      [24]    _GPIO_Digital_Input
0x0EA0     [128]    _NVIC_SetIntPriority
0x0F20     [168]    _GPIO_Clk_Enable
0x0FC8      [28]    _I2C3_Init_Advanced
0x0FE4      [80]    _BME_Read_DigU
0x1034     [120]    _NVIC_IntEnable
0x10AC      [96]    _getTemperature
0x110C      [96]    _InitTimerUs
0x116C      [96]    _checkReceiveTxt
0x11CC      [28]    _strlen
0x11E8      [68]    _oneWireWrite
0x122C      [60]    _oneWireRead
0x1268      [72]    _crc8
0x12B0     [492]    _FloatToStr
0x149C     [560]    _GPIO_Config
0x16CC     [224]    _BME280_compensate_P_int32
0x17AC     [144]    _oneWireReset
0x183C     [588]    _Lcd_Init
0x1A88      [40]    _initUltrasonic
0x1AB0      [68]    _initLCD
0x1AF4     [244]    _BME280_Init
0x1BE8     [252]    _USART2_Init
0x1CE4     [260]    _RTCInit
0x1DE8     [116]    _Lcd_Out
0x1E5C      [36]    _getReceiveTxt
0x1E80     [148]    _USART2_Send_Text
0x1F14      [88]    _InitTimerMs
0x1F6C     [204]    _Lcd_Cmd
0x2038      [44]    _receive_SMS
0x2064     [104]    _getDistance
0x20CC     [924]    _sendData
0x2468      [76]    __Lib_System_4XX_SystemClockSetDefault
0x24B4     [120]    _showTempLCD
0x252C     [468]    _calcHumTemp
0x2700     [128]    _initProg
0x2780     [100]    _getPressure
0x27E4      [48]    _showText
0x2814      [56]    _sms
0x284C     [188]    _calcTemp
0x2908      [58]    ___FillZeros
0x2944      [20]    ___CC2DW
0x2958      [28]    _GPIO_Digital_Output
0x2974      [44]    _Timer2_interrupt
0x29A0      [44]    _Timer3_interrupt
0x29CC     [204]    _interruptUART
0x2A98      [64]    _interRTC
0x2AD8      [42]    ___EnableFPU
0x2B04     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x2E64     [460]    _main
0x3030       [8]    ___GenExcept
0x3038      [36]    __Lib_System_4XX_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_FloatToStr_fnum
0x0000       [4]    FARG_sendData_temp
0x0000       [4]    FARG_showTempLCD_temp
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0004       [4]    FARG_showTempLCD_hum
0x0004       [4]    FARG_sendData_hum
0x0008       [4]    FARG_sendData_pres
0x000C       [4]    FARG_sendData_dist
0x20000000       [6]    ?lstr1_lcd
0x20000006       [5]    ?lstr2_lcd
0x2000000B       [6]    ?lstr1_main
0x20000011       [5]    ?lstr2_main
0x20000016       [6]    ?lstr3_main
0x2000001C       [5]    ?lstr4_main
0x20000021       [1]    _receivedFlag
0x20000022      [16]    ?lstr1_uart
0x20000032      [14]    ?lstr2_uart
0x20000040      [11]    ?lstr5_uart
0x2000004B      [13]    ?lstr6_uart
0x20000058      [13]    ?lstr7_uart
0x20000065      [32]    ?lstr8_uart
0x20000085      [32]    ?lstr9_uart
0x200000A5      [28]    ?lstr10_uart
0x200000C1      [15]    ?lstr11_uart
0x200000D0      [14]    ?lstr12_uart
0x200000DE      [14]    ?lstr13_uart
0x200000EC      [22]    ?lstr14_uart
0x20000102      [18]    ?lstr15_uart
0x20000114      [13]    ?lstr16_uart
0x20000121      [15]    ?lstr17_uart
0x20000130      [13]    ?lstr18_uart
0x2000013D      [12]    ?lstr3_uart
0x20000149      [26]    ?lstr4_uart
0x20000163       [4]    ?lstr1___Lib_Conversions
0x20000167       [2]    ?lstr2___Lib_Conversions
0x20000169       [4]    ?lstr3___Lib_Conversions
0x2000016D      [16]    __Lib_System_4XX_APBAHBPrescTable
0x2000017D      [10]    _data_
0x20000187      [10]    _output
0x20000191       [1]    _rtcBool
0x20000192       [2]    _dig_P6
0x20000194       [4]    _t_fine
0x20000198       [2]    _dig_P5
0x2000019A       [2]    _dig_P4
0x2000019C       [2]    _dig_P3
0x2000019E       [2]    _dig_P2
0x200001A0       [2]    _dig_P1
0x200001A2       [2]    _dig_P9
0x200001A4       [2]    _dig_P8
0x200001A6       [2]    _dig_P7
0x200001A8       [2]    _dig_T1
0x200001AA       [2]    _dig_T2
0x200001AC       [2]    _dig_T3
0x200001AE       [1]    _cnt
0x200001AF       [1]    _ok
0x200001B0       [4]    _press
0x200001B4       [4]    _temp
0x200001B8       [4]    _hum
0x200001BC       [4]    _dist
0x200001C0       [9]    _scratchpad
0x200001C9       [0]    __Lib_Lcd_cmd_status
0x200001CC       [4]    _tick_ms
0x200001D0       [4]    _tick_us
0x200001D4    [1008]    _receiveUART
0x200005C4    [1006]    _transmitUART
0x200009B2     [300]    _receivedTxt
0x20000AE0       [4]    ___System_CLOCK_IN_KHZ
0x20000AE4       [4]    _I2C_Start_Ptr
0x20000AE8       [4]    _I2C_Read_Ptr
0x20000AEC       [4]    _I2C_Write_Ptr
0x20000AF0       [4]    __VOLTAGE_RANGE
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x305C       [6]    ?ICS?lstr1_lcd
0x3062       [5]    ?ICS?lstr2_lcd
0x3067       [6]    ?ICS?lstr1_main
0x306D       [5]    ?ICS?lstr2_main
0x3072       [6]    ?ICS?lstr3_main
0x3078       [5]    ?ICS?lstr4_main
0x307D       [1]    ?ICS_receivedFlag
0x307E      [16]    ?ICS?lstr1_uart
0x308E      [14]    ?ICS?lstr2_uart
0x309C      [11]    ?ICS?lstr5_uart
0x30A7      [13]    ?ICS?lstr6_uart
0x30B4      [13]    ?ICS?lstr7_uart
0x30C1      [32]    ?ICS?lstr8_uart
0x30E1      [32]    ?ICS?lstr9_uart
0x3101      [28]    ?ICS?lstr10_uart
0x311D      [15]    ?ICS?lstr11_uart
0x312C      [14]    ?ICS?lstr12_uart
0x313A      [14]    ?ICS?lstr13_uart
0x3148      [22]    ?ICS?lstr14_uart
0x315E      [18]    ?ICS?lstr15_uart
0x3170      [13]    ?ICS?lstr16_uart
0x317D      [15]    ?ICS?lstr17_uart
0x318C      [13]    ?ICS?lstr18_uart
0x3199      [12]    ?ICS?lstr3_uart
0x31A5      [26]    ?ICS?lstr4_uart
0x31BF       [4]    ?ICS?lstr1___Lib_Conversions
0x31C3       [2]    ?ICS?lstr2___Lib_Conversions
0x31C5       [4]    ?ICS?lstr3___Lib_Conversions
0x31C9      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x31D9     [150]    ?ICSsendData_url_L0
0x3270     [108]    __GPIO_MODULE_I2C3_PA8_PC9
0x32DC       [4]    ?ICScalcHumTemp_i_L0
0x32E0       [4]    ?ICScalcHumTemp_checksum_L0
0x32E4       [4]    ?ICScalcHumTemp_res_L0
